{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-d0e88efeabe3eb8d.js","src/js/notiondatabase.js","node_modules/@notionhq/client/build/src/index.js","node_modules/@notionhq/client/src/index.ts","node_modules/@notionhq/client/build/src/Client.js","node_modules/@notionhq/client/src/Client.ts","node_modules/@notionhq/client/build/src/logging.js","node_modules/@notionhq/client/src/logging.ts","node_modules/@notionhq/client/build/src/utils.js","node_modules/@notionhq/client/src/utils.ts","node_modules/@notionhq/client/build/src/errors.js","node_modules/@notionhq/client/src/errors.ts","node_modules/@notionhq/client/build/src/api-endpoints.js","node_modules/@notionhq/client/src/api-endpoints.ts","node_modules/node-fetch/browser.js","node_modules/@notionhq/client/build/package.json","node_modules/@notionhq/client/build/src/helpers.js","node_modules/@notionhq/client/src/helpers.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"c971cb27dd4b8d0f\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// this will allow us to import our variable\n// the following lines are required to initialize a Notion client\nconst { Client } = require(\"@notionhq/client\");\n\nconst token_id = process.env.NOTION_TOKEN;\nconst database_id = process.env.NOTION_DATABASE_ID;\n\n// this line initializes the Notion Client using our key\nconst notion = new Client({\n  auth: \"secret_0dBn1DFW6TPgCRGf8POcVQVOdFZ02KfWI0JpXeHgrsK\",\n  //auth: \"secret_4lrws2Ic8Yv1SrBOWGwicLpoGkrqrpDFrnRHmZBbpGe\",\n});\n\nmodule.exports.getDatabase = async function () {\n  const response = await notion.databases.query({\n    database_id: \"83a0f069e9ba4c7fa80db64304d851e2\",\n    // database_id: process.env.NOTION_DATABASE_ID,\n    //database_id: \"f990d49fb610448a8399d3c0bf7349b7\",\n  });\n\n  const responseResults = response.results.map((page) => {\n    return {\n      id: page.id,\n      name: page.properties.Name.title[0]?.plain_text,\n    };\n  });\n  console.log(responseResults);\n  return responseResults;\n};\n\nmodule.exports.newEntryToDatabase = async function (\n  name,\n  phone,\n  comment,\n  location\n) {\n  const response = await notion.pages.create({\n    parent: {\n      //database_id: database_id,\n      database_id: \"83a0f069e9ba4c7fa80db64304d851e2\",\n    },\n    properties: {\n      Name: {\n        title: [\n          {\n            text: {\n              content: name,\n            },\n          },\n        ],\n      },\n      Phone: {\n        phone_number: phone,\n      },\n      Comment: {\n        rich_text: [\n          {\n            text: {\n              content: comment,\n            },\n          },\n        ],\n      },\n      Status: {\n        rich_text: [\n          {\n            text: {\n              content: \"App\",\n            },\n          },\n        ],\n      },\n      Location: {\n        select: {\n          name: location,\n        },\n      },\n    },\n  });\n\n  return response;\n};\n",null,"export { default as Client } from \"./Client\"\nexport { LogLevel, Logger } from \"./logging\"\nexport {\n  // Error codes\n  NotionErrorCode,\n  APIErrorCode,\n  ClientErrorCode,\n  // Error types\n  NotionClientError,\n  APIResponseError,\n  UnknownHTTPResponseError,\n  RequestTimeoutError,\n  // Error helpers\n  isNotionClientError,\n} from \"./errors\"\nexport {\n  collectPaginatedAPI,\n  iteratePaginatedAPI,\n  isFullBlock,\n  isFullDatabase,\n  isFullPage,\n  isFullUser,\n  isFullComment,\n} from \"./helpers\"\n",null,"import type { Agent } from \"http\"\nimport {\n  Logger,\n  LogLevel,\n  logLevelSeverity,\n  makeConsoleLogger,\n} from \"./logging\"\nimport {\n  buildRequestError,\n  isHTTPResponseError,\n  isNotionClientError,\n  RequestTimeoutError,\n} from \"./errors\"\nimport { pick } from \"./utils\"\nimport {\n  GetBlockParameters,\n  GetBlockResponse,\n  getBlock,\n  UpdateBlockParameters,\n  UpdateBlockResponse,\n  updateBlock,\n  DeleteBlockParameters,\n  DeleteBlockResponse,\n  deleteBlock,\n  AppendBlockChildrenParameters,\n  AppendBlockChildrenResponse,\n  appendBlockChildren,\n  ListBlockChildrenParameters,\n  ListBlockChildrenResponse,\n  listBlockChildren,\n  ListDatabasesParameters,\n  ListDatabasesResponse,\n  listDatabases,\n  GetDatabaseParameters,\n  GetDatabaseResponse,\n  getDatabase,\n  QueryDatabaseParameters,\n  QueryDatabaseResponse,\n  queryDatabase,\n  CreateDatabaseParameters,\n  CreateDatabaseResponse,\n  createDatabase,\n  UpdateDatabaseParameters,\n  UpdateDatabaseResponse,\n  updateDatabase,\n  CreatePageParameters,\n  CreatePageResponse,\n  createPage,\n  GetPageParameters,\n  GetPageResponse,\n  getPage,\n  UpdatePageParameters,\n  UpdatePageResponse,\n  updatePage,\n  GetUserParameters,\n  GetUserResponse,\n  getUser,\n  ListUsersParameters,\n  ListUsersResponse,\n  listUsers,\n  SearchParameters,\n  SearchResponse,\n  search,\n  GetSelfParameters,\n  GetSelfResponse,\n  getSelf,\n  GetPagePropertyParameters,\n  GetPagePropertyResponse,\n  getPageProperty,\n  CreateCommentParameters,\n  CreateCommentResponse,\n  createComment,\n  ListCommentsParameters,\n  ListCommentsResponse,\n  listComments,\n} from \"./api-endpoints\"\nimport nodeFetch from \"node-fetch\"\nimport {\n  version as PACKAGE_VERSION,\n  name as PACKAGE_NAME,\n} from \"../package.json\"\nimport { SupportedFetch } from \"./fetch-types\"\n\nexport interface ClientOptions {\n  auth?: string\n  timeoutMs?: number\n  baseUrl?: string\n  logLevel?: LogLevel\n  logger?: Logger\n  notionVersion?: string\n  fetch?: SupportedFetch\n  /** Silently ignored in the browser */\n  agent?: Agent\n}\n\nexport interface RequestParameters {\n  path: string\n  method: Method\n  query?: QueryParams\n  body?: Record<string, unknown>\n  auth?: string\n}\n\nexport default class Client {\n  #auth?: string\n  #logLevel: LogLevel\n  #logger: Logger\n  #prefixUrl: string\n  #timeoutMs: number\n  #notionVersion: string\n  #fetch: SupportedFetch\n  #agent: Agent | undefined\n  #userAgent: string\n\n  static readonly defaultNotionVersion = \"2022-06-28\"\n\n  public constructor(options?: ClientOptions) {\n    this.#auth = options?.auth\n    this.#logLevel = options?.logLevel ?? LogLevel.WARN\n    this.#logger = options?.logger ?? makeConsoleLogger(PACKAGE_NAME)\n    this.#prefixUrl = (options?.baseUrl ?? \"https://api.notion.com\") + \"/v1/\"\n    this.#timeoutMs = options?.timeoutMs ?? 60_000\n    this.#notionVersion = options?.notionVersion ?? Client.defaultNotionVersion\n    this.#fetch = options?.fetch ?? nodeFetch\n    this.#agent = options?.agent\n    this.#userAgent = `notionhq-client/${PACKAGE_VERSION}`\n  }\n\n  /**\n   * Sends a request.\n   *\n   * @param path\n   * @param method\n   * @param query\n   * @param body\n   * @returns\n   */\n  public async request<ResponseBody>({\n    path,\n    method,\n    query,\n    body,\n    auth,\n  }: RequestParameters): Promise<ResponseBody> {\n    this.log(LogLevel.INFO, \"request start\", { method, path })\n\n    // If the body is empty, don't send the body in the HTTP request\n    const bodyAsJsonString =\n      !body || Object.entries(body).length === 0\n        ? undefined\n        : JSON.stringify(body)\n\n    const url = new URL(`${this.#prefixUrl}${path}`)\n    if (query) {\n      for (const [key, value] of Object.entries(query)) {\n        if (value !== undefined) {\n          if (Array.isArray(value)) {\n            value.forEach(val => url.searchParams.append(key, String(val)))\n          } else {\n            url.searchParams.append(key, String(value))\n          }\n        }\n      }\n    }\n\n    const headers: Record<string, string> = {\n      ...this.authAsHeaders(auth),\n      \"Notion-Version\": this.#notionVersion,\n      \"user-agent\": this.#userAgent,\n    }\n\n    if (bodyAsJsonString !== undefined) {\n      headers[\"content-type\"] = \"application/json\"\n    }\n    try {\n      const response = await RequestTimeoutError.rejectAfterTimeout(\n        this.#fetch(url.toString(), {\n          method: method.toUpperCase(),\n          headers,\n          body: bodyAsJsonString,\n          agent: this.#agent,\n        }),\n        this.#timeoutMs\n      )\n\n      const responseText = await response.text()\n      if (!response.ok) {\n        throw buildRequestError(response, responseText)\n      }\n\n      const responseJson: ResponseBody = JSON.parse(responseText)\n      this.log(LogLevel.INFO, `request success`, { method, path })\n      return responseJson\n    } catch (error: unknown) {\n      if (!isNotionClientError(error)) {\n        throw error\n      }\n\n      // Log the error if it's one of our known error types\n      this.log(LogLevel.WARN, `request fail`, {\n        code: error.code,\n        message: error.message,\n      })\n\n      if (isHTTPResponseError(error)) {\n        // The response body may contain sensitive information so it is logged separately at the DEBUG level\n        this.log(LogLevel.DEBUG, `failed response body`, {\n          body: error.body,\n        })\n      }\n\n      throw error\n    }\n  }\n\n  /*\n   * Notion API endpoints\n   */\n\n  public readonly blocks = {\n    /**\n     * Retrieve block\n     */\n    retrieve: (\n      args: WithAuth<GetBlockParameters>\n    ): Promise<GetBlockResponse> => {\n      return this.request<GetBlockResponse>({\n        path: getBlock.path(args),\n        method: getBlock.method,\n        query: pick(args, getBlock.queryParams),\n        body: pick(args, getBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update block\n     */\n    update: (\n      args: WithAuth<UpdateBlockParameters>\n    ): Promise<UpdateBlockResponse> => {\n      return this.request<UpdateBlockResponse>({\n        path: updateBlock.path(args),\n        method: updateBlock.method,\n        query: pick(args, updateBlock.queryParams),\n        body: pick(args, updateBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Delete block\n     */\n    delete: (\n      args: WithAuth<DeleteBlockParameters>\n    ): Promise<DeleteBlockResponse> => {\n      return this.request<DeleteBlockResponse>({\n        path: deleteBlock.path(args),\n        method: deleteBlock.method,\n        query: pick(args, deleteBlock.queryParams),\n        body: pick(args, deleteBlock.bodyParams),\n        auth: args?.auth,\n      })\n    },\n    children: {\n      /**\n       * Append block children\n       */\n      append: (\n        args: WithAuth<AppendBlockChildrenParameters>\n      ): Promise<AppendBlockChildrenResponse> => {\n        return this.request<AppendBlockChildrenResponse>({\n          path: appendBlockChildren.path(args),\n          method: appendBlockChildren.method,\n          query: pick(args, appendBlockChildren.queryParams),\n          body: pick(args, appendBlockChildren.bodyParams),\n          auth: args?.auth,\n        })\n      },\n\n      /**\n       * Retrieve block children\n       */\n      list: (\n        args: WithAuth<ListBlockChildrenParameters>\n      ): Promise<ListBlockChildrenResponse> => {\n        return this.request<ListBlockChildrenResponse>({\n          path: listBlockChildren.path(args),\n          method: listBlockChildren.method,\n          query: pick(args, listBlockChildren.queryParams),\n          body: pick(args, listBlockChildren.bodyParams),\n          auth: args?.auth,\n        })\n      },\n    },\n  }\n\n  public readonly databases = {\n    /**\n     * List databases\n     *\n     * @deprecated Please use `search`\n     */\n    list: (\n      args: WithAuth<ListDatabasesParameters>\n    ): Promise<ListDatabasesResponse> => {\n      return this.request<ListDatabasesResponse>({\n        path: listDatabases.path(),\n        method: listDatabases.method,\n        query: pick(args, listDatabases.queryParams),\n        body: pick(args, listDatabases.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Retrieve a database\n     */\n    retrieve: (\n      args: WithAuth<GetDatabaseParameters>\n    ): Promise<GetDatabaseResponse> => {\n      return this.request<GetDatabaseResponse>({\n        path: getDatabase.path(args),\n        method: getDatabase.method,\n        query: pick(args, getDatabase.queryParams),\n        body: pick(args, getDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Query a database\n     */\n    query: (\n      args: WithAuth<QueryDatabaseParameters>\n    ): Promise<QueryDatabaseResponse> => {\n      return this.request<QueryDatabaseResponse>({\n        path: queryDatabase.path(args),\n        method: queryDatabase.method,\n        query: pick(args, queryDatabase.queryParams),\n        body: pick(args, queryDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Create a database\n     */\n    create: (\n      args: WithAuth<CreateDatabaseParameters>\n    ): Promise<CreateDatabaseResponse> => {\n      return this.request<CreateDatabaseResponse>({\n        path: createDatabase.path(),\n        method: createDatabase.method,\n        query: pick(args, createDatabase.queryParams),\n        body: pick(args, createDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update a database\n     */\n    update: (\n      args: WithAuth<UpdateDatabaseParameters>\n    ): Promise<UpdateDatabaseResponse> => {\n      return this.request<UpdateDatabaseResponse>({\n        path: updateDatabase.path(args),\n        method: updateDatabase.method,\n        query: pick(args, updateDatabase.queryParams),\n        body: pick(args, updateDatabase.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  public readonly pages = {\n    /**\n     * Create a page\n     */\n    create: (\n      args: WithAuth<CreatePageParameters>\n    ): Promise<CreatePageResponse> => {\n      return this.request<CreatePageResponse>({\n        path: createPage.path(),\n        method: createPage.method,\n        query: pick(args, createPage.queryParams),\n        body: pick(args, createPage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Retrieve a page\n     */\n    retrieve: (args: WithAuth<GetPageParameters>): Promise<GetPageResponse> => {\n      return this.request<GetPageResponse>({\n        path: getPage.path(args),\n        method: getPage.method,\n        query: pick(args, getPage.queryParams),\n        body: pick(args, getPage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Update page properties\n     */\n    update: (\n      args: WithAuth<UpdatePageParameters>\n    ): Promise<UpdatePageResponse> => {\n      return this.request<UpdatePageResponse>({\n        path: updatePage.path(args),\n        method: updatePage.method,\n        query: pick(args, updatePage.queryParams),\n        body: pick(args, updatePage.bodyParams),\n        auth: args?.auth,\n      })\n    },\n    properties: {\n      /**\n       * Retrieve page property\n       */\n      retrieve: (\n        args: WithAuth<GetPagePropertyParameters>\n      ): Promise<GetPagePropertyResponse> => {\n        return this.request<GetPagePropertyResponse>({\n          path: getPageProperty.path(args),\n          method: getPageProperty.method,\n          query: pick(args, getPageProperty.queryParams),\n          body: pick(args, getPageProperty.bodyParams),\n          auth: args?.auth,\n        })\n      },\n    },\n  }\n\n  public readonly users = {\n    /**\n     * Retrieve a user\n     */\n    retrieve: (args: WithAuth<GetUserParameters>): Promise<GetUserResponse> => {\n      return this.request<GetUserResponse>({\n        path: getUser.path(args),\n        method: getUser.method,\n        query: pick(args, getUser.queryParams),\n        body: pick(args, getUser.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * List all users\n     */\n    list: (args: WithAuth<ListUsersParameters>): Promise<ListUsersResponse> => {\n      return this.request<ListUsersResponse>({\n        path: listUsers.path(),\n        method: listUsers.method,\n        query: pick(args, listUsers.queryParams),\n        body: pick(args, listUsers.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * Get details about bot\n     */\n    me: (args: WithAuth<GetSelfParameters>): Promise<GetSelfResponse> => {\n      return this.request<GetSelfResponse>({\n        path: getSelf.path(),\n        method: getSelf.method,\n        query: pick(args, getSelf.queryParams),\n        body: pick(args, getSelf.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  public readonly comments = {\n    /**\n     * Create a comment\n     */\n    create: (\n      args: WithAuth<CreateCommentParameters>\n    ): Promise<CreateCommentResponse> => {\n      return this.request<CreateCommentResponse>({\n        path: createComment.path(),\n        method: createComment.method,\n        query: pick(args, createComment.queryParams),\n        body: pick(args, createComment.bodyParams),\n        auth: args?.auth,\n      })\n    },\n\n    /**\n     * List comments\n     */\n    list: (\n      args: WithAuth<ListCommentsParameters>\n    ): Promise<ListCommentsResponse> => {\n      return this.request<ListCommentsResponse>({\n        path: listComments.path(),\n        method: listComments.method,\n        query: pick(args, listComments.queryParams),\n        body: pick(args, listComments.bodyParams),\n        auth: args?.auth,\n      })\n    },\n  }\n\n  /**\n   * Search\n   */\n  public search = (\n    args: WithAuth<SearchParameters>\n  ): Promise<SearchResponse> => {\n    return this.request<SearchResponse>({\n      path: search.path(),\n      method: search.method,\n      query: pick(args, search.queryParams),\n      body: pick(args, search.bodyParams),\n      auth: args?.auth,\n    })\n  }\n\n  /**\n   * Emits a log message to the console.\n   *\n   * @param level The level for this message\n   * @param args Arguments to send to the console\n   */\n  private log(\n    level: LogLevel,\n    message: string,\n    extraInfo: Record<string, unknown>\n  ) {\n    if (logLevelSeverity(level) >= logLevelSeverity(this.#logLevel)) {\n      this.#logger(level, message, extraInfo)\n    }\n  }\n\n  /**\n   * Transforms an API key or access token into a headers object suitable for an HTTP request.\n   *\n   * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n   * an empty object\n   *\n   * @param auth API key or access token\n   * @returns headers key-value object\n   */\n  private authAsHeaders(auth?: string): Record<string, string> {\n    const headers: Record<string, string> = {}\n    const authHeaderValue = auth ?? this.#auth\n    if (authHeaderValue !== undefined) {\n      headers[\"authorization\"] = `Bearer ${authHeaderValue}`\n    }\n    return headers\n  }\n}\n\n/*\n * Type aliases to support the generic request interface.\n */\ntype Method = \"get\" | \"post\" | \"patch\" | \"delete\"\ntype QueryParams = Record<string, string | number | string[]> | URLSearchParams\n\ntype WithAuth<P> = P & { auth?: string }\n",null,"import { assertNever } from \"./utils\"\n\nexport enum LogLevel {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  WARN = \"warn\",\n  ERROR = \"error\",\n}\n\nexport interface Logger {\n  (level: LogLevel, message: string, extraInfo: Record<string, unknown>): void\n}\n\nexport function makeConsoleLogger(name: string): Logger {\n  return (level, message, extraInfo) => {\n    console[level](`${name} ${level}:`, message, extraInfo)\n  }\n}\n\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nexport function logLevelSeverity(level: LogLevel): number {\n  switch (level) {\n    case LogLevel.DEBUG:\n      return 20\n    case LogLevel.INFO:\n      return 40\n    case LogLevel.WARN:\n      return 60\n    case LogLevel.ERROR:\n      return 80\n    default:\n      return assertNever(level)\n  }\n}\n",null,"/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nexport function assertNever(value: never): never {\n  throw new Error(`Unexpected value should never occur: ${value}`)\n}\n\ntype AllKeys<T> = T extends unknown ? keyof T : never\n\nexport function pick<O, K extends AllKeys<O>>(\n  base: O,\n  keys: readonly K[]\n): Pick<O, K> {\n  const entries = keys.map(key => [key, base?.[key]])\n  return Object.fromEntries(entries)\n}\n\nexport function isObject(o: unknown): o is Record<PropertyKey, unknown> {\n  return typeof o === \"object\" && o !== null\n}\n",null,"import { SupportedResponse } from \"./fetch-types\"\nimport { isObject } from \"./utils\"\nimport { Assert } from \"./type-utils\"\n\n/**\n * Error codes returned in responses from the API.\n */\nexport enum APIErrorCode {\n  Unauthorized = \"unauthorized\",\n  RestrictedResource = \"restricted_resource\",\n  ObjectNotFound = \"object_not_found\",\n  RateLimited = \"rate_limited\",\n  InvalidJSON = \"invalid_json\",\n  InvalidRequestURL = \"invalid_request_url\",\n  InvalidRequest = \"invalid_request\",\n  ValidationError = \"validation_error\",\n  ConflictError = \"conflict_error\",\n  InternalServerError = \"internal_server_error\",\n  ServiceUnavailable = \"service_unavailable\",\n}\n\n/**\n * Error codes generated for client errors.\n */\nexport enum ClientErrorCode {\n  RequestTimeout = \"notionhq_client_request_timeout\",\n  ResponseError = \"notionhq_client_response_error\",\n}\n\n/**\n * Error codes on errors thrown by the `Client`.\n */\nexport type NotionErrorCode = APIErrorCode | ClientErrorCode\n\n/**\n * Base error type.\n */\nabstract class NotionClientErrorBase<\n  Code extends NotionErrorCode\n> extends Error {\n  abstract code: Code\n}\n\n/**\n * Error type that encompasses all the kinds of errors that the Notion client will throw.\n */\nexport type NotionClientError =\n  | RequestTimeoutError\n  | UnknownHTTPResponseError\n  | APIResponseError\n\n// Assert that NotionClientError's `code` property is a narrow type.\n// This prevents us from accidentally regressing to `string`-typed name field.\ntype _assertCodeIsNarrow = Assert<NotionErrorCode, NotionClientError[\"code\"]>\n\n// Assert that the type of `name` in NotionErrorCode is a narrow type.\n// This prevents us from accidentally regressing to `string`-typed name field.\ntype _assertNameIsNarrow = Assert<\n  \"RequestTimeoutError\" | \"UnknownHTTPResponseError\" | \"APIResponseError\",\n  NotionClientError[\"name\"]\n>\n\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nexport function isNotionClientError(\n  error: unknown\n): error is NotionClientError {\n  return isObject(error) && error instanceof NotionClientErrorBase\n}\n\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode<Code extends NotionErrorCode>(\n  error: unknown,\n  codes: { [C in Code]: true }\n): error is NotionClientError & { code: Code } {\n  return isNotionClientError(error) && error.code in codes\n}\n\n/**\n * Error thrown by the client if a request times out.\n */\nexport class RequestTimeoutError extends NotionClientErrorBase<ClientErrorCode.RequestTimeout> {\n  readonly code = ClientErrorCode.RequestTimeout\n  readonly name = \"RequestTimeoutError\"\n\n  constructor(message = \"Request to Notion API has timed out\") {\n    super(message)\n  }\n\n  static isRequestTimeoutError(error: unknown): error is RequestTimeoutError {\n    return isNotionClientErrorWithCode(error, {\n      [ClientErrorCode.RequestTimeout]: true,\n    })\n  }\n\n  static rejectAfterTimeout<T>(\n    promise: Promise<T>,\n    timeoutMS: number\n  ): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new RequestTimeoutError())\n      }, timeoutMS)\n\n      promise\n        .then(resolve)\n        .catch(reject)\n        .then(() => clearTimeout(timeoutId))\n    })\n  }\n}\n\ntype HTTPResponseErrorCode = ClientErrorCode.ResponseError | APIErrorCode\n\nclass HTTPResponseError<\n  Code extends HTTPResponseErrorCode\n> extends NotionClientErrorBase<Code> {\n  readonly name: string = \"HTTPResponseError\"\n  readonly code: Code\n  readonly status: number\n  readonly headers: SupportedResponse[\"headers\"]\n  readonly body: string\n\n  constructor(args: {\n    code: Code\n    status: number\n    message: string\n    headers: SupportedResponse[\"headers\"]\n    rawBodyText: string\n  }) {\n    super(args.message)\n    const { code, status, headers, rawBodyText } = args\n    this.code = code\n    this.status = status\n    this.headers = headers\n    this.body = rawBodyText\n  }\n}\n\nconst httpResponseErrorCodes: { [C in HTTPResponseErrorCode]: true } = {\n  [ClientErrorCode.ResponseError]: true,\n  [APIErrorCode.Unauthorized]: true,\n  [APIErrorCode.RestrictedResource]: true,\n  [APIErrorCode.ObjectNotFound]: true,\n  [APIErrorCode.RateLimited]: true,\n  [APIErrorCode.InvalidJSON]: true,\n  [APIErrorCode.InvalidRequestURL]: true,\n  [APIErrorCode.InvalidRequest]: true,\n  [APIErrorCode.ValidationError]: true,\n  [APIErrorCode.ConflictError]: true,\n  [APIErrorCode.InternalServerError]: true,\n  [APIErrorCode.ServiceUnavailable]: true,\n}\n\nexport function isHTTPResponseError(\n  error: unknown\n): error is UnknownHTTPResponseError | APIResponseError {\n  if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n    return false\n  }\n\n  type _assert = Assert<\n    UnknownHTTPResponseError | APIResponseError,\n    typeof error\n  >\n\n  return true\n}\n\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nexport class UnknownHTTPResponseError extends HTTPResponseError<ClientErrorCode.ResponseError> {\n  readonly name = \"UnknownHTTPResponseError\"\n\n  constructor(args: {\n    status: number\n    message: string | undefined\n    headers: SupportedResponse[\"headers\"]\n    rawBodyText: string\n  }) {\n    super({\n      ...args,\n      code: ClientErrorCode.ResponseError,\n      message:\n        args.message ??\n        `Request to Notion API failed with status: ${args.status}`,\n    })\n  }\n\n  static isUnknownHTTPResponseError(\n    error: unknown\n  ): error is UnknownHTTPResponseError {\n    return isNotionClientErrorWithCode(error, {\n      [ClientErrorCode.ResponseError]: true,\n    })\n  }\n}\n\nconst apiErrorCodes: { [C in APIErrorCode]: true } = {\n  [APIErrorCode.Unauthorized]: true,\n  [APIErrorCode.RestrictedResource]: true,\n  [APIErrorCode.ObjectNotFound]: true,\n  [APIErrorCode.RateLimited]: true,\n  [APIErrorCode.InvalidJSON]: true,\n  [APIErrorCode.InvalidRequestURL]: true,\n  [APIErrorCode.InvalidRequest]: true,\n  [APIErrorCode.ValidationError]: true,\n  [APIErrorCode.ConflictError]: true,\n  [APIErrorCode.InternalServerError]: true,\n  [APIErrorCode.ServiceUnavailable]: true,\n}\n\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nexport class APIResponseError extends HTTPResponseError<APIErrorCode> {\n  readonly name = \"APIResponseError\"\n\n  static isAPIResponseError(error: unknown): error is APIResponseError {\n    return isNotionClientErrorWithCode(error, apiErrorCodes)\n  }\n}\n\nexport function buildRequestError(\n  response: SupportedResponse,\n  bodyText: string\n): APIResponseError | UnknownHTTPResponseError {\n  const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText)\n  if (apiErrorResponseBody !== undefined) {\n    return new APIResponseError({\n      code: apiErrorResponseBody.code,\n      message: apiErrorResponseBody.message,\n      headers: response.headers,\n      status: response.status,\n      rawBodyText: bodyText,\n    })\n  }\n  return new UnknownHTTPResponseError({\n    message: undefined,\n    headers: response.headers,\n    status: response.status,\n    rawBodyText: bodyText,\n  })\n}\n\nfunction parseAPIErrorResponseBody(\n  body: string\n): { code: APIErrorCode; message: string } | undefined {\n  if (typeof body !== \"string\") {\n    return\n  }\n\n  let parsed: unknown\n  try {\n    parsed = JSON.parse(body)\n  } catch (parseError) {\n    return\n  }\n\n  if (\n    !isObject(parsed) ||\n    typeof parsed[\"message\"] !== \"string\" ||\n    !isAPIErrorCode(parsed[\"code\"])\n  ) {\n    return\n  }\n\n  return {\n    ...parsed,\n    code: parsed[\"code\"],\n    message: parsed[\"message\"],\n  }\n}\n\nfunction isAPIErrorCode(code: unknown): code is APIErrorCode {\n  return typeof code === \"string\" && code in apiErrorCodes\n}\n",null,"// cspell:disable-file\n// Note: This is a generated file.\n\ntype IdRequest = string | string\n\nexport type PersonUserObjectResponse = {\n  type: \"person\"\n  person: { email?: string }\n  name: string | null\n  avatar_url: string | null\n  id: IdRequest\n  object: \"user\"\n}\n\ntype EmptyObject = Record<string, never>\n\nexport type PartialUserObjectResponse = { id: IdRequest; object: \"user\" }\n\nexport type BotUserObjectResponse = {\n  type: \"bot\"\n  bot:\n    | EmptyObject\n    | {\n        owner:\n          | {\n              type: \"user\"\n              user:\n                | {\n                    type: \"person\"\n                    person: { email: string }\n                    name: string | null\n                    avatar_url: string | null\n                    id: IdRequest\n                    object: \"user\"\n                  }\n                | PartialUserObjectResponse\n            }\n          | { type: \"workspace\"; workspace: true }\n        workspace_name: string | null\n      }\n  name: string | null\n  avatar_url: string | null\n  id: IdRequest\n  object: \"user\"\n}\n\nexport type UserObjectResponse =\n  | PersonUserObjectResponse\n  | BotUserObjectResponse\n\ntype StringRequest = string\n\ntype SelectColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n\ntype SelectPropertyResponse = {\n  id: StringRequest\n  name: StringRequest\n  color: SelectColor\n}\n\ntype TimeZoneRequest =\n  | \"Africa/Abidjan\"\n  | \"Africa/Accra\"\n  | \"Africa/Addis_Ababa\"\n  | \"Africa/Algiers\"\n  | \"Africa/Asmara\"\n  | \"Africa/Asmera\"\n  | \"Africa/Bamako\"\n  | \"Africa/Bangui\"\n  | \"Africa/Banjul\"\n  | \"Africa/Bissau\"\n  | \"Africa/Blantyre\"\n  | \"Africa/Brazzaville\"\n  | \"Africa/Bujumbura\"\n  | \"Africa/Cairo\"\n  | \"Africa/Casablanca\"\n  | \"Africa/Ceuta\"\n  | \"Africa/Conakry\"\n  | \"Africa/Dakar\"\n  | \"Africa/Dar_es_Salaam\"\n  | \"Africa/Djibouti\"\n  | \"Africa/Douala\"\n  | \"Africa/El_Aaiun\"\n  | \"Africa/Freetown\"\n  | \"Africa/Gaborone\"\n  | \"Africa/Harare\"\n  | \"Africa/Johannesburg\"\n  | \"Africa/Juba\"\n  | \"Africa/Kampala\"\n  | \"Africa/Khartoum\"\n  | \"Africa/Kigali\"\n  | \"Africa/Kinshasa\"\n  | \"Africa/Lagos\"\n  | \"Africa/Libreville\"\n  | \"Africa/Lome\"\n  | \"Africa/Luanda\"\n  | \"Africa/Lubumbashi\"\n  | \"Africa/Lusaka\"\n  | \"Africa/Malabo\"\n  | \"Africa/Maputo\"\n  | \"Africa/Maseru\"\n  | \"Africa/Mbabane\"\n  | \"Africa/Mogadishu\"\n  | \"Africa/Monrovia\"\n  | \"Africa/Nairobi\"\n  | \"Africa/Ndjamena\"\n  | \"Africa/Niamey\"\n  | \"Africa/Nouakchott\"\n  | \"Africa/Ouagadougou\"\n  | \"Africa/Porto-Novo\"\n  | \"Africa/Sao_Tome\"\n  | \"Africa/Timbuktu\"\n  | \"Africa/Tripoli\"\n  | \"Africa/Tunis\"\n  | \"Africa/Windhoek\"\n  | \"America/Adak\"\n  | \"America/Anchorage\"\n  | \"America/Anguilla\"\n  | \"America/Antigua\"\n  | \"America/Araguaina\"\n  | \"America/Argentina/Buenos_Aires\"\n  | \"America/Argentina/Catamarca\"\n  | \"America/Argentina/ComodRivadavia\"\n  | \"America/Argentina/Cordoba\"\n  | \"America/Argentina/Jujuy\"\n  | \"America/Argentina/La_Rioja\"\n  | \"America/Argentina/Mendoza\"\n  | \"America/Argentina/Rio_Gallegos\"\n  | \"America/Argentina/Salta\"\n  | \"America/Argentina/San_Juan\"\n  | \"America/Argentina/San_Luis\"\n  | \"America/Argentina/Tucuman\"\n  | \"America/Argentina/Ushuaia\"\n  | \"America/Aruba\"\n  | \"America/Asuncion\"\n  | \"America/Atikokan\"\n  | \"America/Atka\"\n  | \"America/Bahia\"\n  | \"America/Bahia_Banderas\"\n  | \"America/Barbados\"\n  | \"America/Belem\"\n  | \"America/Belize\"\n  | \"America/Blanc-Sablon\"\n  | \"America/Boa_Vista\"\n  | \"America/Bogota\"\n  | \"America/Boise\"\n  | \"America/Buenos_Aires\"\n  | \"America/Cambridge_Bay\"\n  | \"America/Campo_Grande\"\n  | \"America/Cancun\"\n  | \"America/Caracas\"\n  | \"America/Catamarca\"\n  | \"America/Cayenne\"\n  | \"America/Cayman\"\n  | \"America/Chicago\"\n  | \"America/Chihuahua\"\n  | \"America/Coral_Harbour\"\n  | \"America/Cordoba\"\n  | \"America/Costa_Rica\"\n  | \"America/Creston\"\n  | \"America/Cuiaba\"\n  | \"America/Curacao\"\n  | \"America/Danmarkshavn\"\n  | \"America/Dawson\"\n  | \"America/Dawson_Creek\"\n  | \"America/Denver\"\n  | \"America/Detroit\"\n  | \"America/Dominica\"\n  | \"America/Edmonton\"\n  | \"America/Eirunepe\"\n  | \"America/El_Salvador\"\n  | \"America/Ensenada\"\n  | \"America/Fort_Nelson\"\n  | \"America/Fort_Wayne\"\n  | \"America/Fortaleza\"\n  | \"America/Glace_Bay\"\n  | \"America/Godthab\"\n  | \"America/Goose_Bay\"\n  | \"America/Grand_Turk\"\n  | \"America/Grenada\"\n  | \"America/Guadeloupe\"\n  | \"America/Guatemala\"\n  | \"America/Guayaquil\"\n  | \"America/Guyana\"\n  | \"America/Halifax\"\n  | \"America/Havana\"\n  | \"America/Hermosillo\"\n  | \"America/Indiana/Indianapolis\"\n  | \"America/Indiana/Knox\"\n  | \"America/Indiana/Marengo\"\n  | \"America/Indiana/Petersburg\"\n  | \"America/Indiana/Tell_City\"\n  | \"America/Indiana/Vevay\"\n  | \"America/Indiana/Vincennes\"\n  | \"America/Indiana/Winamac\"\n  | \"America/Indianapolis\"\n  | \"America/Inuvik\"\n  | \"America/Iqaluit\"\n  | \"America/Jamaica\"\n  | \"America/Jujuy\"\n  | \"America/Juneau\"\n  | \"America/Kentucky/Louisville\"\n  | \"America/Kentucky/Monticello\"\n  | \"America/Knox_IN\"\n  | \"America/Kralendijk\"\n  | \"America/La_Paz\"\n  | \"America/Lima\"\n  | \"America/Los_Angeles\"\n  | \"America/Louisville\"\n  | \"America/Lower_Princes\"\n  | \"America/Maceio\"\n  | \"America/Managua\"\n  | \"America/Manaus\"\n  | \"America/Marigot\"\n  | \"America/Martinique\"\n  | \"America/Matamoros\"\n  | \"America/Mazatlan\"\n  | \"America/Mendoza\"\n  | \"America/Menominee\"\n  | \"America/Merida\"\n  | \"America/Metlakatla\"\n  | \"America/Mexico_City\"\n  | \"America/Miquelon\"\n  | \"America/Moncton\"\n  | \"America/Monterrey\"\n  | \"America/Montevideo\"\n  | \"America/Montreal\"\n  | \"America/Montserrat\"\n  | \"America/Nassau\"\n  | \"America/New_York\"\n  | \"America/Nipigon\"\n  | \"America/Nome\"\n  | \"America/Noronha\"\n  | \"America/North_Dakota/Beulah\"\n  | \"America/North_Dakota/Center\"\n  | \"America/North_Dakota/New_Salem\"\n  | \"America/Ojinaga\"\n  | \"America/Panama\"\n  | \"America/Pangnirtung\"\n  | \"America/Paramaribo\"\n  | \"America/Phoenix\"\n  | \"America/Port-au-Prince\"\n  | \"America/Port_of_Spain\"\n  | \"America/Porto_Acre\"\n  | \"America/Porto_Velho\"\n  | \"America/Puerto_Rico\"\n  | \"America/Punta_Arenas\"\n  | \"America/Rainy_River\"\n  | \"America/Rankin_Inlet\"\n  | \"America/Recife\"\n  | \"America/Regina\"\n  | \"America/Resolute\"\n  | \"America/Rio_Branco\"\n  | \"America/Rosario\"\n  | \"America/Santa_Isabel\"\n  | \"America/Santarem\"\n  | \"America/Santiago\"\n  | \"America/Santo_Domingo\"\n  | \"America/Sao_Paulo\"\n  | \"America/Scoresbysund\"\n  | \"America/Shiprock\"\n  | \"America/Sitka\"\n  | \"America/St_Barthelemy\"\n  | \"America/St_Johns\"\n  | \"America/St_Kitts\"\n  | \"America/St_Lucia\"\n  | \"America/St_Thomas\"\n  | \"America/St_Vincent\"\n  | \"America/Swift_Current\"\n  | \"America/Tegucigalpa\"\n  | \"America/Thule\"\n  | \"America/Thunder_Bay\"\n  | \"America/Tijuana\"\n  | \"America/Toronto\"\n  | \"America/Tortola\"\n  | \"America/Vancouver\"\n  | \"America/Virgin\"\n  | \"America/Whitehorse\"\n  | \"America/Winnipeg\"\n  | \"America/Yakutat\"\n  | \"America/Yellowknife\"\n  | \"Antarctica/Casey\"\n  | \"Antarctica/Davis\"\n  | \"Antarctica/DumontDUrville\"\n  | \"Antarctica/Macquarie\"\n  | \"Antarctica/Mawson\"\n  | \"Antarctica/McMurdo\"\n  | \"Antarctica/Palmer\"\n  | \"Antarctica/Rothera\"\n  | \"Antarctica/South_Pole\"\n  | \"Antarctica/Syowa\"\n  | \"Antarctica/Troll\"\n  | \"Antarctica/Vostok\"\n  | \"Arctic/Longyearbyen\"\n  | \"Asia/Aden\"\n  | \"Asia/Almaty\"\n  | \"Asia/Amman\"\n  | \"Asia/Anadyr\"\n  | \"Asia/Aqtau\"\n  | \"Asia/Aqtobe\"\n  | \"Asia/Ashgabat\"\n  | \"Asia/Ashkhabad\"\n  | \"Asia/Atyrau\"\n  | \"Asia/Baghdad\"\n  | \"Asia/Bahrain\"\n  | \"Asia/Baku\"\n  | \"Asia/Bangkok\"\n  | \"Asia/Barnaul\"\n  | \"Asia/Beirut\"\n  | \"Asia/Bishkek\"\n  | \"Asia/Brunei\"\n  | \"Asia/Calcutta\"\n  | \"Asia/Chita\"\n  | \"Asia/Choibalsan\"\n  | \"Asia/Chongqing\"\n  | \"Asia/Chungking\"\n  | \"Asia/Colombo\"\n  | \"Asia/Dacca\"\n  | \"Asia/Damascus\"\n  | \"Asia/Dhaka\"\n  | \"Asia/Dili\"\n  | \"Asia/Dubai\"\n  | \"Asia/Dushanbe\"\n  | \"Asia/Famagusta\"\n  | \"Asia/Gaza\"\n  | \"Asia/Harbin\"\n  | \"Asia/Hebron\"\n  | \"Asia/Ho_Chi_Minh\"\n  | \"Asia/Hong_Kong\"\n  | \"Asia/Hovd\"\n  | \"Asia/Irkutsk\"\n  | \"Asia/Istanbul\"\n  | \"Asia/Jakarta\"\n  | \"Asia/Jayapura\"\n  | \"Asia/Jerusalem\"\n  | \"Asia/Kabul\"\n  | \"Asia/Kamchatka\"\n  | \"Asia/Karachi\"\n  | \"Asia/Kashgar\"\n  | \"Asia/Kathmandu\"\n  | \"Asia/Katmandu\"\n  | \"Asia/Khandyga\"\n  | \"Asia/Kolkata\"\n  | \"Asia/Krasnoyarsk\"\n  | \"Asia/Kuala_Lumpur\"\n  | \"Asia/Kuching\"\n  | \"Asia/Kuwait\"\n  | \"Asia/Macao\"\n  | \"Asia/Macau\"\n  | \"Asia/Magadan\"\n  | \"Asia/Makassar\"\n  | \"Asia/Manila\"\n  | \"Asia/Muscat\"\n  | \"Asia/Nicosia\"\n  | \"Asia/Novokuznetsk\"\n  | \"Asia/Novosibirsk\"\n  | \"Asia/Omsk\"\n  | \"Asia/Oral\"\n  | \"Asia/Phnom_Penh\"\n  | \"Asia/Pontianak\"\n  | \"Asia/Pyongyang\"\n  | \"Asia/Qatar\"\n  | \"Asia/Qostanay\"\n  | \"Asia/Qyzylorda\"\n  | \"Asia/Rangoon\"\n  | \"Asia/Riyadh\"\n  | \"Asia/Saigon\"\n  | \"Asia/Sakhalin\"\n  | \"Asia/Samarkand\"\n  | \"Asia/Seoul\"\n  | \"Asia/Shanghai\"\n  | \"Asia/Singapore\"\n  | \"Asia/Srednekolymsk\"\n  | \"Asia/Taipei\"\n  | \"Asia/Tashkent\"\n  | \"Asia/Tbilisi\"\n  | \"Asia/Tehran\"\n  | \"Asia/Tel_Aviv\"\n  | \"Asia/Thimbu\"\n  | \"Asia/Thimphu\"\n  | \"Asia/Tokyo\"\n  | \"Asia/Tomsk\"\n  | \"Asia/Ujung_Pandang\"\n  | \"Asia/Ulaanbaatar\"\n  | \"Asia/Ulan_Bator\"\n  | \"Asia/Urumqi\"\n  | \"Asia/Ust-Nera\"\n  | \"Asia/Vientiane\"\n  | \"Asia/Vladivostok\"\n  | \"Asia/Yakutsk\"\n  | \"Asia/Yangon\"\n  | \"Asia/Yekaterinburg\"\n  | \"Asia/Yerevan\"\n  | \"Atlantic/Azores\"\n  | \"Atlantic/Bermuda\"\n  | \"Atlantic/Canary\"\n  | \"Atlantic/Cape_Verde\"\n  | \"Atlantic/Faeroe\"\n  | \"Atlantic/Faroe\"\n  | \"Atlantic/Jan_Mayen\"\n  | \"Atlantic/Madeira\"\n  | \"Atlantic/Reykjavik\"\n  | \"Atlantic/South_Georgia\"\n  | \"Atlantic/St_Helena\"\n  | \"Atlantic/Stanley\"\n  | \"Australia/ACT\"\n  | \"Australia/Adelaide\"\n  | \"Australia/Brisbane\"\n  | \"Australia/Broken_Hill\"\n  | \"Australia/Canberra\"\n  | \"Australia/Currie\"\n  | \"Australia/Darwin\"\n  | \"Australia/Eucla\"\n  | \"Australia/Hobart\"\n  | \"Australia/LHI\"\n  | \"Australia/Lindeman\"\n  | \"Australia/Lord_Howe\"\n  | \"Australia/Melbourne\"\n  | \"Australia/NSW\"\n  | \"Australia/North\"\n  | \"Australia/Perth\"\n  | \"Australia/Queensland\"\n  | \"Australia/South\"\n  | \"Australia/Sydney\"\n  | \"Australia/Tasmania\"\n  | \"Australia/Victoria\"\n  | \"Australia/West\"\n  | \"Australia/Yancowinna\"\n  | \"Brazil/Acre\"\n  | \"Brazil/DeNoronha\"\n  | \"Brazil/East\"\n  | \"Brazil/West\"\n  | \"CET\"\n  | \"CST6CDT\"\n  | \"Canada/Atlantic\"\n  | \"Canada/Central\"\n  | \"Canada/Eastern\"\n  | \"Canada/Mountain\"\n  | \"Canada/Newfoundland\"\n  | \"Canada/Pacific\"\n  | \"Canada/Saskatchewan\"\n  | \"Canada/Yukon\"\n  | \"Chile/Continental\"\n  | \"Chile/EasterIsland\"\n  | \"Cuba\"\n  | \"EET\"\n  | \"EST\"\n  | \"EST5EDT\"\n  | \"Egypt\"\n  | \"Eire\"\n  | \"Etc/GMT\"\n  | \"Etc/GMT+0\"\n  | \"Etc/GMT+1\"\n  | \"Etc/GMT+10\"\n  | \"Etc/GMT+11\"\n  | \"Etc/GMT+12\"\n  | \"Etc/GMT+2\"\n  | \"Etc/GMT+3\"\n  | \"Etc/GMT+4\"\n  | \"Etc/GMT+5\"\n  | \"Etc/GMT+6\"\n  | \"Etc/GMT+7\"\n  | \"Etc/GMT+8\"\n  | \"Etc/GMT+9\"\n  | \"Etc/GMT-0\"\n  | \"Etc/GMT-1\"\n  | \"Etc/GMT-10\"\n  | \"Etc/GMT-11\"\n  | \"Etc/GMT-12\"\n  | \"Etc/GMT-13\"\n  | \"Etc/GMT-14\"\n  | \"Etc/GMT-2\"\n  | \"Etc/GMT-3\"\n  | \"Etc/GMT-4\"\n  | \"Etc/GMT-5\"\n  | \"Etc/GMT-6\"\n  | \"Etc/GMT-7\"\n  | \"Etc/GMT-8\"\n  | \"Etc/GMT-9\"\n  | \"Etc/GMT0\"\n  | \"Etc/Greenwich\"\n  | \"Etc/UCT\"\n  | \"Etc/UTC\"\n  | \"Etc/Universal\"\n  | \"Etc/Zulu\"\n  | \"Europe/Amsterdam\"\n  | \"Europe/Andorra\"\n  | \"Europe/Astrakhan\"\n  | \"Europe/Athens\"\n  | \"Europe/Belfast\"\n  | \"Europe/Belgrade\"\n  | \"Europe/Berlin\"\n  | \"Europe/Bratislava\"\n  | \"Europe/Brussels\"\n  | \"Europe/Bucharest\"\n  | \"Europe/Budapest\"\n  | \"Europe/Busingen\"\n  | \"Europe/Chisinau\"\n  | \"Europe/Copenhagen\"\n  | \"Europe/Dublin\"\n  | \"Europe/Gibraltar\"\n  | \"Europe/Guernsey\"\n  | \"Europe/Helsinki\"\n  | \"Europe/Isle_of_Man\"\n  | \"Europe/Istanbul\"\n  | \"Europe/Jersey\"\n  | \"Europe/Kaliningrad\"\n  | \"Europe/Kiev\"\n  | \"Europe/Kirov\"\n  | \"Europe/Lisbon\"\n  | \"Europe/Ljubljana\"\n  | \"Europe/London\"\n  | \"Europe/Luxembourg\"\n  | \"Europe/Madrid\"\n  | \"Europe/Malta\"\n  | \"Europe/Mariehamn\"\n  | \"Europe/Minsk\"\n  | \"Europe/Monaco\"\n  | \"Europe/Moscow\"\n  | \"Europe/Nicosia\"\n  | \"Europe/Oslo\"\n  | \"Europe/Paris\"\n  | \"Europe/Podgorica\"\n  | \"Europe/Prague\"\n  | \"Europe/Riga\"\n  | \"Europe/Rome\"\n  | \"Europe/Samara\"\n  | \"Europe/San_Marino\"\n  | \"Europe/Sarajevo\"\n  | \"Europe/Saratov\"\n  | \"Europe/Simferopol\"\n  | \"Europe/Skopje\"\n  | \"Europe/Sofia\"\n  | \"Europe/Stockholm\"\n  | \"Europe/Tallinn\"\n  | \"Europe/Tirane\"\n  | \"Europe/Tiraspol\"\n  | \"Europe/Ulyanovsk\"\n  | \"Europe/Uzhgorod\"\n  | \"Europe/Vaduz\"\n  | \"Europe/Vatican\"\n  | \"Europe/Vienna\"\n  | \"Europe/Vilnius\"\n  | \"Europe/Volgograd\"\n  | \"Europe/Warsaw\"\n  | \"Europe/Zagreb\"\n  | \"Europe/Zaporozhye\"\n  | \"Europe/Zurich\"\n  | \"GB\"\n  | \"GB-Eire\"\n  | \"GMT\"\n  | \"GMT+0\"\n  | \"GMT-0\"\n  | \"GMT0\"\n  | \"Greenwich\"\n  | \"HST\"\n  | \"Hongkong\"\n  | \"Iceland\"\n  | \"Indian/Antananarivo\"\n  | \"Indian/Chagos\"\n  | \"Indian/Christmas\"\n  | \"Indian/Cocos\"\n  | \"Indian/Comoro\"\n  | \"Indian/Kerguelen\"\n  | \"Indian/Mahe\"\n  | \"Indian/Maldives\"\n  | \"Indian/Mauritius\"\n  | \"Indian/Mayotte\"\n  | \"Indian/Reunion\"\n  | \"Iran\"\n  | \"Israel\"\n  | \"Jamaica\"\n  | \"Japan\"\n  | \"Kwajalein\"\n  | \"Libya\"\n  | \"MET\"\n  | \"MST\"\n  | \"MST7MDT\"\n  | \"Mexico/BajaNorte\"\n  | \"Mexico/BajaSur\"\n  | \"Mexico/General\"\n  | \"NZ\"\n  | \"NZ-CHAT\"\n  | \"Navajo\"\n  | \"PRC\"\n  | \"PST8PDT\"\n  | \"Pacific/Apia\"\n  | \"Pacific/Auckland\"\n  | \"Pacific/Bougainville\"\n  | \"Pacific/Chatham\"\n  | \"Pacific/Chuuk\"\n  | \"Pacific/Easter\"\n  | \"Pacific/Efate\"\n  | \"Pacific/Enderbury\"\n  | \"Pacific/Fakaofo\"\n  | \"Pacific/Fiji\"\n  | \"Pacific/Funafuti\"\n  | \"Pacific/Galapagos\"\n  | \"Pacific/Gambier\"\n  | \"Pacific/Guadalcanal\"\n  | \"Pacific/Guam\"\n  | \"Pacific/Honolulu\"\n  | \"Pacific/Johnston\"\n  | \"Pacific/Kiritimati\"\n  | \"Pacific/Kosrae\"\n  | \"Pacific/Kwajalein\"\n  | \"Pacific/Majuro\"\n  | \"Pacific/Marquesas\"\n  | \"Pacific/Midway\"\n  | \"Pacific/Nauru\"\n  | \"Pacific/Niue\"\n  | \"Pacific/Norfolk\"\n  | \"Pacific/Noumea\"\n  | \"Pacific/Pago_Pago\"\n  | \"Pacific/Palau\"\n  | \"Pacific/Pitcairn\"\n  | \"Pacific/Pohnpei\"\n  | \"Pacific/Ponape\"\n  | \"Pacific/Port_Moresby\"\n  | \"Pacific/Rarotonga\"\n  | \"Pacific/Saipan\"\n  | \"Pacific/Samoa\"\n  | \"Pacific/Tahiti\"\n  | \"Pacific/Tarawa\"\n  | \"Pacific/Tongatapu\"\n  | \"Pacific/Truk\"\n  | \"Pacific/Wake\"\n  | \"Pacific/Wallis\"\n  | \"Pacific/Yap\"\n  | \"Poland\"\n  | \"Portugal\"\n  | \"ROC\"\n  | \"ROK\"\n  | \"Singapore\"\n  | \"Turkey\"\n  | \"UCT\"\n  | \"US/Alaska\"\n  | \"US/Aleutian\"\n  | \"US/Arizona\"\n  | \"US/Central\"\n  | \"US/East-Indiana\"\n  | \"US/Eastern\"\n  | \"US/Hawaii\"\n  | \"US/Indiana-Starke\"\n  | \"US/Michigan\"\n  | \"US/Mountain\"\n  | \"US/Pacific\"\n  | \"US/Pacific-New\"\n  | \"US/Samoa\"\n  | \"UTC\"\n  | \"Universal\"\n  | \"W-SU\"\n  | \"WET\"\n  | \"Zulu\"\n\ntype DateResponse = {\n  start: string\n  end: string | null\n  time_zone: TimeZoneRequest | null\n}\n\ntype TextRequest = string\n\ntype StringFormulaPropertyResponse = { type: \"string\"; string: string | null }\n\ntype DateFormulaPropertyResponse = { type: \"date\"; date: DateResponse | null }\n\ntype NumberFormulaPropertyResponse = { type: \"number\"; number: number | null }\n\ntype BooleanFormulaPropertyResponse = {\n  type: \"boolean\"\n  boolean: boolean | null\n}\n\ntype FormulaPropertyResponse =\n  | StringFormulaPropertyResponse\n  | DateFormulaPropertyResponse\n  | NumberFormulaPropertyResponse\n  | BooleanFormulaPropertyResponse\n\ntype AnnotationResponse = {\n  bold: boolean\n  italic: boolean\n  strikethrough: boolean\n  underline: boolean\n  code: boolean\n  color:\n    | \"default\"\n    | \"gray\"\n    | \"brown\"\n    | \"orange\"\n    | \"yellow\"\n    | \"green\"\n    | \"blue\"\n    | \"purple\"\n    | \"pink\"\n    | \"red\"\n    | \"gray_background\"\n    | \"brown_background\"\n    | \"orange_background\"\n    | \"yellow_background\"\n    | \"green_background\"\n    | \"blue_background\"\n    | \"purple_background\"\n    | \"pink_background\"\n    | \"red_background\"\n}\n\nexport type TextRichTextItemResponse = {\n  type: \"text\"\n  text: { content: string; link: { url: TextRequest } | null }\n  annotations: AnnotationResponse\n  plain_text: string\n  href: string | null\n}\n\ntype LinkPreviewMentionResponse = { url: TextRequest }\n\ntype TemplateMentionDateTemplateMentionResponse = {\n  type: \"template_mention_date\"\n  template_mention_date: \"today\" | \"now\"\n}\n\ntype TemplateMentionUserTemplateMentionResponse = {\n  type: \"template_mention_user\"\n  template_mention_user: \"me\"\n}\n\ntype TemplateMentionResponse =\n  | TemplateMentionDateTemplateMentionResponse\n  | TemplateMentionUserTemplateMentionResponse\n\nexport type MentionRichTextItemResponse = {\n  type: \"mention\"\n  mention:\n    | { type: \"user\"; user: PartialUserObjectResponse | UserObjectResponse }\n    | { type: \"date\"; date: DateResponse }\n    | { type: \"link_preview\"; link_preview: LinkPreviewMentionResponse }\n    | { type: \"template_mention\"; template_mention: TemplateMentionResponse }\n    | { type: \"page\"; page: { id: IdRequest } }\n    | { type: \"database\"; database: { id: IdRequest } }\n  annotations: AnnotationResponse\n  plain_text: string\n  href: string | null\n}\n\nexport type EquationRichTextItemResponse = {\n  type: \"equation\"\n  equation: { expression: TextRequest }\n  annotations: AnnotationResponse\n  plain_text: string\n  href: string | null\n}\n\nexport type RichTextItemResponse =\n  | TextRichTextItemResponse\n  | MentionRichTextItemResponse\n  | EquationRichTextItemResponse\n\ntype RollupFunction =\n  | \"count\"\n  | \"count_values\"\n  | \"empty\"\n  | \"not_empty\"\n  | \"unique\"\n  | \"show_unique\"\n  | \"percent_empty\"\n  | \"percent_not_empty\"\n  | \"sum\"\n  | \"average\"\n  | \"median\"\n  | \"min\"\n  | \"max\"\n  | \"range\"\n  | \"earliest_date\"\n  | \"latest_date\"\n  | \"date_range\"\n  | \"checked\"\n  | \"unchecked\"\n  | \"percent_checked\"\n  | \"percent_unchecked\"\n  | \"count_per_group\"\n  | \"percent_per_group\"\n  | \"show_original\"\n\ntype EmojiRequest =\n  | \"😀\"\n  | \"😃\"\n  | \"😄\"\n  | \"😁\"\n  | \"😆\"\n  | \"😅\"\n  | \"🤣\"\n  | \"😂\"\n  | \"🙂\"\n  | \"🙃\"\n  | \"😉\"\n  | \"😊\"\n  | \"😇\"\n  | \"🥰\"\n  | \"😍\"\n  | \"🤩\"\n  | \"😘\"\n  | \"😗\"\n  | \"☺️\"\n  | \"☺\"\n  | \"😚\"\n  | \"😙\"\n  | \"🥲\"\n  | \"😋\"\n  | \"😛\"\n  | \"😜\"\n  | \"🤪\"\n  | \"😝\"\n  | \"🤑\"\n  | \"🤗\"\n  | \"🤭\"\n  | \"🤫\"\n  | \"🤔\"\n  | \"🤐\"\n  | \"🤨\"\n  | \"😐\"\n  | \"😑\"\n  | \"😶\"\n  | \"😶‍🌫️\"\n  | \"😶‍🌫\"\n  | \"😏\"\n  | \"😒\"\n  | \"🙄\"\n  | \"😬\"\n  | \"😮‍💨\"\n  | \"🤥\"\n  | \"😌\"\n  | \"😔\"\n  | \"😪\"\n  | \"🤤\"\n  | \"😴\"\n  | \"😷\"\n  | \"🤒\"\n  | \"🤕\"\n  | \"🤢\"\n  | \"🤮\"\n  | \"🤧\"\n  | \"🥵\"\n  | \"🥶\"\n  | \"🥴\"\n  | \"😵\"\n  | \"😵‍💫\"\n  | \"🤯\"\n  | \"🤠\"\n  | \"🥳\"\n  | \"🥸\"\n  | \"😎\"\n  | \"🤓\"\n  | \"🧐\"\n  | \"😕\"\n  | \"😟\"\n  | \"🙁\"\n  | \"☹️\"\n  | \"☹\"\n  | \"😮\"\n  | \"😯\"\n  | \"😲\"\n  | \"😳\"\n  | \"🥺\"\n  | \"😦\"\n  | \"😧\"\n  | \"😨\"\n  | \"😰\"\n  | \"😥\"\n  | \"😢\"\n  | \"😭\"\n  | \"😱\"\n  | \"😖\"\n  | \"😣\"\n  | \"😞\"\n  | \"😓\"\n  | \"😩\"\n  | \"😫\"\n  | \"🥱\"\n  | \"😤\"\n  | \"😡\"\n  | \"😠\"\n  | \"🤬\"\n  | \"😈\"\n  | \"👿\"\n  | \"💀\"\n  | \"☠️\"\n  | \"☠\"\n  | \"💩\"\n  | \"🤡\"\n  | \"👹\"\n  | \"👺\"\n  | \"👻\"\n  | \"👽\"\n  | \"👾\"\n  | \"🤖\"\n  | \"😺\"\n  | \"😸\"\n  | \"😹\"\n  | \"😻\"\n  | \"😼\"\n  | \"😽\"\n  | \"🙀\"\n  | \"😿\"\n  | \"😾\"\n  | \"🙈\"\n  | \"🙉\"\n  | \"🙊\"\n  | \"💋\"\n  | \"💌\"\n  | \"💘\"\n  | \"💝\"\n  | \"💖\"\n  | \"💗\"\n  | \"💓\"\n  | \"💞\"\n  | \"💕\"\n  | \"💟\"\n  | \"❣️\"\n  | \"❣\"\n  | \"💔\"\n  | \"❤️‍🔥\"\n  | \"❤‍🔥\"\n  | \"❤️‍🩹\"\n  | \"❤‍🩹\"\n  | \"❤️\"\n  | \"❤\"\n  | \"🧡\"\n  | \"💛\"\n  | \"💚\"\n  | \"💙\"\n  | \"💜\"\n  | \"🤎\"\n  | \"🖤\"\n  | \"🤍\"\n  | \"💯\"\n  | \"💢\"\n  | \"💥\"\n  | \"💫\"\n  | \"💦\"\n  | \"💨\"\n  | \"🕳️\"\n  | \"🕳\"\n  | \"💣\"\n  | \"💬\"\n  | \"👁️‍🗨️\"\n  | \"🗨️\"\n  | \"🗨\"\n  | \"🗯️\"\n  | \"🗯\"\n  | \"💭\"\n  | \"💤\"\n  | \"👋🏻\"\n  | \"👋🏼\"\n  | \"👋🏽\"\n  | \"👋🏾\"\n  | \"👋🏿\"\n  | \"👋\"\n  | \"🤚🏻\"\n  | \"🤚🏼\"\n  | \"🤚🏽\"\n  | \"🤚🏾\"\n  | \"🤚🏿\"\n  | \"🤚\"\n  | \"🖐🏻\"\n  | \"🖐🏼\"\n  | \"🖐🏽\"\n  | \"🖐🏾\"\n  | \"🖐🏿\"\n  | \"🖐️\"\n  | \"🖐\"\n  | \"✋🏻\"\n  | \"✋🏼\"\n  | \"✋🏽\"\n  | \"✋🏾\"\n  | \"✋🏿\"\n  | \"✋\"\n  | \"🖖🏻\"\n  | \"🖖🏼\"\n  | \"🖖🏽\"\n  | \"🖖🏾\"\n  | \"🖖🏿\"\n  | \"🖖\"\n  | \"👌🏻\"\n  | \"👌🏼\"\n  | \"👌🏽\"\n  | \"👌🏾\"\n  | \"👌🏿\"\n  | \"👌\"\n  | \"🤌🏻\"\n  | \"🤌🏼\"\n  | \"🤌🏽\"\n  | \"🤌🏾\"\n  | \"🤌🏿\"\n  | \"🤌\"\n  | \"🤏🏻\"\n  | \"🤏🏼\"\n  | \"🤏🏽\"\n  | \"🤏🏾\"\n  | \"🤏🏿\"\n  | \"🤏\"\n  | \"✌🏻\"\n  | \"✌🏼\"\n  | \"✌🏽\"\n  | \"✌🏾\"\n  | \"✌🏿\"\n  | \"✌️\"\n  | \"✌\"\n  | \"🤞🏻\"\n  | \"🤞🏼\"\n  | \"🤞🏽\"\n  | \"🤞🏾\"\n  | \"🤞🏿\"\n  | \"🤞\"\n  | \"🤟🏻\"\n  | \"🤟🏼\"\n  | \"🤟🏽\"\n  | \"🤟🏾\"\n  | \"🤟🏿\"\n  | \"🤟\"\n  | \"🤘🏻\"\n  | \"🤘🏼\"\n  | \"🤘🏽\"\n  | \"🤘🏾\"\n  | \"🤘🏿\"\n  | \"🤘\"\n  | \"🤙🏻\"\n  | \"🤙🏼\"\n  | \"🤙🏽\"\n  | \"🤙🏾\"\n  | \"🤙🏿\"\n  | \"🤙\"\n  | \"👈🏻\"\n  | \"👈🏼\"\n  | \"👈🏽\"\n  | \"👈🏾\"\n  | \"👈🏿\"\n  | \"👈\"\n  | \"👉🏻\"\n  | \"👉🏼\"\n  | \"👉🏽\"\n  | \"👉🏾\"\n  | \"👉🏿\"\n  | \"👉\"\n  | \"👆🏻\"\n  | \"👆🏼\"\n  | \"👆🏽\"\n  | \"👆🏾\"\n  | \"👆🏿\"\n  | \"👆\"\n  | \"🖕🏻\"\n  | \"🖕🏼\"\n  | \"🖕🏽\"\n  | \"🖕🏾\"\n  | \"🖕🏿\"\n  | \"🖕\"\n  | \"👇🏻\"\n  | \"👇🏼\"\n  | \"👇🏽\"\n  | \"👇🏾\"\n  | \"👇🏿\"\n  | \"👇\"\n  | \"☝🏻\"\n  | \"☝🏼\"\n  | \"☝🏽\"\n  | \"☝🏾\"\n  | \"☝🏿\"\n  | \"☝️\"\n  | \"☝\"\n  | \"👍🏻\"\n  | \"👍🏼\"\n  | \"👍🏽\"\n  | \"👍🏾\"\n  | \"👍🏿\"\n  | \"👍\"\n  | \"👎🏻\"\n  | \"👎🏼\"\n  | \"👎🏽\"\n  | \"👎🏾\"\n  | \"👎🏿\"\n  | \"👎\"\n  | \"✊🏻\"\n  | \"✊🏼\"\n  | \"✊🏽\"\n  | \"✊🏾\"\n  | \"✊🏿\"\n  | \"✊\"\n  | \"👊🏻\"\n  | \"👊🏼\"\n  | \"👊🏽\"\n  | \"👊🏾\"\n  | \"👊🏿\"\n  | \"👊\"\n  | \"🤛🏻\"\n  | \"🤛🏼\"\n  | \"🤛🏽\"\n  | \"🤛🏾\"\n  | \"🤛🏿\"\n  | \"🤛\"\n  | \"🤜🏻\"\n  | \"🤜🏼\"\n  | \"🤜🏽\"\n  | \"🤜🏾\"\n  | \"🤜🏿\"\n  | \"🤜\"\n  | \"👏🏻\"\n  | \"👏🏼\"\n  | \"👏🏽\"\n  | \"👏🏾\"\n  | \"👏🏿\"\n  | \"👏\"\n  | \"🙌🏻\"\n  | \"🙌🏼\"\n  | \"🙌🏽\"\n  | \"🙌🏾\"\n  | \"🙌🏿\"\n  | \"🙌\"\n  | \"👐🏻\"\n  | \"👐🏼\"\n  | \"👐🏽\"\n  | \"👐🏾\"\n  | \"👐🏿\"\n  | \"👐\"\n  | \"🤲🏻\"\n  | \"🤲🏼\"\n  | \"🤲🏽\"\n  | \"🤲🏾\"\n  | \"🤲🏿\"\n  | \"🤲\"\n  | \"🤝\"\n  | \"🙏🏻\"\n  | \"🙏🏼\"\n  | \"🙏🏽\"\n  | \"🙏🏾\"\n  | \"🙏🏿\"\n  | \"🙏\"\n  | \"✍🏻\"\n  | \"✍🏼\"\n  | \"✍🏽\"\n  | \"✍🏾\"\n  | \"✍🏿\"\n  | \"✍️\"\n  | \"✍\"\n  | \"💅🏻\"\n  | \"💅🏼\"\n  | \"💅🏽\"\n  | \"💅🏾\"\n  | \"💅🏿\"\n  | \"💅\"\n  | \"🤳🏻\"\n  | \"🤳🏼\"\n  | \"🤳🏽\"\n  | \"🤳🏾\"\n  | \"🤳🏿\"\n  | \"🤳\"\n  | \"💪🏻\"\n  | \"💪🏼\"\n  | \"💪🏽\"\n  | \"💪🏾\"\n  | \"💪🏿\"\n  | \"💪\"\n  | \"🦾\"\n  | \"🦿\"\n  | \"🦵🏻\"\n  | \"🦵🏼\"\n  | \"🦵🏽\"\n  | \"🦵🏾\"\n  | \"🦵🏿\"\n  | \"🦵\"\n  | \"🦶🏻\"\n  | \"🦶🏼\"\n  | \"🦶🏽\"\n  | \"🦶🏾\"\n  | \"🦶🏿\"\n  | \"🦶\"\n  | \"👂🏻\"\n  | \"👂🏼\"\n  | \"👂🏽\"\n  | \"👂🏾\"\n  | \"👂🏿\"\n  | \"👂\"\n  | \"🦻🏻\"\n  | \"🦻🏼\"\n  | \"🦻🏽\"\n  | \"🦻🏾\"\n  | \"🦻🏿\"\n  | \"🦻\"\n  | \"👃🏻\"\n  | \"👃🏼\"\n  | \"👃🏽\"\n  | \"👃🏾\"\n  | \"👃🏿\"\n  | \"👃\"\n  | \"🧠\"\n  | \"🫀\"\n  | \"🫁\"\n  | \"🦷\"\n  | \"🦴\"\n  | \"👀\"\n  | \"👁️\"\n  | \"👁\"\n  | \"👅\"\n  | \"👄\"\n  | \"👶🏻\"\n  | \"👶🏼\"\n  | \"👶🏽\"\n  | \"👶🏾\"\n  | \"👶🏿\"\n  | \"👶\"\n  | \"🧒🏻\"\n  | \"🧒🏼\"\n  | \"🧒🏽\"\n  | \"🧒🏾\"\n  | \"🧒🏿\"\n  | \"🧒\"\n  | \"👦🏻\"\n  | \"👦🏼\"\n  | \"👦🏽\"\n  | \"👦🏾\"\n  | \"👦🏿\"\n  | \"👦\"\n  | \"👧🏻\"\n  | \"👧🏼\"\n  | \"👧🏽\"\n  | \"👧🏾\"\n  | \"👧🏿\"\n  | \"👧\"\n  | \"🧑🏻\"\n  | \"🧑🏼\"\n  | \"🧑🏽\"\n  | \"🧑🏾\"\n  | \"🧑🏿\"\n  | \"🧑\"\n  | \"👱🏻\"\n  | \"👱🏼\"\n  | \"👱🏽\"\n  | \"👱🏾\"\n  | \"👱🏿\"\n  | \"👱\"\n  | \"👨🏻\"\n  | \"👨🏼\"\n  | \"👨🏽\"\n  | \"👨🏾\"\n  | \"👨🏿\"\n  | \"👨\"\n  | \"🧔🏻\"\n  | \"🧔🏼\"\n  | \"🧔🏽\"\n  | \"🧔🏾\"\n  | \"🧔🏿\"\n  | \"🧔\"\n  | \"🧔🏻‍♂️\"\n  | \"🧔🏼‍♂️\"\n  | \"🧔🏽‍♂️\"\n  | \"🧔🏾‍♂️\"\n  | \"🧔🏿‍♂️\"\n  | \"🧔‍♂️\"\n  | \"🧔‍♂\"\n  | \"🧔🏻‍♀️\"\n  | \"🧔🏼‍♀️\"\n  | \"🧔🏽‍♀️\"\n  | \"🧔🏾‍♀️\"\n  | \"🧔🏿‍♀️\"\n  | \"🧔‍♀️\"\n  | \"🧔‍♀\"\n  | \"👨🏻‍🦰\"\n  | \"👨🏼‍🦰\"\n  | \"👨🏽‍🦰\"\n  | \"👨🏾‍🦰\"\n  | \"👨🏿‍🦰\"\n  | \"👨‍🦰\"\n  | \"👨🏻‍🦱\"\n  | \"👨🏼‍🦱\"\n  | \"👨🏽‍🦱\"\n  | \"👨🏾‍🦱\"\n  | \"👨🏿‍🦱\"\n  | \"👨‍🦱\"\n  | \"👨🏻‍🦳\"\n  | \"👨🏼‍🦳\"\n  | \"👨🏽‍🦳\"\n  | \"👨🏾‍🦳\"\n  | \"👨🏿‍🦳\"\n  | \"👨‍🦳\"\n  | \"👨🏻‍🦲\"\n  | \"👨🏼‍🦲\"\n  | \"👨🏽‍🦲\"\n  | \"👨🏾‍🦲\"\n  | \"👨🏿‍🦲\"\n  | \"👨‍🦲\"\n  | \"👩🏻\"\n  | \"👩🏼\"\n  | \"👩🏽\"\n  | \"👩🏾\"\n  | \"👩🏿\"\n  | \"👩\"\n  | \"👩🏻‍🦰\"\n  | \"👩🏼‍🦰\"\n  | \"👩🏽‍🦰\"\n  | \"👩🏾‍🦰\"\n  | \"👩🏿‍🦰\"\n  | \"👩‍🦰\"\n  | \"🧑🏻‍🦰\"\n  | \"🧑🏼‍🦰\"\n  | \"🧑🏽‍🦰\"\n  | \"🧑🏾‍🦰\"\n  | \"🧑🏿‍🦰\"\n  | \"🧑‍🦰\"\n  | \"👩🏻‍🦱\"\n  | \"👩🏼‍🦱\"\n  | \"👩🏽‍🦱\"\n  | \"👩🏾‍🦱\"\n  | \"👩🏿‍🦱\"\n  | \"👩‍🦱\"\n  | \"🧑🏻‍🦱\"\n  | \"🧑🏼‍🦱\"\n  | \"🧑🏽‍🦱\"\n  | \"🧑🏾‍🦱\"\n  | \"🧑🏿‍🦱\"\n  | \"🧑‍🦱\"\n  | \"👩🏻‍🦳\"\n  | \"👩🏼‍🦳\"\n  | \"👩🏽‍🦳\"\n  | \"👩🏾‍🦳\"\n  | \"👩🏿‍🦳\"\n  | \"👩‍🦳\"\n  | \"🧑🏻‍🦳\"\n  | \"🧑🏼‍🦳\"\n  | \"🧑🏽‍🦳\"\n  | \"🧑🏾‍🦳\"\n  | \"🧑🏿‍🦳\"\n  | \"🧑‍🦳\"\n  | \"👩🏻‍🦲\"\n  | \"👩🏼‍🦲\"\n  | \"👩🏽‍🦲\"\n  | \"👩🏾‍🦲\"\n  | \"👩🏿‍🦲\"\n  | \"👩‍🦲\"\n  | \"🧑🏻‍🦲\"\n  | \"🧑🏼‍🦲\"\n  | \"🧑🏽‍🦲\"\n  | \"🧑🏾‍🦲\"\n  | \"🧑🏿‍🦲\"\n  | \"🧑‍🦲\"\n  | \"👱🏻‍♀️\"\n  | \"👱🏼‍♀️\"\n  | \"👱🏽‍♀️\"\n  | \"👱🏾‍♀️\"\n  | \"👱🏿‍♀️\"\n  | \"👱‍♀️\"\n  | \"👱‍♀\"\n  | \"👱🏻‍♂️\"\n  | \"👱🏼‍♂️\"\n  | \"👱🏽‍♂️\"\n  | \"👱🏾‍♂️\"\n  | \"👱🏿‍♂️\"\n  | \"👱‍♂️\"\n  | \"👱‍♂\"\n  | \"🧓🏻\"\n  | \"🧓🏼\"\n  | \"🧓🏽\"\n  | \"🧓🏾\"\n  | \"🧓🏿\"\n  | \"🧓\"\n  | \"👴🏻\"\n  | \"👴🏼\"\n  | \"👴🏽\"\n  | \"👴🏾\"\n  | \"👴🏿\"\n  | \"👴\"\n  | \"👵🏻\"\n  | \"👵🏼\"\n  | \"👵🏽\"\n  | \"👵🏾\"\n  | \"👵🏿\"\n  | \"👵\"\n  | \"🙍🏻\"\n  | \"🙍🏼\"\n  | \"🙍🏽\"\n  | \"🙍🏾\"\n  | \"🙍🏿\"\n  | \"🙍\"\n  | \"🙍🏻‍♂️\"\n  | \"🙍🏼‍♂️\"\n  | \"🙍🏽‍♂️\"\n  | \"🙍🏾‍♂️\"\n  | \"🙍🏿‍♂️\"\n  | \"🙍‍♂️\"\n  | \"🙍‍♂\"\n  | \"🙍🏻‍♀️\"\n  | \"🙍🏼‍♀️\"\n  | \"🙍🏽‍♀️\"\n  | \"🙍🏾‍♀️\"\n  | \"🙍🏿‍♀️\"\n  | \"🙍‍♀️\"\n  | \"🙍‍♀\"\n  | \"🙎🏻\"\n  | \"🙎🏼\"\n  | \"🙎🏽\"\n  | \"🙎🏾\"\n  | \"🙎🏿\"\n  | \"🙎\"\n  | \"🙎🏻‍♂️\"\n  | \"🙎🏼‍♂️\"\n  | \"🙎🏽‍♂️\"\n  | \"🙎🏾‍♂️\"\n  | \"🙎🏿‍♂️\"\n  | \"🙎‍♂️\"\n  | \"🙎‍♂\"\n  | \"🙎🏻‍♀️\"\n  | \"🙎🏼‍♀️\"\n  | \"🙎🏽‍♀️\"\n  | \"🙎🏾‍♀️\"\n  | \"🙎🏿‍♀️\"\n  | \"🙎‍♀️\"\n  | \"🙎‍♀\"\n  | \"🙅🏻\"\n  | \"🙅🏼\"\n  | \"🙅🏽\"\n  | \"🙅🏾\"\n  | \"🙅🏿\"\n  | \"🙅\"\n  | \"🙅🏻‍♂️\"\n  | \"🙅🏼‍♂️\"\n  | \"🙅🏽‍♂️\"\n  | \"🙅🏾‍♂️\"\n  | \"🙅🏿‍♂️\"\n  | \"🙅‍♂️\"\n  | \"🙅‍♂\"\n  | \"🙅🏻‍♀️\"\n  | \"🙅🏼‍♀️\"\n  | \"🙅🏽‍♀️\"\n  | \"🙅🏾‍♀️\"\n  | \"🙅🏿‍♀️\"\n  | \"🙅‍♀️\"\n  | \"🙅‍♀\"\n  | \"🙆🏻\"\n  | \"🙆🏼\"\n  | \"🙆🏽\"\n  | \"🙆🏾\"\n  | \"🙆🏿\"\n  | \"🙆\"\n  | \"🙆🏻‍♂️\"\n  | \"🙆🏼‍♂️\"\n  | \"🙆🏽‍♂️\"\n  | \"🙆🏾‍♂️\"\n  | \"🙆🏿‍♂️\"\n  | \"🙆‍♂️\"\n  | \"🙆‍♂\"\n  | \"🙆🏻‍♀️\"\n  | \"🙆🏼‍♀️\"\n  | \"🙆🏽‍♀️\"\n  | \"🙆🏾‍♀️\"\n  | \"🙆🏿‍♀️\"\n  | \"🙆‍♀️\"\n  | \"🙆‍♀\"\n  | \"💁🏻\"\n  | \"💁🏼\"\n  | \"💁🏽\"\n  | \"💁🏾\"\n  | \"💁🏿\"\n  | \"💁\"\n  | \"💁🏻‍♂️\"\n  | \"💁🏼‍♂️\"\n  | \"💁🏽‍♂️\"\n  | \"💁🏾‍♂️\"\n  | \"💁🏿‍♂️\"\n  | \"💁‍♂️\"\n  | \"💁‍♂\"\n  | \"💁🏻‍♀️\"\n  | \"💁🏼‍♀️\"\n  | \"💁🏽‍♀️\"\n  | \"💁🏾‍♀️\"\n  | \"💁🏿‍♀️\"\n  | \"💁‍♀️\"\n  | \"💁‍♀\"\n  | \"🙋🏻\"\n  | \"🙋🏼\"\n  | \"🙋🏽\"\n  | \"🙋🏾\"\n  | \"🙋🏿\"\n  | \"🙋\"\n  | \"🙋🏻‍♂️\"\n  | \"🙋🏼‍♂️\"\n  | \"🙋🏽‍♂️\"\n  | \"🙋🏾‍♂️\"\n  | \"🙋🏿‍♂️\"\n  | \"🙋‍♂️\"\n  | \"🙋‍♂\"\n  | \"🙋🏻‍♀️\"\n  | \"🙋🏼‍♀️\"\n  | \"🙋🏽‍♀️\"\n  | \"🙋🏾‍♀️\"\n  | \"🙋🏿‍♀️\"\n  | \"🙋‍♀️\"\n  | \"🙋‍♀\"\n  | \"🧏🏻\"\n  | \"🧏🏼\"\n  | \"🧏🏽\"\n  | \"🧏🏾\"\n  | \"🧏🏿\"\n  | \"🧏\"\n  | \"🧏🏻‍♂️\"\n  | \"🧏🏼‍♂️\"\n  | \"🧏🏽‍♂️\"\n  | \"🧏🏾‍♂️\"\n  | \"🧏🏿‍♂️\"\n  | \"🧏‍♂️\"\n  | \"🧏‍♂\"\n  | \"🧏🏻‍♀️\"\n  | \"🧏🏼‍♀️\"\n  | \"🧏🏽‍♀️\"\n  | \"🧏🏾‍♀️\"\n  | \"🧏🏿‍♀️\"\n  | \"🧏‍♀️\"\n  | \"🧏‍♀\"\n  | \"🙇🏻\"\n  | \"🙇🏼\"\n  | \"🙇🏽\"\n  | \"🙇🏾\"\n  | \"🙇🏿\"\n  | \"🙇\"\n  | \"🙇🏻‍♂️\"\n  | \"🙇🏼‍♂️\"\n  | \"🙇🏽‍♂️\"\n  | \"🙇🏾‍♂️\"\n  | \"🙇🏿‍♂️\"\n  | \"🙇‍♂️\"\n  | \"🙇‍♂\"\n  | \"🙇🏻‍♀️\"\n  | \"🙇🏼‍♀️\"\n  | \"🙇🏽‍♀️\"\n  | \"🙇🏾‍♀️\"\n  | \"🙇🏿‍♀️\"\n  | \"🙇‍♀️\"\n  | \"🙇‍♀\"\n  | \"🤦🏻\"\n  | \"🤦🏼\"\n  | \"🤦🏽\"\n  | \"🤦🏾\"\n  | \"🤦🏿\"\n  | \"🤦\"\n  | \"🤦🏻‍♂️\"\n  | \"🤦🏼‍♂️\"\n  | \"🤦🏽‍♂️\"\n  | \"🤦🏾‍♂️\"\n  | \"🤦🏿‍♂️\"\n  | \"🤦‍♂️\"\n  | \"🤦‍♂\"\n  | \"🤦🏻‍♀️\"\n  | \"🤦🏼‍♀️\"\n  | \"🤦🏽‍♀️\"\n  | \"🤦🏾‍♀️\"\n  | \"🤦🏿‍♀️\"\n  | \"🤦‍♀️\"\n  | \"🤦‍♀\"\n  | \"🤷🏻\"\n  | \"🤷🏼\"\n  | \"🤷🏽\"\n  | \"🤷🏾\"\n  | \"🤷🏿\"\n  | \"🤷\"\n  | \"🤷🏻‍♂️\"\n  | \"🤷🏼‍♂️\"\n  | \"🤷🏽‍♂️\"\n  | \"🤷🏾‍♂️\"\n  | \"🤷🏿‍♂️\"\n  | \"🤷‍♂️\"\n  | \"🤷‍♂\"\n  | \"🤷🏻‍♀️\"\n  | \"🤷🏼‍♀️\"\n  | \"🤷🏽‍♀️\"\n  | \"🤷🏾‍♀️\"\n  | \"🤷🏿‍♀️\"\n  | \"🤷‍♀️\"\n  | \"🤷‍♀\"\n  | \"🧑🏻‍⚕️\"\n  | \"🧑🏼‍⚕️\"\n  | \"🧑🏽‍⚕️\"\n  | \"🧑🏾‍⚕️\"\n  | \"🧑🏿‍⚕️\"\n  | \"🧑‍⚕️\"\n  | \"🧑‍⚕\"\n  | \"👨🏻‍⚕️\"\n  | \"👨🏼‍⚕️\"\n  | \"👨🏽‍⚕️\"\n  | \"👨🏾‍⚕️\"\n  | \"👨🏿‍⚕️\"\n  | \"👨‍⚕️\"\n  | \"👨‍⚕\"\n  | \"👩🏻‍⚕️\"\n  | \"👩🏼‍⚕️\"\n  | \"👩🏽‍⚕️\"\n  | \"👩🏾‍⚕️\"\n  | \"👩🏿‍⚕️\"\n  | \"👩‍⚕️\"\n  | \"👩‍⚕\"\n  | \"🧑🏻‍🎓\"\n  | \"🧑🏼‍🎓\"\n  | \"🧑🏽‍🎓\"\n  | \"🧑🏾‍🎓\"\n  | \"🧑🏿‍🎓\"\n  | \"🧑‍🎓\"\n  | \"👨🏻‍🎓\"\n  | \"👨🏼‍🎓\"\n  | \"👨🏽‍🎓\"\n  | \"👨🏾‍🎓\"\n  | \"👨🏿‍🎓\"\n  | \"👨‍🎓\"\n  | \"👩🏻‍🎓\"\n  | \"👩🏼‍🎓\"\n  | \"👩🏽‍🎓\"\n  | \"👩🏾‍🎓\"\n  | \"👩🏿‍🎓\"\n  | \"👩‍🎓\"\n  | \"🧑🏻‍🏫\"\n  | \"🧑🏼‍🏫\"\n  | \"🧑🏽‍🏫\"\n  | \"🧑🏾‍🏫\"\n  | \"🧑🏿‍🏫\"\n  | \"🧑‍🏫\"\n  | \"👨🏻‍🏫\"\n  | \"👨🏼‍🏫\"\n  | \"👨🏽‍🏫\"\n  | \"👨🏾‍🏫\"\n  | \"👨🏿‍🏫\"\n  | \"👨‍🏫\"\n  | \"👩🏻‍🏫\"\n  | \"👩🏼‍🏫\"\n  | \"👩🏽‍🏫\"\n  | \"👩🏾‍🏫\"\n  | \"👩🏿‍🏫\"\n  | \"👩‍🏫\"\n  | \"🧑🏻‍⚖️\"\n  | \"🧑🏼‍⚖️\"\n  | \"🧑🏽‍⚖️\"\n  | \"🧑🏾‍⚖️\"\n  | \"🧑🏿‍⚖️\"\n  | \"🧑‍⚖️\"\n  | \"🧑‍⚖\"\n  | \"👨🏻‍⚖️\"\n  | \"👨🏼‍⚖️\"\n  | \"👨🏽‍⚖️\"\n  | \"👨🏾‍⚖️\"\n  | \"👨🏿‍⚖️\"\n  | \"👨‍⚖️\"\n  | \"👨‍⚖\"\n  | \"👩🏻‍⚖️\"\n  | \"👩🏼‍⚖️\"\n  | \"👩🏽‍⚖️\"\n  | \"👩🏾‍⚖️\"\n  | \"👩🏿‍⚖️\"\n  | \"👩‍⚖️\"\n  | \"👩‍⚖\"\n  | \"🧑🏻‍🌾\"\n  | \"🧑🏼‍🌾\"\n  | \"🧑🏽‍🌾\"\n  | \"🧑🏾‍🌾\"\n  | \"🧑🏿‍🌾\"\n  | \"🧑‍🌾\"\n  | \"👨🏻‍🌾\"\n  | \"👨🏼‍🌾\"\n  | \"👨🏽‍🌾\"\n  | \"👨🏾‍🌾\"\n  | \"👨🏿‍🌾\"\n  | \"👨‍🌾\"\n  | \"👩🏻‍🌾\"\n  | \"👩🏼‍🌾\"\n  | \"👩🏽‍🌾\"\n  | \"👩🏾‍🌾\"\n  | \"👩🏿‍🌾\"\n  | \"👩‍🌾\"\n  | \"🧑🏻‍🍳\"\n  | \"🧑🏼‍🍳\"\n  | \"🧑🏽‍🍳\"\n  | \"🧑🏾‍🍳\"\n  | \"🧑🏿‍🍳\"\n  | \"🧑‍🍳\"\n  | \"👨🏻‍🍳\"\n  | \"👨🏼‍🍳\"\n  | \"👨🏽‍🍳\"\n  | \"👨🏾‍🍳\"\n  | \"👨🏿‍🍳\"\n  | \"👨‍🍳\"\n  | \"👩🏻‍🍳\"\n  | \"👩🏼‍🍳\"\n  | \"👩🏽‍🍳\"\n  | \"👩🏾‍🍳\"\n  | \"👩🏿‍🍳\"\n  | \"👩‍🍳\"\n  | \"🧑🏻‍🔧\"\n  | \"🧑🏼‍🔧\"\n  | \"🧑🏽‍🔧\"\n  | \"🧑🏾‍🔧\"\n  | \"🧑🏿‍🔧\"\n  | \"🧑‍🔧\"\n  | \"👨🏻‍🔧\"\n  | \"👨🏼‍🔧\"\n  | \"👨🏽‍🔧\"\n  | \"👨🏾‍🔧\"\n  | \"👨🏿‍🔧\"\n  | \"👨‍🔧\"\n  | \"👩🏻‍🔧\"\n  | \"👩🏼‍🔧\"\n  | \"👩🏽‍🔧\"\n  | \"👩🏾‍🔧\"\n  | \"👩🏿‍🔧\"\n  | \"👩‍🔧\"\n  | \"🧑🏻‍🏭\"\n  | \"🧑🏼‍🏭\"\n  | \"🧑🏽‍🏭\"\n  | \"🧑🏾‍🏭\"\n  | \"🧑🏿‍🏭\"\n  | \"🧑‍🏭\"\n  | \"👨🏻‍🏭\"\n  | \"👨🏼‍🏭\"\n  | \"👨🏽‍🏭\"\n  | \"👨🏾‍🏭\"\n  | \"👨🏿‍🏭\"\n  | \"👨‍🏭\"\n  | \"👩🏻‍🏭\"\n  | \"👩🏼‍🏭\"\n  | \"👩🏽‍🏭\"\n  | \"👩🏾‍🏭\"\n  | \"👩🏿‍🏭\"\n  | \"👩‍🏭\"\n  | \"🧑🏻‍💼\"\n  | \"🧑🏼‍💼\"\n  | \"🧑🏽‍💼\"\n  | \"🧑🏾‍💼\"\n  | \"🧑🏿‍💼\"\n  | \"🧑‍💼\"\n  | \"👨🏻‍💼\"\n  | \"👨🏼‍💼\"\n  | \"👨🏽‍💼\"\n  | \"👨🏾‍💼\"\n  | \"👨🏿‍💼\"\n  | \"👨‍💼\"\n  | \"👩🏻‍💼\"\n  | \"👩🏼‍💼\"\n  | \"👩🏽‍💼\"\n  | \"👩🏾‍💼\"\n  | \"👩🏿‍💼\"\n  | \"👩‍💼\"\n  | \"🧑🏻‍🔬\"\n  | \"🧑🏼‍🔬\"\n  | \"🧑🏽‍🔬\"\n  | \"🧑🏾‍🔬\"\n  | \"🧑🏿‍🔬\"\n  | \"🧑‍🔬\"\n  | \"👨🏻‍🔬\"\n  | \"👨🏼‍🔬\"\n  | \"👨🏽‍🔬\"\n  | \"👨🏾‍🔬\"\n  | \"👨🏿‍🔬\"\n  | \"👨‍🔬\"\n  | \"👩🏻‍🔬\"\n  | \"👩🏼‍🔬\"\n  | \"👩🏽‍🔬\"\n  | \"👩🏾‍🔬\"\n  | \"👩🏿‍🔬\"\n  | \"👩‍🔬\"\n  | \"🧑🏻‍💻\"\n  | \"🧑🏼‍💻\"\n  | \"🧑🏽‍💻\"\n  | \"🧑🏾‍💻\"\n  | \"🧑🏿‍💻\"\n  | \"🧑‍💻\"\n  | \"👨🏻‍💻\"\n  | \"👨🏼‍💻\"\n  | \"👨🏽‍💻\"\n  | \"👨🏾‍💻\"\n  | \"👨🏿‍💻\"\n  | \"👨‍💻\"\n  | \"👩🏻‍💻\"\n  | \"👩🏼‍💻\"\n  | \"👩🏽‍💻\"\n  | \"👩🏾‍💻\"\n  | \"👩🏿‍💻\"\n  | \"👩‍💻\"\n  | \"🧑🏻‍🎤\"\n  | \"🧑🏼‍🎤\"\n  | \"🧑🏽‍🎤\"\n  | \"🧑🏾‍🎤\"\n  | \"🧑🏿‍🎤\"\n  | \"🧑‍🎤\"\n  | \"👨🏻‍🎤\"\n  | \"👨🏼‍🎤\"\n  | \"👨🏽‍🎤\"\n  | \"👨🏾‍🎤\"\n  | \"👨🏿‍🎤\"\n  | \"👨‍🎤\"\n  | \"👩🏻‍🎤\"\n  | \"👩🏼‍🎤\"\n  | \"👩🏽‍🎤\"\n  | \"👩🏾‍🎤\"\n  | \"👩🏿‍🎤\"\n  | \"👩‍🎤\"\n  | \"🧑🏻‍🎨\"\n  | \"🧑🏼‍🎨\"\n  | \"🧑🏽‍🎨\"\n  | \"🧑🏾‍🎨\"\n  | \"🧑🏿‍🎨\"\n  | \"🧑‍🎨\"\n  | \"👨🏻‍🎨\"\n  | \"👨🏼‍🎨\"\n  | \"👨🏽‍🎨\"\n  | \"👨🏾‍🎨\"\n  | \"👨🏿‍🎨\"\n  | \"👨‍🎨\"\n  | \"👩🏻‍🎨\"\n  | \"👩🏼‍🎨\"\n  | \"👩🏽‍🎨\"\n  | \"👩🏾‍🎨\"\n  | \"👩🏿‍🎨\"\n  | \"👩‍🎨\"\n  | \"🧑🏻‍✈️\"\n  | \"🧑🏼‍✈️\"\n  | \"🧑🏽‍✈️\"\n  | \"🧑🏾‍✈️\"\n  | \"🧑🏿‍✈️\"\n  | \"🧑‍✈️\"\n  | \"🧑‍✈\"\n  | \"👨🏻‍✈️\"\n  | \"👨🏼‍✈️\"\n  | \"👨🏽‍✈️\"\n  | \"👨🏾‍✈️\"\n  | \"👨🏿‍✈️\"\n  | \"👨‍✈️\"\n  | \"👨‍✈\"\n  | \"👩🏻‍✈️\"\n  | \"👩🏼‍✈️\"\n  | \"👩🏽‍✈️\"\n  | \"👩🏾‍✈️\"\n  | \"👩🏿‍✈️\"\n  | \"👩‍✈️\"\n  | \"👩‍✈\"\n  | \"🧑🏻‍🚀\"\n  | \"🧑🏼‍🚀\"\n  | \"🧑🏽‍🚀\"\n  | \"🧑🏾‍🚀\"\n  | \"🧑🏿‍🚀\"\n  | \"🧑‍🚀\"\n  | \"👨🏻‍🚀\"\n  | \"👨🏼‍🚀\"\n  | \"👨🏽‍🚀\"\n  | \"👨🏾‍🚀\"\n  | \"👨🏿‍🚀\"\n  | \"👨‍🚀\"\n  | \"👩🏻‍🚀\"\n  | \"👩🏼‍🚀\"\n  | \"👩🏽‍🚀\"\n  | \"👩🏾‍🚀\"\n  | \"👩🏿‍🚀\"\n  | \"👩‍🚀\"\n  | \"🧑🏻‍🚒\"\n  | \"🧑🏼‍🚒\"\n  | \"🧑🏽‍🚒\"\n  | \"🧑🏾‍🚒\"\n  | \"🧑🏿‍🚒\"\n  | \"🧑‍🚒\"\n  | \"👨🏻‍🚒\"\n  | \"👨🏼‍🚒\"\n  | \"👨🏽‍🚒\"\n  | \"👨🏾‍🚒\"\n  | \"👨🏿‍🚒\"\n  | \"👨‍🚒\"\n  | \"👩🏻‍🚒\"\n  | \"👩🏼‍🚒\"\n  | \"👩🏽‍🚒\"\n  | \"👩🏾‍🚒\"\n  | \"👩🏿‍🚒\"\n  | \"👩‍🚒\"\n  | \"👮🏻\"\n  | \"👮🏼\"\n  | \"👮🏽\"\n  | \"👮🏾\"\n  | \"👮🏿\"\n  | \"👮\"\n  | \"👮🏻‍♂️\"\n  | \"👮🏼‍♂️\"\n  | \"👮🏽‍♂️\"\n  | \"👮🏾‍♂️\"\n  | \"👮🏿‍♂️\"\n  | \"👮‍♂️\"\n  | \"👮‍♂\"\n  | \"👮🏻‍♀️\"\n  | \"👮🏼‍♀️\"\n  | \"👮🏽‍♀️\"\n  | \"👮🏾‍♀️\"\n  | \"👮🏿‍♀️\"\n  | \"👮‍♀️\"\n  | \"👮‍♀\"\n  | \"🕵🏻\"\n  | \"🕵🏼\"\n  | \"🕵🏽\"\n  | \"🕵🏾\"\n  | \"🕵🏿\"\n  | \"🕵️\"\n  | \"🕵\"\n  | \"🕵🏻‍♂️\"\n  | \"🕵🏼‍♂️\"\n  | \"🕵🏽‍♂️\"\n  | \"🕵🏾‍♂️\"\n  | \"🕵🏿‍♂️\"\n  | \"🕵️‍♂️\"\n  | \"🕵🏻‍♀️\"\n  | \"🕵🏼‍♀️\"\n  | \"🕵🏽‍♀️\"\n  | \"🕵🏾‍♀️\"\n  | \"🕵🏿‍♀️\"\n  | \"🕵️‍♀️\"\n  | \"💂🏻\"\n  | \"💂🏼\"\n  | \"💂🏽\"\n  | \"💂🏾\"\n  | \"💂🏿\"\n  | \"💂\"\n  | \"💂🏻‍♂️\"\n  | \"💂🏼‍♂️\"\n  | \"💂🏽‍♂️\"\n  | \"💂🏾‍♂️\"\n  | \"💂🏿‍♂️\"\n  | \"💂‍♂️\"\n  | \"💂‍♂\"\n  | \"💂🏻‍♀️\"\n  | \"💂🏼‍♀️\"\n  | \"💂🏽‍♀️\"\n  | \"💂🏾‍♀️\"\n  | \"💂🏿‍♀️\"\n  | \"💂‍♀️\"\n  | \"💂‍♀\"\n  | \"🥷🏻\"\n  | \"🥷🏼\"\n  | \"🥷🏽\"\n  | \"🥷🏾\"\n  | \"🥷🏿\"\n  | \"🥷\"\n  | \"👷🏻\"\n  | \"👷🏼\"\n  | \"👷🏽\"\n  | \"👷🏾\"\n  | \"👷🏿\"\n  | \"👷\"\n  | \"👷🏻‍♂️\"\n  | \"👷🏼‍♂️\"\n  | \"👷🏽‍♂️\"\n  | \"👷🏾‍♂️\"\n  | \"👷🏿‍♂️\"\n  | \"👷‍♂️\"\n  | \"👷‍♂\"\n  | \"👷🏻‍♀️\"\n  | \"👷🏼‍♀️\"\n  | \"👷🏽‍♀️\"\n  | \"👷🏾‍♀️\"\n  | \"👷🏿‍♀️\"\n  | \"👷‍♀️\"\n  | \"👷‍♀\"\n  | \"🤴🏻\"\n  | \"🤴🏼\"\n  | \"🤴🏽\"\n  | \"🤴🏾\"\n  | \"🤴🏿\"\n  | \"🤴\"\n  | \"👸🏻\"\n  | \"👸🏼\"\n  | \"👸🏽\"\n  | \"👸🏾\"\n  | \"👸🏿\"\n  | \"👸\"\n  | \"👳🏻\"\n  | \"👳🏼\"\n  | \"👳🏽\"\n  | \"👳🏾\"\n  | \"👳🏿\"\n  | \"👳\"\n  | \"👳🏻‍♂️\"\n  | \"👳🏼‍♂️\"\n  | \"👳🏽‍♂️\"\n  | \"👳🏾‍♂️\"\n  | \"👳🏿‍♂️\"\n  | \"👳‍♂️\"\n  | \"👳‍♂\"\n  | \"👳🏻‍♀️\"\n  | \"👳🏼‍♀️\"\n  | \"👳🏽‍♀️\"\n  | \"👳🏾‍♀️\"\n  | \"👳🏿‍♀️\"\n  | \"👳‍♀️\"\n  | \"👳‍♀\"\n  | \"👲🏻\"\n  | \"👲🏼\"\n  | \"👲🏽\"\n  | \"👲🏾\"\n  | \"👲🏿\"\n  | \"👲\"\n  | \"🧕🏻\"\n  | \"🧕🏼\"\n  | \"🧕🏽\"\n  | \"🧕🏾\"\n  | \"🧕🏿\"\n  | \"🧕\"\n  | \"🤵🏻\"\n  | \"🤵🏼\"\n  | \"🤵🏽\"\n  | \"🤵🏾\"\n  | \"🤵🏿\"\n  | \"🤵\"\n  | \"🤵🏻‍♂️\"\n  | \"🤵🏼‍♂️\"\n  | \"🤵🏽‍♂️\"\n  | \"🤵🏾‍♂️\"\n  | \"🤵🏿‍♂️\"\n  | \"🤵‍♂️\"\n  | \"🤵‍♂\"\n  | \"🤵🏻‍♀️\"\n  | \"🤵🏼‍♀️\"\n  | \"🤵🏽‍♀️\"\n  | \"🤵🏾‍♀️\"\n  | \"🤵🏿‍♀️\"\n  | \"🤵‍♀️\"\n  | \"🤵‍♀\"\n  | \"👰🏻\"\n  | \"👰🏼\"\n  | \"👰🏽\"\n  | \"👰🏾\"\n  | \"👰🏿\"\n  | \"👰\"\n  | \"👰🏻‍♂️\"\n  | \"👰🏼‍♂️\"\n  | \"👰🏽‍♂️\"\n  | \"👰🏾‍♂️\"\n  | \"👰🏿‍♂️\"\n  | \"👰‍♂️\"\n  | \"👰‍♂\"\n  | \"👰🏻‍♀️\"\n  | \"👰🏼‍♀️\"\n  | \"👰🏽‍♀️\"\n  | \"👰🏾‍♀️\"\n  | \"👰🏿‍♀️\"\n  | \"👰‍♀️\"\n  | \"👰‍♀\"\n  | \"🤰🏻\"\n  | \"🤰🏼\"\n  | \"🤰🏽\"\n  | \"🤰🏾\"\n  | \"🤰🏿\"\n  | \"🤰\"\n  | \"🤱🏻\"\n  | \"🤱🏼\"\n  | \"🤱🏽\"\n  | \"🤱🏾\"\n  | \"🤱🏿\"\n  | \"🤱\"\n  | \"👩🏻‍🍼\"\n  | \"👩🏼‍🍼\"\n  | \"👩🏽‍🍼\"\n  | \"👩🏾‍🍼\"\n  | \"👩🏿‍🍼\"\n  | \"👩‍🍼\"\n  | \"👨🏻‍🍼\"\n  | \"👨🏼‍🍼\"\n  | \"👨🏽‍🍼\"\n  | \"👨🏾‍🍼\"\n  | \"👨🏿‍🍼\"\n  | \"👨‍🍼\"\n  | \"🧑🏻‍🍼\"\n  | \"🧑🏼‍🍼\"\n  | \"🧑🏽‍🍼\"\n  | \"🧑🏾‍🍼\"\n  | \"🧑🏿‍🍼\"\n  | \"🧑‍🍼\"\n  | \"👼🏻\"\n  | \"👼🏼\"\n  | \"👼🏽\"\n  | \"👼🏾\"\n  | \"👼🏿\"\n  | \"👼\"\n  | \"🎅🏻\"\n  | \"🎅🏼\"\n  | \"🎅🏽\"\n  | \"🎅🏾\"\n  | \"🎅🏿\"\n  | \"🎅\"\n  | \"🤶🏻\"\n  | \"🤶🏼\"\n  | \"🤶🏽\"\n  | \"🤶🏾\"\n  | \"🤶🏿\"\n  | \"🤶\"\n  | \"🧑🏻‍🎄\"\n  | \"🧑🏼‍🎄\"\n  | \"🧑🏽‍🎄\"\n  | \"🧑🏾‍🎄\"\n  | \"🧑🏿‍🎄\"\n  | \"🧑‍🎄\"\n  | \"🦸🏻\"\n  | \"🦸🏼\"\n  | \"🦸🏽\"\n  | \"🦸🏾\"\n  | \"🦸🏿\"\n  | \"🦸\"\n  | \"🦸🏻‍♂️\"\n  | \"🦸🏼‍♂️\"\n  | \"🦸🏽‍♂️\"\n  | \"🦸🏾‍♂️\"\n  | \"🦸🏿‍♂️\"\n  | \"🦸‍♂️\"\n  | \"🦸‍♂\"\n  | \"🦸🏻‍♀️\"\n  | \"🦸🏼‍♀️\"\n  | \"🦸🏽‍♀️\"\n  | \"🦸🏾‍♀️\"\n  | \"🦸🏿‍♀️\"\n  | \"🦸‍♀️\"\n  | \"🦸‍♀\"\n  | \"🦹🏻\"\n  | \"🦹🏼\"\n  | \"🦹🏽\"\n  | \"🦹🏾\"\n  | \"🦹🏿\"\n  | \"🦹\"\n  | \"🦹🏻‍♂️\"\n  | \"🦹🏼‍♂️\"\n  | \"🦹🏽‍♂️\"\n  | \"🦹🏾‍♂️\"\n  | \"🦹🏿‍♂️\"\n  | \"🦹‍♂️\"\n  | \"🦹‍♂\"\n  | \"🦹🏻‍♀️\"\n  | \"🦹🏼‍♀️\"\n  | \"🦹🏽‍♀️\"\n  | \"🦹🏾‍♀️\"\n  | \"🦹🏿‍♀️\"\n  | \"🦹‍♀️\"\n  | \"🦹‍♀\"\n  | \"🧙🏻\"\n  | \"🧙🏼\"\n  | \"🧙🏽\"\n  | \"🧙🏾\"\n  | \"🧙🏿\"\n  | \"🧙\"\n  | \"🧙🏻‍♂️\"\n  | \"🧙🏼‍♂️\"\n  | \"🧙🏽‍♂️\"\n  | \"🧙🏾‍♂️\"\n  | \"🧙🏿‍♂️\"\n  | \"🧙‍♂️\"\n  | \"🧙‍♂\"\n  | \"🧙🏻‍♀️\"\n  | \"🧙🏼‍♀️\"\n  | \"🧙🏽‍♀️\"\n  | \"🧙🏾‍♀️\"\n  | \"🧙🏿‍♀️\"\n  | \"🧙‍♀️\"\n  | \"🧙‍♀\"\n  | \"🧚🏻\"\n  | \"🧚🏼\"\n  | \"🧚🏽\"\n  | \"🧚🏾\"\n  | \"🧚🏿\"\n  | \"🧚\"\n  | \"🧚🏻‍♂️\"\n  | \"🧚🏼‍♂️\"\n  | \"🧚🏽‍♂️\"\n  | \"🧚🏾‍♂️\"\n  | \"🧚🏿‍♂️\"\n  | \"🧚‍♂️\"\n  | \"🧚‍♂\"\n  | \"🧚🏻‍♀️\"\n  | \"🧚🏼‍♀️\"\n  | \"🧚🏽‍♀️\"\n  | \"🧚🏾‍♀️\"\n  | \"🧚🏿‍♀️\"\n  | \"🧚‍♀️\"\n  | \"🧚‍♀\"\n  | \"🧛🏻\"\n  | \"🧛🏼\"\n  | \"🧛🏽\"\n  | \"🧛🏾\"\n  | \"🧛🏿\"\n  | \"🧛\"\n  | \"🧛🏻‍♂️\"\n  | \"🧛🏼‍♂️\"\n  | \"🧛🏽‍♂️\"\n  | \"🧛🏾‍♂️\"\n  | \"🧛🏿‍♂️\"\n  | \"🧛‍♂️\"\n  | \"🧛‍♂\"\n  | \"🧛🏻‍♀️\"\n  | \"🧛🏼‍♀️\"\n  | \"🧛🏽‍♀️\"\n  | \"🧛🏾‍♀️\"\n  | \"🧛🏿‍♀️\"\n  | \"🧛‍♀️\"\n  | \"🧛‍♀\"\n  | \"🧜🏻\"\n  | \"🧜🏼\"\n  | \"🧜🏽\"\n  | \"🧜🏾\"\n  | \"🧜🏿\"\n  | \"🧜\"\n  | \"🧜🏻‍♂️\"\n  | \"🧜🏼‍♂️\"\n  | \"🧜🏽‍♂️\"\n  | \"🧜🏾‍♂️\"\n  | \"🧜🏿‍♂️\"\n  | \"🧜‍♂️\"\n  | \"🧜‍♂\"\n  | \"🧜🏻‍♀️\"\n  | \"🧜🏼‍♀️\"\n  | \"🧜🏽‍♀️\"\n  | \"🧜🏾‍♀️\"\n  | \"🧜🏿‍♀️\"\n  | \"🧜‍♀️\"\n  | \"🧜‍♀\"\n  | \"🧝🏻\"\n  | \"🧝🏼\"\n  | \"🧝🏽\"\n  | \"🧝🏾\"\n  | \"🧝🏿\"\n  | \"🧝\"\n  | \"🧝🏻‍♂️\"\n  | \"🧝🏼‍♂️\"\n  | \"🧝🏽‍♂️\"\n  | \"🧝🏾‍♂️\"\n  | \"🧝🏿‍♂️\"\n  | \"🧝‍♂️\"\n  | \"🧝‍♂\"\n  | \"🧝🏻‍♀️\"\n  | \"🧝🏼‍♀️\"\n  | \"🧝🏽‍♀️\"\n  | \"🧝🏾‍♀️\"\n  | \"🧝🏿‍♀️\"\n  | \"🧝‍♀️\"\n  | \"🧝‍♀\"\n  | \"🧞\"\n  | \"🧞‍♂️\"\n  | \"🧞‍♂\"\n  | \"🧞‍♀️\"\n  | \"🧞‍♀\"\n  | \"🧟\"\n  | \"🧟‍♂️\"\n  | \"🧟‍♂\"\n  | \"🧟‍♀️\"\n  | \"🧟‍♀\"\n  | \"💆🏻\"\n  | \"💆🏼\"\n  | \"💆🏽\"\n  | \"💆🏾\"\n  | \"💆🏿\"\n  | \"💆\"\n  | \"💆🏻‍♂️\"\n  | \"💆🏼‍♂️\"\n  | \"💆🏽‍♂️\"\n  | \"💆🏾‍♂️\"\n  | \"💆🏿‍♂️\"\n  | \"💆‍♂️\"\n  | \"💆‍♂\"\n  | \"💆🏻‍♀️\"\n  | \"💆🏼‍♀️\"\n  | \"💆🏽‍♀️\"\n  | \"💆🏾‍♀️\"\n  | \"💆🏿‍♀️\"\n  | \"💆‍♀️\"\n  | \"💆‍♀\"\n  | \"💇🏻\"\n  | \"💇🏼\"\n  | \"💇🏽\"\n  | \"💇🏾\"\n  | \"💇🏿\"\n  | \"💇\"\n  | \"💇🏻‍♂️\"\n  | \"💇🏼‍♂️\"\n  | \"💇🏽‍♂️\"\n  | \"💇🏾‍♂️\"\n  | \"💇🏿‍♂️\"\n  | \"💇‍♂️\"\n  | \"💇‍♂\"\n  | \"💇🏻‍♀️\"\n  | \"💇🏼‍♀️\"\n  | \"💇🏽‍♀️\"\n  | \"💇🏾‍♀️\"\n  | \"💇🏿‍♀️\"\n  | \"💇‍♀️\"\n  | \"💇‍♀\"\n  | \"🚶🏻\"\n  | \"🚶🏼\"\n  | \"🚶🏽\"\n  | \"🚶🏾\"\n  | \"🚶🏿\"\n  | \"🚶\"\n  | \"🚶🏻‍♂️\"\n  | \"🚶🏼‍♂️\"\n  | \"🚶🏽‍♂️\"\n  | \"🚶🏾‍♂️\"\n  | \"🚶🏿‍♂️\"\n  | \"🚶‍♂️\"\n  | \"🚶‍♂\"\n  | \"🚶🏻‍♀️\"\n  | \"🚶🏼‍♀️\"\n  | \"🚶🏽‍♀️\"\n  | \"🚶🏾‍♀️\"\n  | \"🚶🏿‍♀️\"\n  | \"🚶‍♀️\"\n  | \"🚶‍♀\"\n  | \"🧍🏻\"\n  | \"🧍🏼\"\n  | \"🧍🏽\"\n  | \"🧍🏾\"\n  | \"🧍🏿\"\n  | \"🧍\"\n  | \"🧍🏻‍♂️\"\n  | \"🧍🏼‍♂️\"\n  | \"🧍🏽‍♂️\"\n  | \"🧍🏾‍♂️\"\n  | \"🧍🏿‍♂️\"\n  | \"🧍‍♂️\"\n  | \"🧍‍♂\"\n  | \"🧍🏻‍♀️\"\n  | \"🧍🏼‍♀️\"\n  | \"🧍🏽‍♀️\"\n  | \"🧍🏾‍♀️\"\n  | \"🧍🏿‍♀️\"\n  | \"🧍‍♀️\"\n  | \"🧍‍♀\"\n  | \"🧎🏻\"\n  | \"🧎🏼\"\n  | \"🧎🏽\"\n  | \"🧎🏾\"\n  | \"🧎🏿\"\n  | \"🧎\"\n  | \"🧎🏻‍♂️\"\n  | \"🧎🏼‍♂️\"\n  | \"🧎🏽‍♂️\"\n  | \"🧎🏾‍♂️\"\n  | \"🧎🏿‍♂️\"\n  | \"🧎‍♂️\"\n  | \"🧎‍♂\"\n  | \"🧎🏻‍♀️\"\n  | \"🧎🏼‍♀️\"\n  | \"🧎🏽‍♀️\"\n  | \"🧎🏾‍♀️\"\n  | \"🧎🏿‍♀️\"\n  | \"🧎‍♀️\"\n  | \"🧎‍♀\"\n  | \"🧑🏻‍🦯\"\n  | \"🧑🏼‍🦯\"\n  | \"🧑🏽‍🦯\"\n  | \"🧑🏾‍🦯\"\n  | \"🧑🏿‍🦯\"\n  | \"🧑‍🦯\"\n  | \"👨🏻‍🦯\"\n  | \"👨🏼‍🦯\"\n  | \"👨🏽‍🦯\"\n  | \"👨🏾‍🦯\"\n  | \"👨🏿‍🦯\"\n  | \"👨‍🦯\"\n  | \"👩🏻‍🦯\"\n  | \"👩🏼‍🦯\"\n  | \"👩🏽‍🦯\"\n  | \"👩🏾‍🦯\"\n  | \"👩🏿‍🦯\"\n  | \"👩‍🦯\"\n  | \"🧑🏻‍🦼\"\n  | \"🧑🏼‍🦼\"\n  | \"🧑🏽‍🦼\"\n  | \"🧑🏾‍🦼\"\n  | \"🧑🏿‍🦼\"\n  | \"🧑‍🦼\"\n  | \"👨🏻‍🦼\"\n  | \"👨🏼‍🦼\"\n  | \"👨🏽‍🦼\"\n  | \"👨🏾‍🦼\"\n  | \"👨🏿‍🦼\"\n  | \"👨‍🦼\"\n  | \"👩🏻‍🦼\"\n  | \"👩🏼‍🦼\"\n  | \"👩🏽‍🦼\"\n  | \"👩🏾‍🦼\"\n  | \"👩🏿‍🦼\"\n  | \"👩‍🦼\"\n  | \"🧑🏻‍🦽\"\n  | \"🧑🏼‍🦽\"\n  | \"🧑🏽‍🦽\"\n  | \"🧑🏾‍🦽\"\n  | \"🧑🏿‍🦽\"\n  | \"🧑‍🦽\"\n  | \"👨🏻‍🦽\"\n  | \"👨🏼‍🦽\"\n  | \"👨🏽‍🦽\"\n  | \"👨🏾‍🦽\"\n  | \"👨🏿‍🦽\"\n  | \"👨‍🦽\"\n  | \"👩🏻‍🦽\"\n  | \"👩🏼‍🦽\"\n  | \"👩🏽‍🦽\"\n  | \"👩🏾‍🦽\"\n  | \"👩🏿‍🦽\"\n  | \"👩‍🦽\"\n  | \"🏃🏻\"\n  | \"🏃🏼\"\n  | \"🏃🏽\"\n  | \"🏃🏾\"\n  | \"🏃🏿\"\n  | \"🏃\"\n  | \"🏃🏻‍♂️\"\n  | \"🏃🏼‍♂️\"\n  | \"🏃🏽‍♂️\"\n  | \"🏃🏾‍♂️\"\n  | \"🏃🏿‍♂️\"\n  | \"🏃‍♂️\"\n  | \"🏃‍♂\"\n  | \"🏃🏻‍♀️\"\n  | \"🏃🏼‍♀️\"\n  | \"🏃🏽‍♀️\"\n  | \"🏃🏾‍♀️\"\n  | \"🏃🏿‍♀️\"\n  | \"🏃‍♀️\"\n  | \"🏃‍♀\"\n  | \"💃🏻\"\n  | \"💃🏼\"\n  | \"💃🏽\"\n  | \"💃🏾\"\n  | \"💃🏿\"\n  | \"💃\"\n  | \"🕺🏻\"\n  | \"🕺🏼\"\n  | \"🕺🏽\"\n  | \"🕺🏾\"\n  | \"🕺🏿\"\n  | \"🕺\"\n  | \"🕴🏻\"\n  | \"🕴🏼\"\n  | \"🕴🏽\"\n  | \"🕴🏾\"\n  | \"🕴🏿\"\n  | \"🕴️\"\n  | \"🕴\"\n  | \"👯\"\n  | \"👯‍♂️\"\n  | \"👯‍♂\"\n  | \"👯‍♀️\"\n  | \"👯‍♀\"\n  | \"🧖🏻\"\n  | \"🧖🏼\"\n  | \"🧖🏽\"\n  | \"🧖🏾\"\n  | \"🧖🏿\"\n  | \"🧖\"\n  | \"🧖🏻‍♂️\"\n  | \"🧖🏼‍♂️\"\n  | \"🧖🏽‍♂️\"\n  | \"🧖🏾‍♂️\"\n  | \"🧖🏿‍♂️\"\n  | \"🧖‍♂️\"\n  | \"🧖‍♂\"\n  | \"🧖🏻‍♀️\"\n  | \"🧖🏼‍♀️\"\n  | \"🧖🏽‍♀️\"\n  | \"🧖🏾‍♀️\"\n  | \"🧖🏿‍♀️\"\n  | \"🧖‍♀️\"\n  | \"🧖‍♀\"\n  | \"🧗🏻\"\n  | \"🧗🏼\"\n  | \"🧗🏽\"\n  | \"🧗🏾\"\n  | \"🧗🏿\"\n  | \"🧗\"\n  | \"🧗🏻‍♂️\"\n  | \"🧗🏼‍♂️\"\n  | \"🧗🏽‍♂️\"\n  | \"🧗🏾‍♂️\"\n  | \"🧗🏿‍♂️\"\n  | \"🧗‍♂️\"\n  | \"🧗‍♂\"\n  | \"🧗🏻‍♀️\"\n  | \"🧗🏼‍♀️\"\n  | \"🧗🏽‍♀️\"\n  | \"🧗🏾‍♀️\"\n  | \"🧗🏿‍♀️\"\n  | \"🧗‍♀️\"\n  | \"🧗‍♀\"\n  | \"🤺\"\n  | \"🏇🏻\"\n  | \"🏇🏼\"\n  | \"🏇🏽\"\n  | \"🏇🏾\"\n  | \"🏇🏿\"\n  | \"🏇\"\n  | \"⛷️\"\n  | \"⛷\"\n  | \"🏂🏻\"\n  | \"🏂🏼\"\n  | \"🏂🏽\"\n  | \"🏂🏾\"\n  | \"🏂🏿\"\n  | \"🏂\"\n  | \"🏌🏻\"\n  | \"🏌🏼\"\n  | \"🏌🏽\"\n  | \"🏌🏾\"\n  | \"🏌🏿\"\n  | \"🏌️\"\n  | \"🏌\"\n  | \"🏌🏻‍♂️\"\n  | \"🏌🏼‍♂️\"\n  | \"🏌🏽‍♂️\"\n  | \"🏌🏾‍♂️\"\n  | \"🏌🏿‍♂️\"\n  | \"🏌️‍♂️\"\n  | \"🏌🏻‍♀️\"\n  | \"🏌🏼‍♀️\"\n  | \"🏌🏽‍♀️\"\n  | \"🏌🏾‍♀️\"\n  | \"🏌🏿‍♀️\"\n  | \"🏌️‍♀️\"\n  | \"🏄🏻\"\n  | \"🏄🏼\"\n  | \"🏄🏽\"\n  | \"🏄🏾\"\n  | \"🏄🏿\"\n  | \"🏄\"\n  | \"🏄🏻‍♂️\"\n  | \"🏄🏼‍♂️\"\n  | \"🏄🏽‍♂️\"\n  | \"🏄🏾‍♂️\"\n  | \"🏄🏿‍♂️\"\n  | \"🏄‍♂️\"\n  | \"🏄‍♂\"\n  | \"🏄🏻‍♀️\"\n  | \"🏄🏼‍♀️\"\n  | \"🏄🏽‍♀️\"\n  | \"🏄🏾‍♀️\"\n  | \"🏄🏿‍♀️\"\n  | \"🏄‍♀️\"\n  | \"🏄‍♀\"\n  | \"🚣🏻\"\n  | \"🚣🏼\"\n  | \"🚣🏽\"\n  | \"🚣🏾\"\n  | \"🚣🏿\"\n  | \"🚣\"\n  | \"🚣🏻‍♂️\"\n  | \"🚣🏼‍♂️\"\n  | \"🚣🏽‍♂️\"\n  | \"🚣🏾‍♂️\"\n  | \"🚣🏿‍♂️\"\n  | \"🚣‍♂️\"\n  | \"🚣‍♂\"\n  | \"🚣🏻‍♀️\"\n  | \"🚣🏼‍♀️\"\n  | \"🚣🏽‍♀️\"\n  | \"🚣🏾‍♀️\"\n  | \"🚣🏿‍♀️\"\n  | \"🚣‍♀️\"\n  | \"🚣‍♀\"\n  | \"🏊🏻\"\n  | \"🏊🏼\"\n  | \"🏊🏽\"\n  | \"🏊🏾\"\n  | \"🏊🏿\"\n  | \"🏊\"\n  | \"🏊🏻‍♂️\"\n  | \"🏊🏼‍♂️\"\n  | \"🏊🏽‍♂️\"\n  | \"🏊🏾‍♂️\"\n  | \"🏊🏿‍♂️\"\n  | \"🏊‍♂️\"\n  | \"🏊‍♂\"\n  | \"🏊🏻‍♀️\"\n  | \"🏊🏼‍♀️\"\n  | \"🏊🏽‍♀️\"\n  | \"🏊🏾‍♀️\"\n  | \"🏊🏿‍♀️\"\n  | \"🏊‍♀️\"\n  | \"🏊‍♀\"\n  | \"⛹🏻\"\n  | \"⛹🏼\"\n  | \"⛹🏽\"\n  | \"⛹🏾\"\n  | \"⛹🏿\"\n  | \"⛹️\"\n  | \"⛹\"\n  | \"⛹🏻‍♂️\"\n  | \"⛹🏼‍♂️\"\n  | \"⛹🏽‍♂️\"\n  | \"⛹🏾‍♂️\"\n  | \"⛹🏿‍♂️\"\n  | \"⛹️‍♂️\"\n  | \"⛹🏻‍♀️\"\n  | \"⛹🏼‍♀️\"\n  | \"⛹🏽‍♀️\"\n  | \"⛹🏾‍♀️\"\n  | \"⛹🏿‍♀️\"\n  | \"⛹️‍♀️\"\n  | \"🏋🏻\"\n  | \"🏋🏼\"\n  | \"🏋🏽\"\n  | \"🏋🏾\"\n  | \"🏋🏿\"\n  | \"🏋️\"\n  | \"🏋\"\n  | \"🏋🏻‍♂️\"\n  | \"🏋🏼‍♂️\"\n  | \"🏋🏽‍♂️\"\n  | \"🏋🏾‍♂️\"\n  | \"🏋🏿‍♂️\"\n  | \"🏋️‍♂️\"\n  | \"🏋🏻‍♀️\"\n  | \"🏋🏼‍♀️\"\n  | \"🏋🏽‍♀️\"\n  | \"🏋🏾‍♀️\"\n  | \"🏋🏿‍♀️\"\n  | \"🏋️‍♀️\"\n  | \"🚴🏻\"\n  | \"🚴🏼\"\n  | \"🚴🏽\"\n  | \"🚴🏾\"\n  | \"🚴🏿\"\n  | \"🚴\"\n  | \"🚴🏻‍♂️\"\n  | \"🚴🏼‍♂️\"\n  | \"🚴🏽‍♂️\"\n  | \"🚴🏾‍♂️\"\n  | \"🚴🏿‍♂️\"\n  | \"🚴‍♂️\"\n  | \"🚴‍♂\"\n  | \"🚴🏻‍♀️\"\n  | \"🚴🏼‍♀️\"\n  | \"🚴🏽‍♀️\"\n  | \"🚴🏾‍♀️\"\n  | \"🚴🏿‍♀️\"\n  | \"🚴‍♀️\"\n  | \"🚴‍♀\"\n  | \"🚵🏻\"\n  | \"🚵🏼\"\n  | \"🚵🏽\"\n  | \"🚵🏾\"\n  | \"🚵🏿\"\n  | \"🚵\"\n  | \"🚵🏻‍♂️\"\n  | \"🚵🏼‍♂️\"\n  | \"🚵🏽‍♂️\"\n  | \"🚵🏾‍♂️\"\n  | \"🚵🏿‍♂️\"\n  | \"🚵‍♂️\"\n  | \"🚵‍♂\"\n  | \"🚵🏻‍♀️\"\n  | \"🚵🏼‍♀️\"\n  | \"🚵🏽‍♀️\"\n  | \"🚵🏾‍♀️\"\n  | \"🚵🏿‍♀️\"\n  | \"🚵‍♀️\"\n  | \"🚵‍♀\"\n  | \"🤸🏻\"\n  | \"🤸🏼\"\n  | \"🤸🏽\"\n  | \"🤸🏾\"\n  | \"🤸🏿\"\n  | \"🤸\"\n  | \"🤸🏻‍♂️\"\n  | \"🤸🏼‍♂️\"\n  | \"🤸🏽‍♂️\"\n  | \"🤸🏾‍♂️\"\n  | \"🤸🏿‍♂️\"\n  | \"🤸‍♂️\"\n  | \"🤸‍♂\"\n  | \"🤸🏻‍♀️\"\n  | \"🤸🏼‍♀️\"\n  | \"🤸🏽‍♀️\"\n  | \"🤸🏾‍♀️\"\n  | \"🤸🏿‍♀️\"\n  | \"🤸‍♀️\"\n  | \"🤸‍♀\"\n  | \"🤼\"\n  | \"🤼‍♂️\"\n  | \"🤼‍♂\"\n  | \"🤼‍♀️\"\n  | \"🤼‍♀\"\n  | \"🤽🏻\"\n  | \"🤽🏼\"\n  | \"🤽🏽\"\n  | \"🤽🏾\"\n  | \"🤽🏿\"\n  | \"🤽\"\n  | \"🤽🏻‍♂️\"\n  | \"🤽🏼‍♂️\"\n  | \"🤽🏽‍♂️\"\n  | \"🤽🏾‍♂️\"\n  | \"🤽🏿‍♂️\"\n  | \"🤽‍♂️\"\n  | \"🤽‍♂\"\n  | \"🤽🏻‍♀️\"\n  | \"🤽🏼‍♀️\"\n  | \"🤽🏽‍♀️\"\n  | \"🤽🏾‍♀️\"\n  | \"🤽🏿‍♀️\"\n  | \"🤽‍♀️\"\n  | \"🤽‍♀\"\n  | \"🤾🏻\"\n  | \"🤾🏼\"\n  | \"🤾🏽\"\n  | \"🤾🏾\"\n  | \"🤾🏿\"\n  | \"🤾\"\n  | \"🤾🏻‍♂️\"\n  | \"🤾🏼‍♂️\"\n  | \"🤾🏽‍♂️\"\n  | \"🤾🏾‍♂️\"\n  | \"🤾🏿‍♂️\"\n  | \"🤾‍♂️\"\n  | \"🤾‍♂\"\n  | \"🤾🏻‍♀️\"\n  | \"🤾🏼‍♀️\"\n  | \"🤾🏽‍♀️\"\n  | \"🤾🏾‍♀️\"\n  | \"🤾🏿‍♀️\"\n  | \"🤾‍♀️\"\n  | \"🤾‍♀\"\n  | \"🤹🏻\"\n  | \"🤹🏼\"\n  | \"🤹🏽\"\n  | \"🤹🏾\"\n  | \"🤹🏿\"\n  | \"🤹\"\n  | \"🤹🏻‍♂️\"\n  | \"🤹🏼‍♂️\"\n  | \"🤹🏽‍♂️\"\n  | \"🤹🏾‍♂️\"\n  | \"🤹🏿‍♂️\"\n  | \"🤹‍♂️\"\n  | \"🤹‍♂\"\n  | \"🤹🏻‍♀️\"\n  | \"🤹🏼‍♀️\"\n  | \"🤹🏽‍♀️\"\n  | \"🤹🏾‍♀️\"\n  | \"🤹🏿‍♀️\"\n  | \"🤹‍♀️\"\n  | \"🤹‍♀\"\n  | \"🧘🏻\"\n  | \"🧘🏼\"\n  | \"🧘🏽\"\n  | \"🧘🏾\"\n  | \"🧘🏿\"\n  | \"🧘\"\n  | \"🧘🏻‍♂️\"\n  | \"🧘🏼‍♂️\"\n  | \"🧘🏽‍♂️\"\n  | \"🧘🏾‍♂️\"\n  | \"🧘🏿‍♂️\"\n  | \"🧘‍♂️\"\n  | \"🧘‍♂\"\n  | \"🧘🏻‍♀️\"\n  | \"🧘🏼‍♀️\"\n  | \"🧘🏽‍♀️\"\n  | \"🧘🏾‍♀️\"\n  | \"🧘🏿‍♀️\"\n  | \"🧘‍♀️\"\n  | \"🧘‍♀\"\n  | \"🛀🏻\"\n  | \"🛀🏼\"\n  | \"🛀🏽\"\n  | \"🛀🏾\"\n  | \"🛀🏿\"\n  | \"🛀\"\n  | \"🛌🏻\"\n  | \"🛌🏼\"\n  | \"🛌🏽\"\n  | \"🛌🏾\"\n  | \"🛌🏿\"\n  | \"🛌\"\n  | \"🧑🏻‍🤝‍🧑🏻\"\n  | \"🧑🏻‍🤝‍🧑🏼\"\n  | \"🧑🏻‍🤝‍🧑🏽\"\n  | \"🧑🏻‍🤝‍🧑🏾\"\n  | \"🧑🏻‍🤝‍🧑🏿\"\n  | \"🧑🏼‍🤝‍🧑🏻\"\n  | \"🧑🏼‍🤝‍🧑🏼\"\n  | \"🧑🏼‍🤝‍🧑🏽\"\n  | \"🧑🏼‍🤝‍🧑🏾\"\n  | \"🧑🏼‍🤝‍🧑🏿\"\n  | \"🧑🏽‍🤝‍🧑🏻\"\n  | \"🧑🏽‍🤝‍🧑🏼\"\n  | \"🧑🏽‍🤝‍🧑🏽\"\n  | \"🧑🏽‍🤝‍🧑🏾\"\n  | \"🧑🏽‍🤝‍🧑🏿\"\n  | \"🧑🏾‍🤝‍🧑🏻\"\n  | \"🧑🏾‍🤝‍🧑🏼\"\n  | \"🧑🏾‍🤝‍🧑🏽\"\n  | \"🧑🏾‍🤝‍🧑🏾\"\n  | \"🧑🏾‍🤝‍🧑🏿\"\n  | \"🧑🏿‍🤝‍🧑🏻\"\n  | \"🧑🏿‍🤝‍🧑🏼\"\n  | \"🧑🏿‍🤝‍🧑🏽\"\n  | \"🧑🏿‍🤝‍🧑🏾\"\n  | \"🧑🏿‍🤝‍🧑🏿\"\n  | \"🧑‍🤝‍🧑\"\n  | \"👭\"\n  | \"👫\"\n  | \"👬\"\n  | \"💏\"\n  | \"💑\"\n  | \"👪\"\n  | \"👨‍👩‍👦\"\n  | \"👨‍👩‍👧\"\n  | \"👨‍👩‍👧‍👦\"\n  | \"👨‍👩‍👦‍👦\"\n  | \"👨‍👩‍👧‍👧\"\n  | \"👨‍👨‍👦\"\n  | \"👨‍👨‍👧\"\n  | \"👨‍👨‍👧‍👦\"\n  | \"👨‍👨‍👦‍👦\"\n  | \"👨‍👨‍👧‍👧\"\n  | \"👩‍👩‍👦\"\n  | \"👩‍👩‍👧\"\n  | \"👩‍👩‍👧‍👦\"\n  | \"👩‍👩‍👦‍👦\"\n  | \"👩‍👩‍👧‍👧\"\n  | \"👨‍👦\"\n  | \"👨‍👦‍👦\"\n  | \"👨‍👧\"\n  | \"👨‍👧‍👦\"\n  | \"👨‍👧‍👧\"\n  | \"👩‍👦\"\n  | \"👩‍👦‍👦\"\n  | \"👩‍👧\"\n  | \"👩‍👧‍👦\"\n  | \"👩‍👧‍👧\"\n  | \"🗣️\"\n  | \"🗣\"\n  | \"👤\"\n  | \"👥\"\n  | \"🫂\"\n  | \"👣\"\n  | \"🐵\"\n  | \"🐒\"\n  | \"🦍\"\n  | \"🦧\"\n  | \"🐶\"\n  | \"🐕\"\n  | \"🦮\"\n  | \"🐕‍🦺\"\n  | \"🐩\"\n  | \"🐺\"\n  | \"🦊\"\n  | \"🦝\"\n  | \"🐱\"\n  | \"🐈\"\n  | \"🐈‍⬛\"\n  | \"🦁\"\n  | \"🐯\"\n  | \"🐅\"\n  | \"🐆\"\n  | \"🐴\"\n  | \"🐎\"\n  | \"🦄\"\n  | \"🦓\"\n  | \"🦌\"\n  | \"🦬\"\n  | \"🐮\"\n  | \"🐂\"\n  | \"🐃\"\n  | \"🐄\"\n  | \"🐷\"\n  | \"🐖\"\n  | \"🐗\"\n  | \"🐽\"\n  | \"🐏\"\n  | \"🐑\"\n  | \"🐐\"\n  | \"🐪\"\n  | \"🐫\"\n  | \"🦙\"\n  | \"🦒\"\n  | \"🐘\"\n  | \"🦣\"\n  | \"🦏\"\n  | \"🦛\"\n  | \"🐭\"\n  | \"🐁\"\n  | \"🐀\"\n  | \"🐹\"\n  | \"🐰\"\n  | \"🐇\"\n  | \"🐿️\"\n  | \"🐿\"\n  | \"🦫\"\n  | \"🦔\"\n  | \"🦇\"\n  | \"🐻\"\n  | \"🐻‍❄️\"\n  | \"🐻‍❄\"\n  | \"🐨\"\n  | \"🐼\"\n  | \"🦥\"\n  | \"🦦\"\n  | \"🦨\"\n  | \"🦘\"\n  | \"🦡\"\n  | \"🐾\"\n  | \"🦃\"\n  | \"🐔\"\n  | \"🐓\"\n  | \"🐣\"\n  | \"🐤\"\n  | \"🐥\"\n  | \"🐦\"\n  | \"🐧\"\n  | \"🕊️\"\n  | \"🕊\"\n  | \"🦅\"\n  | \"🦆\"\n  | \"🦢\"\n  | \"🦉\"\n  | \"🦤\"\n  | \"🪶\"\n  | \"🦩\"\n  | \"🦚\"\n  | \"🦜\"\n  | \"🐸\"\n  | \"🐊\"\n  | \"🐢\"\n  | \"🦎\"\n  | \"🐍\"\n  | \"🐲\"\n  | \"🐉\"\n  | \"🦕\"\n  | \"🦖\"\n  | \"🐳\"\n  | \"🐋\"\n  | \"🐬\"\n  | \"🦭\"\n  | \"🐟\"\n  | \"🐠\"\n  | \"🐡\"\n  | \"🦈\"\n  | \"🐙\"\n  | \"🐚\"\n  | \"🐌\"\n  | \"🦋\"\n  | \"🐛\"\n  | \"🐜\"\n  | \"🐝\"\n  | \"🪲\"\n  | \"🐞\"\n  | \"🦗\"\n  | \"🪳\"\n  | \"🕷️\"\n  | \"🕷\"\n  | \"🕸️\"\n  | \"🕸\"\n  | \"🦂\"\n  | \"🦟\"\n  | \"🪰\"\n  | \"🪱\"\n  | \"🦠\"\n  | \"💐\"\n  | \"🌸\"\n  | \"💮\"\n  | \"🏵️\"\n  | \"🏵\"\n  | \"🌹\"\n  | \"🥀\"\n  | \"🌺\"\n  | \"🌻\"\n  | \"🌼\"\n  | \"🌷\"\n  | \"🌱\"\n  | \"🪴\"\n  | \"🌲\"\n  | \"🌳\"\n  | \"🌴\"\n  | \"🌵\"\n  | \"🌾\"\n  | \"🌿\"\n  | \"☘️\"\n  | \"☘\"\n  | \"🍀\"\n  | \"🍁\"\n  | \"🍂\"\n  | \"🍃\"\n  | \"🍇\"\n  | \"🍈\"\n  | \"🍉\"\n  | \"🍊\"\n  | \"🍋\"\n  | \"🍌\"\n  | \"🍍\"\n  | \"🥭\"\n  | \"🍎\"\n  | \"🍏\"\n  | \"🍐\"\n  | \"🍑\"\n  | \"🍒\"\n  | \"🍓\"\n  | \"🫐\"\n  | \"🥝\"\n  | \"🍅\"\n  | \"🫒\"\n  | \"🥥\"\n  | \"🥑\"\n  | \"🍆\"\n  | \"🥔\"\n  | \"🥕\"\n  | \"🌽\"\n  | \"🌶️\"\n  | \"🌶\"\n  | \"🫑\"\n  | \"🥒\"\n  | \"🥬\"\n  | \"🥦\"\n  | \"🧄\"\n  | \"🧅\"\n  | \"🍄\"\n  | \"🥜\"\n  | \"🌰\"\n  | \"🍞\"\n  | \"🥐\"\n  | \"🥖\"\n  | \"🫓\"\n  | \"🥨\"\n  | \"🥯\"\n  | \"🥞\"\n  | \"🧇\"\n  | \"🧀\"\n  | \"🍖\"\n  | \"🍗\"\n  | \"🥩\"\n  | \"🥓\"\n  | \"🍔\"\n  | \"🍟\"\n  | \"🍕\"\n  | \"🌭\"\n  | \"🥪\"\n  | \"🌮\"\n  | \"🌯\"\n  | \"🫔\"\n  | \"🥙\"\n  | \"🧆\"\n  | \"🥚\"\n  | \"🍳\"\n  | \"🥘\"\n  | \"🍲\"\n  | \"🫕\"\n  | \"🥣\"\n  | \"🥗\"\n  | \"🍿\"\n  | \"🧈\"\n  | \"🧂\"\n  | \"🥫\"\n  | \"🍱\"\n  | \"🍘\"\n  | \"🍙\"\n  | \"🍚\"\n  | \"🍛\"\n  | \"🍜\"\n  | \"🍝\"\n  | \"🍠\"\n  | \"🍢\"\n  | \"🍣\"\n  | \"🍤\"\n  | \"🍥\"\n  | \"🥮\"\n  | \"🍡\"\n  | \"🥟\"\n  | \"🥠\"\n  | \"🥡\"\n  | \"🦀\"\n  | \"🦞\"\n  | \"🦐\"\n  | \"🦑\"\n  | \"🦪\"\n  | \"🍦\"\n  | \"🍧\"\n  | \"🍨\"\n  | \"🍩\"\n  | \"🍪\"\n  | \"🎂\"\n  | \"🍰\"\n  | \"🧁\"\n  | \"🥧\"\n  | \"🍫\"\n  | \"🍬\"\n  | \"🍭\"\n  | \"🍮\"\n  | \"🍯\"\n  | \"🍼\"\n  | \"🥛\"\n  | \"☕\"\n  | \"🫖\"\n  | \"🍵\"\n  | \"🍶\"\n  | \"🍾\"\n  | \"🍷\"\n  | \"🍸\"\n  | \"🍹\"\n  | \"🍺\"\n  | \"🍻\"\n  | \"🥂\"\n  | \"🥃\"\n  | \"🥤\"\n  | \"🧋\"\n  | \"🧃\"\n  | \"🧉\"\n  | \"🧊\"\n  | \"🥢\"\n  | \"🍽️\"\n  | \"🍽\"\n  | \"🍴\"\n  | \"🥄\"\n  | \"🔪\"\n  | \"🏺\"\n  | \"🌍\"\n  | \"🌎\"\n  | \"🌏\"\n  | \"🌐\"\n  | \"🗺️\"\n  | \"🗺\"\n  | \"🗾\"\n  | \"🧭\"\n  | \"🏔️\"\n  | \"🏔\"\n  | \"⛰️\"\n  | \"⛰\"\n  | \"🌋\"\n  | \"🗻\"\n  | \"🏕️\"\n  | \"🏕\"\n  | \"🏖️\"\n  | \"🏖\"\n  | \"🏜️\"\n  | \"🏜\"\n  | \"🏝️\"\n  | \"🏝\"\n  | \"🏞️\"\n  | \"🏞\"\n  | \"🏟️\"\n  | \"🏟\"\n  | \"🏛️\"\n  | \"🏛\"\n  | \"🏗️\"\n  | \"🏗\"\n  | \"🧱\"\n  | \"🪨\"\n  | \"🪵\"\n  | \"🛖\"\n  | \"🏘️\"\n  | \"🏘\"\n  | \"🏚️\"\n  | \"🏚\"\n  | \"🏠\"\n  | \"🏡\"\n  | \"🏢\"\n  | \"🏣\"\n  | \"🏤\"\n  | \"🏥\"\n  | \"🏦\"\n  | \"🏨\"\n  | \"🏩\"\n  | \"🏪\"\n  | \"🏫\"\n  | \"🏬\"\n  | \"🏭\"\n  | \"🏯\"\n  | \"🏰\"\n  | \"💒\"\n  | \"🗼\"\n  | \"🗽\"\n  | \"⛪\"\n  | \"🕌\"\n  | \"🛕\"\n  | \"🕍\"\n  | \"⛩️\"\n  | \"⛩\"\n  | \"🕋\"\n  | \"⛲\"\n  | \"⛺\"\n  | \"🌁\"\n  | \"🌃\"\n  | \"🏙️\"\n  | \"🏙\"\n  | \"🌄\"\n  | \"🌅\"\n  | \"🌆\"\n  | \"🌇\"\n  | \"🌉\"\n  | \"♨️\"\n  | \"♨\"\n  | \"🎠\"\n  | \"🎡\"\n  | \"🎢\"\n  | \"💈\"\n  | \"🎪\"\n  | \"🚂\"\n  | \"🚃\"\n  | \"🚄\"\n  | \"🚅\"\n  | \"🚆\"\n  | \"🚇\"\n  | \"🚈\"\n  | \"🚉\"\n  | \"🚊\"\n  | \"🚝\"\n  | \"🚞\"\n  | \"🚋\"\n  | \"🚌\"\n  | \"🚍\"\n  | \"🚎\"\n  | \"🚐\"\n  | \"🚑\"\n  | \"🚒\"\n  | \"🚓\"\n  | \"🚔\"\n  | \"🚕\"\n  | \"🚖\"\n  | \"🚗\"\n  | \"🚘\"\n  | \"🚙\"\n  | \"🛻\"\n  | \"🚚\"\n  | \"🚛\"\n  | \"🚜\"\n  | \"🏎️\"\n  | \"🏎\"\n  | \"🏍️\"\n  | \"🏍\"\n  | \"🛵\"\n  | \"🦽\"\n  | \"🦼\"\n  | \"🛺\"\n  | \"🚲\"\n  | \"🛴\"\n  | \"🛹\"\n  | \"🛼\"\n  | \"🚏\"\n  | \"🛣️\"\n  | \"🛣\"\n  | \"🛤️\"\n  | \"🛤\"\n  | \"🛢️\"\n  | \"🛢\"\n  | \"⛽\"\n  | \"🚨\"\n  | \"🚥\"\n  | \"🚦\"\n  | \"🛑\"\n  | \"🚧\"\n  | \"⚓\"\n  | \"⛵\"\n  | \"🛶\"\n  | \"🚤\"\n  | \"🛳️\"\n  | \"🛳\"\n  | \"⛴️\"\n  | \"⛴\"\n  | \"🛥️\"\n  | \"🛥\"\n  | \"🚢\"\n  | \"✈️\"\n  | \"✈\"\n  | \"🛩️\"\n  | \"🛩\"\n  | \"🛫\"\n  | \"🛬\"\n  | \"🪂\"\n  | \"💺\"\n  | \"🚁\"\n  | \"🚟\"\n  | \"🚠\"\n  | \"🚡\"\n  | \"🛰️\"\n  | \"🛰\"\n  | \"🚀\"\n  | \"🛸\"\n  | \"🛎️\"\n  | \"🛎\"\n  | \"🧳\"\n  | \"⌛\"\n  | \"⏳\"\n  | \"⌚\"\n  | \"⏰\"\n  | \"⏱️\"\n  | \"⏱\"\n  | \"⏲️\"\n  | \"⏲\"\n  | \"🕰️\"\n  | \"🕰\"\n  | \"🕛\"\n  | \"🕧\"\n  | \"🕐\"\n  | \"🕜\"\n  | \"🕑\"\n  | \"🕝\"\n  | \"🕒\"\n  | \"🕞\"\n  | \"🕓\"\n  | \"🕟\"\n  | \"🕔\"\n  | \"🕠\"\n  | \"🕕\"\n  | \"🕡\"\n  | \"🕖\"\n  | \"🕢\"\n  | \"🕗\"\n  | \"🕣\"\n  | \"🕘\"\n  | \"🕤\"\n  | \"🕙\"\n  | \"🕥\"\n  | \"🕚\"\n  | \"🕦\"\n  | \"🌑\"\n  | \"🌒\"\n  | \"🌓\"\n  | \"🌔\"\n  | \"🌕\"\n  | \"🌖\"\n  | \"🌗\"\n  | \"🌘\"\n  | \"🌙\"\n  | \"🌚\"\n  | \"🌛\"\n  | \"🌜\"\n  | \"🌡️\"\n  | \"🌡\"\n  | \"☀️\"\n  | \"☀\"\n  | \"🌝\"\n  | \"🌞\"\n  | \"🪐\"\n  | \"⭐\"\n  | \"🌟\"\n  | \"🌠\"\n  | \"🌌\"\n  | \"☁️\"\n  | \"☁\"\n  | \"⛅\"\n  | \"⛈️\"\n  | \"⛈\"\n  | \"🌤️\"\n  | \"🌤\"\n  | \"🌥️\"\n  | \"🌥\"\n  | \"🌦️\"\n  | \"🌦\"\n  | \"🌧️\"\n  | \"🌧\"\n  | \"🌨️\"\n  | \"🌨\"\n  | \"🌩️\"\n  | \"🌩\"\n  | \"🌪️\"\n  | \"🌪\"\n  | \"🌫️\"\n  | \"🌫\"\n  | \"🌬️\"\n  | \"🌬\"\n  | \"🌀\"\n  | \"🌈\"\n  | \"🌂\"\n  | \"☂️\"\n  | \"☂\"\n  | \"☔\"\n  | \"⛱️\"\n  | \"⛱\"\n  | \"⚡\"\n  | \"❄️\"\n  | \"❄\"\n  | \"☃️\"\n  | \"☃\"\n  | \"⛄\"\n  | \"☄️\"\n  | \"☄\"\n  | \"🔥\"\n  | \"💧\"\n  | \"🌊\"\n  | \"🎃\"\n  | \"🎄\"\n  | \"🎆\"\n  | \"🎇\"\n  | \"🧨\"\n  | \"✨\"\n  | \"🎈\"\n  | \"🎉\"\n  | \"🎊\"\n  | \"🎋\"\n  | \"🎍\"\n  | \"🎎\"\n  | \"🎏\"\n  | \"🎐\"\n  | \"🎑\"\n  | \"🧧\"\n  | \"🎀\"\n  | \"🎁\"\n  | \"🎗️\"\n  | \"🎗\"\n  | \"🎟️\"\n  | \"🎟\"\n  | \"🎫\"\n  | \"🎖️\"\n  | \"🎖\"\n  | \"🏆\"\n  | \"🏅\"\n  | \"🥇\"\n  | \"🥈\"\n  | \"🥉\"\n  | \"⚽\"\n  | \"⚾\"\n  | \"🥎\"\n  | \"🏀\"\n  | \"🏐\"\n  | \"🏈\"\n  | \"🏉\"\n  | \"🎾\"\n  | \"🥏\"\n  | \"🎳\"\n  | \"🏏\"\n  | \"🏑\"\n  | \"🏒\"\n  | \"🥍\"\n  | \"🏓\"\n  | \"🏸\"\n  | \"🥊\"\n  | \"🥋\"\n  | \"🥅\"\n  | \"⛳\"\n  | \"⛸️\"\n  | \"⛸\"\n  | \"🎣\"\n  | \"🤿\"\n  | \"🎽\"\n  | \"🎿\"\n  | \"🛷\"\n  | \"🥌\"\n  | \"🎯\"\n  | \"🪀\"\n  | \"🪁\"\n  | \"🎱\"\n  | \"🔮\"\n  | \"🪄\"\n  | \"🧿\"\n  | \"🎮\"\n  | \"🕹️\"\n  | \"🕹\"\n  | \"🎰\"\n  | \"🎲\"\n  | \"🧩\"\n  | \"🧸\"\n  | \"🪅\"\n  | \"🪆\"\n  | \"♠️\"\n  | \"♠\"\n  | \"♥️\"\n  | \"♥\"\n  | \"♦️\"\n  | \"♦\"\n  | \"♣️\"\n  | \"♣\"\n  | \"♟️\"\n  | \"♟\"\n  | \"🃏\"\n  | \"🀄\"\n  | \"🎴\"\n  | \"🎭\"\n  | \"🖼️\"\n  | \"🖼\"\n  | \"🎨\"\n  | \"🧵\"\n  | \"🪡\"\n  | \"🧶\"\n  | \"🪢\"\n  | \"👓\"\n  | \"🕶️\"\n  | \"🕶\"\n  | \"🥽\"\n  | \"🥼\"\n  | \"🦺\"\n  | \"👔\"\n  | \"👕\"\n  | \"👖\"\n  | \"🧣\"\n  | \"🧤\"\n  | \"🧥\"\n  | \"🧦\"\n  | \"👗\"\n  | \"👘\"\n  | \"🥻\"\n  | \"🩱\"\n  | \"🩲\"\n  | \"🩳\"\n  | \"👙\"\n  | \"👚\"\n  | \"👛\"\n  | \"👜\"\n  | \"👝\"\n  | \"🛍️\"\n  | \"🛍\"\n  | \"🎒\"\n  | \"🩴\"\n  | \"👞\"\n  | \"👟\"\n  | \"🥾\"\n  | \"🥿\"\n  | \"👠\"\n  | \"👡\"\n  | \"🩰\"\n  | \"👢\"\n  | \"👑\"\n  | \"👒\"\n  | \"🎩\"\n  | \"🎓\"\n  | \"🧢\"\n  | \"🪖\"\n  | \"⛑️\"\n  | \"⛑\"\n  | \"📿\"\n  | \"💄\"\n  | \"💍\"\n  | \"💎\"\n  | \"🔇\"\n  | \"🔈\"\n  | \"🔉\"\n  | \"🔊\"\n  | \"📢\"\n  | \"📣\"\n  | \"📯\"\n  | \"🔔\"\n  | \"🔕\"\n  | \"🎼\"\n  | \"🎵\"\n  | \"🎶\"\n  | \"🎙️\"\n  | \"🎙\"\n  | \"🎚️\"\n  | \"🎚\"\n  | \"🎛️\"\n  | \"🎛\"\n  | \"🎤\"\n  | \"🎧\"\n  | \"📻\"\n  | \"🎷\"\n  | \"🪗\"\n  | \"🎸\"\n  | \"🎹\"\n  | \"🎺\"\n  | \"🎻\"\n  | \"🪕\"\n  | \"🥁\"\n  | \"🪘\"\n  | \"📱\"\n  | \"📲\"\n  | \"☎️\"\n  | \"☎\"\n  | \"📞\"\n  | \"📟\"\n  | \"📠\"\n  | \"🔋\"\n  | \"🔌\"\n  | \"💻\"\n  | \"🖥️\"\n  | \"🖥\"\n  | \"🖨️\"\n  | \"🖨\"\n  | \"⌨️\"\n  | \"⌨\"\n  | \"🖱️\"\n  | \"🖱\"\n  | \"🖲️\"\n  | \"🖲\"\n  | \"💽\"\n  | \"💾\"\n  | \"💿\"\n  | \"📀\"\n  | \"🧮\"\n  | \"🎥\"\n  | \"🎞️\"\n  | \"🎞\"\n  | \"📽️\"\n  | \"📽\"\n  | \"🎬\"\n  | \"📺\"\n  | \"📷\"\n  | \"📸\"\n  | \"📹\"\n  | \"📼\"\n  | \"🔍\"\n  | \"🔎\"\n  | \"🕯️\"\n  | \"🕯\"\n  | \"💡\"\n  | \"🔦\"\n  | \"🏮\"\n  | \"🪔\"\n  | \"📔\"\n  | \"📕\"\n  | \"📖\"\n  | \"📗\"\n  | \"📘\"\n  | \"📙\"\n  | \"📚\"\n  | \"📓\"\n  | \"📒\"\n  | \"📃\"\n  | \"📜\"\n  | \"📄\"\n  | \"📰\"\n  | \"🗞️\"\n  | \"🗞\"\n  | \"📑\"\n  | \"🔖\"\n  | \"🏷️\"\n  | \"🏷\"\n  | \"💰\"\n  | \"🪙\"\n  | \"💴\"\n  | \"💵\"\n  | \"💶\"\n  | \"💷\"\n  | \"💸\"\n  | \"💳\"\n  | \"🧾\"\n  | \"💹\"\n  | \"✉️\"\n  | \"✉\"\n  | \"📧\"\n  | \"📨\"\n  | \"📩\"\n  | \"📤\"\n  | \"📥\"\n  | \"📦\"\n  | \"📫\"\n  | \"📪\"\n  | \"📬\"\n  | \"📭\"\n  | \"📮\"\n  | \"🗳️\"\n  | \"🗳\"\n  | \"✏️\"\n  | \"✏\"\n  | \"✒️\"\n  | \"✒\"\n  | \"🖋️\"\n  | \"🖋\"\n  | \"🖊️\"\n  | \"🖊\"\n  | \"🖌️\"\n  | \"🖌\"\n  | \"🖍️\"\n  | \"🖍\"\n  | \"📝\"\n  | \"💼\"\n  | \"📁\"\n  | \"📂\"\n  | \"🗂️\"\n  | \"🗂\"\n  | \"📅\"\n  | \"📆\"\n  | \"🗒️\"\n  | \"🗒\"\n  | \"🗓️\"\n  | \"🗓\"\n  | \"📇\"\n  | \"📈\"\n  | \"📉\"\n  | \"📊\"\n  | \"📋\"\n  | \"📌\"\n  | \"📍\"\n  | \"📎\"\n  | \"🖇️\"\n  | \"🖇\"\n  | \"📏\"\n  | \"📐\"\n  | \"✂️\"\n  | \"✂\"\n  | \"🗃️\"\n  | \"🗃\"\n  | \"🗄️\"\n  | \"🗄\"\n  | \"🗑️\"\n  | \"🗑\"\n  | \"🔒\"\n  | \"🔓\"\n  | \"🔏\"\n  | \"🔐\"\n  | \"🔑\"\n  | \"🗝️\"\n  | \"🗝\"\n  | \"🔨\"\n  | \"🪓\"\n  | \"⛏️\"\n  | \"⛏\"\n  | \"⚒️\"\n  | \"⚒\"\n  | \"🛠️\"\n  | \"🛠\"\n  | \"🗡️\"\n  | \"🗡\"\n  | \"⚔️\"\n  | \"⚔\"\n  | \"🔫\"\n  | \"🪃\"\n  | \"🏹\"\n  | \"🛡️\"\n  | \"🛡\"\n  | \"🪚\"\n  | \"🔧\"\n  | \"🪛\"\n  | \"🔩\"\n  | \"⚙️\"\n  | \"⚙\"\n  | \"🗜️\"\n  | \"🗜\"\n  | \"⚖️\"\n  | \"⚖\"\n  | \"🦯\"\n  | \"🔗\"\n  | \"⛓️\"\n  | \"⛓\"\n  | \"🪝\"\n  | \"🧰\"\n  | \"🧲\"\n  | \"🪜\"\n  | \"⚗️\"\n  | \"⚗\"\n  | \"🧪\"\n  | \"🧫\"\n  | \"🧬\"\n  | \"🔬\"\n  | \"🔭\"\n  | \"📡\"\n  | \"💉\"\n  | \"🩸\"\n  | \"💊\"\n  | \"🩹\"\n  | \"🩺\"\n  | \"🚪\"\n  | \"🛗\"\n  | \"🪞\"\n  | \"🪟\"\n  | \"🛏️\"\n  | \"🛏\"\n  | \"🛋️\"\n  | \"🛋\"\n  | \"🪑\"\n  | \"🚽\"\n  | \"🪠\"\n  | \"🚿\"\n  | \"🛁\"\n  | \"🪤\"\n  | \"🪒\"\n  | \"🧴\"\n  | \"🧷\"\n  | \"🧹\"\n  | \"🧺\"\n  | \"🧻\"\n  | \"🪣\"\n  | \"🧼\"\n  | \"🪥\"\n  | \"🧽\"\n  | \"🧯\"\n  | \"🛒\"\n  | \"🚬\"\n  | \"⚰️\"\n  | \"⚰\"\n  | \"🪦\"\n  | \"⚱️\"\n  | \"⚱\"\n  | \"🗿\"\n  | \"🪧\"\n  | \"🏧\"\n  | \"🚮\"\n  | \"🚰\"\n  | \"♿\"\n  | \"🚹\"\n  | \"🚺\"\n  | \"🚻\"\n  | \"🚼\"\n  | \"🚾\"\n  | \"🛂\"\n  | \"🛃\"\n  | \"🛄\"\n  | \"🛅\"\n  | \"⚠️\"\n  | \"⚠\"\n  | \"🚸\"\n  | \"⛔\"\n  | \"🚫\"\n  | \"🚳\"\n  | \"🚭\"\n  | \"🚯\"\n  | \"🚱\"\n  | \"🚷\"\n  | \"📵\"\n  | \"🔞\"\n  | \"☢️\"\n  | \"☢\"\n  | \"☣️\"\n  | \"☣\"\n  | \"⬆️\"\n  | \"⬆\"\n  | \"↗️\"\n  | \"↗\"\n  | \"➡️\"\n  | \"➡\"\n  | \"↘️\"\n  | \"↘\"\n  | \"⬇️\"\n  | \"⬇\"\n  | \"↙️\"\n  | \"↙\"\n  | \"⬅️\"\n  | \"⬅\"\n  | \"↖️\"\n  | \"↖\"\n  | \"↕️\"\n  | \"↕\"\n  | \"↔️\"\n  | \"↔\"\n  | \"↩️\"\n  | \"↩\"\n  | \"↪️\"\n  | \"↪\"\n  | \"⤴️\"\n  | \"⤴\"\n  | \"⤵️\"\n  | \"⤵\"\n  | \"🔃\"\n  | \"🔄\"\n  | \"🔙\"\n  | \"🔚\"\n  | \"🔛\"\n  | \"🔜\"\n  | \"🔝\"\n  | \"🛐\"\n  | \"⚛️\"\n  | \"⚛\"\n  | \"🕉️\"\n  | \"🕉\"\n  | \"✡️\"\n  | \"✡\"\n  | \"☸️\"\n  | \"☸\"\n  | \"☯️\"\n  | \"☯\"\n  | \"✝️\"\n  | \"✝\"\n  | \"☦️\"\n  | \"☦\"\n  | \"☪️\"\n  | \"☪\"\n  | \"☮️\"\n  | \"☮\"\n  | \"🕎\"\n  | \"🔯\"\n  | \"♈\"\n  | \"♉\"\n  | \"♊\"\n  | \"♋\"\n  | \"♌\"\n  | \"♍\"\n  | \"♎\"\n  | \"♏\"\n  | \"♐\"\n  | \"♑\"\n  | \"♒\"\n  | \"♓\"\n  | \"⛎\"\n  | \"🔀\"\n  | \"🔁\"\n  | \"🔂\"\n  | \"▶️\"\n  | \"▶\"\n  | \"⏩\"\n  | \"⏭️\"\n  | \"⏭\"\n  | \"⏯️\"\n  | \"⏯\"\n  | \"◀️\"\n  | \"◀\"\n  | \"⏪\"\n  | \"⏮️\"\n  | \"⏮\"\n  | \"🔼\"\n  | \"⏫\"\n  | \"🔽\"\n  | \"⏬\"\n  | \"⏸️\"\n  | \"⏸\"\n  | \"⏹️\"\n  | \"⏹\"\n  | \"⏺️\"\n  | \"⏺\"\n  | \"⏏️\"\n  | \"⏏\"\n  | \"🎦\"\n  | \"🔅\"\n  | \"🔆\"\n  | \"📶\"\n  | \"📳\"\n  | \"📴\"\n  | \"♀️\"\n  | \"♀\"\n  | \"♂️\"\n  | \"♂\"\n  | \"⚧️\"\n  | \"⚧\"\n  | \"✖️\"\n  | \"✖\"\n  | \"➕\"\n  | \"➖\"\n  | \"➗\"\n  | \"♾️\"\n  | \"♾\"\n  | \"‼️\"\n  | \"‼\"\n  | \"⁉️\"\n  | \"⁉\"\n  | \"❓\"\n  | \"❔\"\n  | \"❕\"\n  | \"❗\"\n  | \"〰️\"\n  | \"〰\"\n  | \"💱\"\n  | \"💲\"\n  | \"⚕️\"\n  | \"⚕\"\n  | \"♻️\"\n  | \"♻\"\n  | \"⚜️\"\n  | \"⚜\"\n  | \"🔱\"\n  | \"📛\"\n  | \"🔰\"\n  | \"⭕\"\n  | \"✅\"\n  | \"☑️\"\n  | \"☑\"\n  | \"✔️\"\n  | \"✔\"\n  | \"❌\"\n  | \"❎\"\n  | \"➰\"\n  | \"➿\"\n  | \"〽️\"\n  | \"〽\"\n  | \"✳️\"\n  | \"✳\"\n  | \"✴️\"\n  | \"✴\"\n  | \"❇️\"\n  | \"❇\"\n  | \"©️\"\n  | \"©\"\n  | \"®️\"\n  | \"®\"\n  | \"™️\"\n  | \"™\"\n  | \"#️⃣\"\n  | \"#⃣\"\n  | \"*️⃣\"\n  | \"*⃣\"\n  | \"0️⃣\"\n  | \"0⃣\"\n  | \"1️⃣\"\n  | \"1⃣\"\n  | \"2️⃣\"\n  | \"2⃣\"\n  | \"3️⃣\"\n  | \"3⃣\"\n  | \"4️⃣\"\n  | \"4⃣\"\n  | \"5️⃣\"\n  | \"5⃣\"\n  | \"6️⃣\"\n  | \"6⃣\"\n  | \"7️⃣\"\n  | \"7⃣\"\n  | \"8️⃣\"\n  | \"8⃣\"\n  | \"9️⃣\"\n  | \"9⃣\"\n  | \"🔟\"\n  | \"🔠\"\n  | \"🔡\"\n  | \"🔢\"\n  | \"🔣\"\n  | \"🔤\"\n  | \"🅰️\"\n  | \"🅰\"\n  | \"🆎\"\n  | \"🅱️\"\n  | \"🅱\"\n  | \"🆑\"\n  | \"🆒\"\n  | \"🆓\"\n  | \"ℹ️\"\n  | \"ℹ\"\n  | \"🆔\"\n  | \"Ⓜ️\"\n  | \"Ⓜ\"\n  | \"🆕\"\n  | \"🆖\"\n  | \"🅾️\"\n  | \"🅾\"\n  | \"🆗\"\n  | \"🅿️\"\n  | \"🅿\"\n  | \"🆘\"\n  | \"🆙\"\n  | \"🆚\"\n  | \"🈁\"\n  | \"🈂️\"\n  | \"🈂\"\n  | \"🈷️\"\n  | \"🈷\"\n  | \"🈶\"\n  | \"🈯\"\n  | \"🉐\"\n  | \"🈹\"\n  | \"🈚\"\n  | \"🈲\"\n  | \"🉑\"\n  | \"🈸\"\n  | \"🈴\"\n  | \"🈳\"\n  | \"㊗️\"\n  | \"㊗\"\n  | \"㊙️\"\n  | \"㊙\"\n  | \"🈺\"\n  | \"🈵\"\n  | \"🔴\"\n  | \"🟠\"\n  | \"🟡\"\n  | \"🟢\"\n  | \"🔵\"\n  | \"🟣\"\n  | \"🟤\"\n  | \"⚫\"\n  | \"⚪\"\n  | \"🟥\"\n  | \"🟧\"\n  | \"🟨\"\n  | \"🟩\"\n  | \"🟦\"\n  | \"🟪\"\n  | \"🟫\"\n  | \"⬛\"\n  | \"⬜\"\n  | \"◼️\"\n  | \"◼\"\n  | \"◻️\"\n  | \"◻\"\n  | \"◾\"\n  | \"◽\"\n  | \"▪️\"\n  | \"▪\"\n  | \"▫️\"\n  | \"▫\"\n  | \"🔶\"\n  | \"🔷\"\n  | \"🔸\"\n  | \"🔹\"\n  | \"🔺\"\n  | \"🔻\"\n  | \"💠\"\n  | \"🔘\"\n  | \"🔳\"\n  | \"🔲\"\n  | \"🏁\"\n  | \"🚩\"\n  | \"🎌\"\n  | \"🏴\"\n  | \"🏳️\"\n  | \"🏳\"\n  | \"🏳️‍🌈\"\n  | \"🏳‍🌈\"\n  | \"🏳️‍⚧️\"\n  | \"🏴‍☠️\"\n  | \"🏴‍☠\"\n  | \"🇦🇨\"\n  | \"🇦🇩\"\n  | \"🇦🇪\"\n  | \"🇦🇫\"\n  | \"🇦🇬\"\n  | \"🇦🇮\"\n  | \"🇦🇱\"\n  | \"🇦🇲\"\n  | \"🇦🇴\"\n  | \"🇦🇶\"\n  | \"🇦🇷\"\n  | \"🇦🇸\"\n  | \"🇦🇹\"\n  | \"🇦🇺\"\n  | \"🇦🇼\"\n  | \"🇦🇽\"\n  | \"🇦🇿\"\n  | \"🇧🇦\"\n  | \"🇧🇧\"\n  | \"🇧🇩\"\n  | \"🇧🇪\"\n  | \"🇧🇫\"\n  | \"🇧🇬\"\n  | \"🇧🇭\"\n  | \"🇧🇮\"\n  | \"🇧🇯\"\n  | \"🇧🇱\"\n  | \"🇧🇲\"\n  | \"🇧🇳\"\n  | \"🇧🇴\"\n  | \"🇧🇶\"\n  | \"🇧🇷\"\n  | \"🇧🇸\"\n  | \"🇧🇹\"\n  | \"🇧🇻\"\n  | \"🇧🇼\"\n  | \"🇧🇾\"\n  | \"🇧🇿\"\n  | \"🇨🇦\"\n  | \"🇨🇨\"\n  | \"🇨🇩\"\n  | \"🇨🇫\"\n  | \"🇨🇬\"\n  | \"🇨🇭\"\n  | \"🇨🇮\"\n  | \"🇨🇰\"\n  | \"🇨🇱\"\n  | \"🇨🇲\"\n  | \"🇨🇳\"\n  | \"🇨🇴\"\n  | \"🇨🇵\"\n  | \"🇨🇷\"\n  | \"🇨🇺\"\n  | \"🇨🇻\"\n  | \"🇨🇼\"\n  | \"🇨🇽\"\n  | \"🇨🇾\"\n  | \"🇨🇿\"\n  | \"🇩🇪\"\n  | \"🇩🇬\"\n  | \"🇩🇯\"\n  | \"🇩🇰\"\n  | \"🇩🇲\"\n  | \"🇩🇴\"\n  | \"🇩🇿\"\n  | \"🇪🇦\"\n  | \"🇪🇨\"\n  | \"🇪🇪\"\n  | \"🇪🇬\"\n  | \"🇪🇭\"\n  | \"🇪🇷\"\n  | \"🇪🇸\"\n  | \"🇪🇹\"\n  | \"🇪🇺\"\n  | \"🇫🇮\"\n  | \"🇫🇯\"\n  | \"🇫🇰\"\n  | \"🇫🇲\"\n  | \"🇫🇴\"\n  | \"🇫🇷\"\n  | \"🇬🇦\"\n  | \"🇬🇧\"\n  | \"🇬🇩\"\n  | \"🇬🇪\"\n  | \"🇬🇫\"\n  | \"🇬🇬\"\n  | \"🇬🇭\"\n  | \"🇬🇮\"\n  | \"🇬🇱\"\n  | \"🇬🇲\"\n  | \"🇬🇳\"\n  | \"🇬🇵\"\n  | \"🇬🇶\"\n  | \"🇬🇷\"\n  | \"🇬🇸\"\n  | \"🇬🇹\"\n  | \"🇬🇺\"\n  | \"🇬🇼\"\n  | \"🇬🇾\"\n  | \"🇭🇰\"\n  | \"🇭🇲\"\n  | \"🇭🇳\"\n  | \"🇭🇷\"\n  | \"🇭🇹\"\n  | \"🇭🇺\"\n  | \"🇮🇨\"\n  | \"🇮🇩\"\n  | \"🇮🇪\"\n  | \"🇮🇱\"\n  | \"🇮🇲\"\n  | \"🇮🇳\"\n  | \"🇮🇴\"\n  | \"🇮🇶\"\n  | \"🇮🇷\"\n  | \"🇮🇸\"\n  | \"🇮🇹\"\n  | \"🇯🇪\"\n  | \"🇯🇲\"\n  | \"🇯🇴\"\n  | \"🇯🇵\"\n  | \"🇰🇪\"\n  | \"🇰🇬\"\n  | \"🇰🇭\"\n  | \"🇰🇮\"\n  | \"🇰🇲\"\n  | \"🇰🇳\"\n  | \"🇰🇵\"\n  | \"🇰🇷\"\n  | \"🇰🇼\"\n  | \"🇰🇾\"\n  | \"🇰🇿\"\n  | \"🇱🇦\"\n  | \"🇱🇧\"\n  | \"🇱🇨\"\n  | \"🇱🇮\"\n  | \"🇱🇰\"\n  | \"🇱🇷\"\n  | \"🇱🇸\"\n  | \"🇱🇹\"\n  | \"🇱🇺\"\n  | \"🇱🇻\"\n  | \"🇱🇾\"\n  | \"🇲🇦\"\n  | \"🇲🇨\"\n  | \"🇲🇩\"\n  | \"🇲🇪\"\n  | \"🇲🇫\"\n  | \"🇲🇬\"\n  | \"🇲🇭\"\n  | \"🇲🇰\"\n  | \"🇲🇱\"\n  | \"🇲🇲\"\n  | \"🇲🇳\"\n  | \"🇲🇴\"\n  | \"🇲🇵\"\n  | \"🇲🇶\"\n  | \"🇲🇷\"\n  | \"🇲🇸\"\n  | \"🇲🇹\"\n  | \"🇲🇺\"\n  | \"🇲🇻\"\n  | \"🇲🇼\"\n  | \"🇲🇽\"\n  | \"🇲🇾\"\n  | \"🇲🇿\"\n  | \"🇳🇦\"\n  | \"🇳🇨\"\n  | \"🇳🇪\"\n  | \"🇳🇫\"\n  | \"🇳🇬\"\n  | \"🇳🇮\"\n  | \"🇳🇱\"\n  | \"🇳🇴\"\n  | \"🇳🇵\"\n  | \"🇳🇷\"\n  | \"🇳🇺\"\n  | \"🇳🇿\"\n  | \"🇴🇲\"\n  | \"🇵🇦\"\n  | \"🇵🇪\"\n  | \"🇵🇫\"\n  | \"🇵🇬\"\n  | \"🇵🇭\"\n  | \"🇵🇰\"\n  | \"🇵🇱\"\n  | \"🇵🇲\"\n  | \"🇵🇳\"\n  | \"🇵🇷\"\n  | \"🇵🇸\"\n  | \"🇵🇹\"\n  | \"🇵🇼\"\n  | \"🇵🇾\"\n  | \"🇶🇦\"\n  | \"🇷🇪\"\n  | \"🇷🇴\"\n  | \"🇷🇸\"\n  | \"🇷🇺\"\n  | \"🇷🇼\"\n  | \"🇸🇦\"\n  | \"🇸🇧\"\n  | \"🇸🇨\"\n  | \"🇸🇩\"\n  | \"🇸🇪\"\n  | \"🇸🇬\"\n  | \"🇸🇭\"\n  | \"🇸🇮\"\n  | \"🇸🇯\"\n  | \"🇸🇰\"\n  | \"🇸🇱\"\n  | \"🇸🇲\"\n  | \"🇸🇳\"\n  | \"🇸🇴\"\n  | \"🇸🇷\"\n  | \"🇸🇸\"\n  | \"🇸🇹\"\n  | \"🇸🇻\"\n  | \"🇸🇽\"\n  | \"🇸🇾\"\n  | \"🇸🇿\"\n  | \"🇹🇦\"\n  | \"🇹🇨\"\n  | \"🇹🇩\"\n  | \"🇹🇫\"\n  | \"🇹🇬\"\n  | \"🇹🇭\"\n  | \"🇹🇯\"\n  | \"🇹🇰\"\n  | \"🇹🇱\"\n  | \"🇹🇲\"\n  | \"🇹🇳\"\n  | \"🇹🇴\"\n  | \"🇹🇷\"\n  | \"🇹🇹\"\n  | \"🇹🇻\"\n  | \"🇹🇼\"\n  | \"🇹🇿\"\n  | \"🇺🇦\"\n  | \"🇺🇬\"\n  | \"🇺🇲\"\n  | \"🇺🇳\"\n  | \"🇺🇸\"\n  | \"🇺🇾\"\n  | \"🇺🇿\"\n  | \"🇻🇦\"\n  | \"🇻🇨\"\n  | \"🇻🇪\"\n  | \"🇻🇬\"\n  | \"🇻🇮\"\n  | \"🇻🇳\"\n  | \"🇻🇺\"\n  | \"🇼🇫\"\n  | \"🇼🇸\"\n  | \"🇽🇰\"\n  | \"🇾🇪\"\n  | \"🇾🇹\"\n  | \"🇿🇦\"\n  | \"🇿🇲\"\n  | \"🇿🇼\"\n  | \"🏴󠁧󠁢󠁥󠁮󠁧󠁿\"\n  | \"🏴󠁧󠁢󠁳󠁣󠁴󠁿\"\n  | \"🏴󠁧󠁢󠁷󠁬󠁳󠁿\"\n\nexport type PageObjectResponse = {\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  properties: Record<\n    string,\n    | { type: \"number\"; number: number | null; id: string }\n    | { type: \"url\"; url: string | null; id: string }\n    | { type: \"select\"; select: SelectPropertyResponse | null; id: string }\n    | {\n        type: \"multi_select\"\n        multi_select: Array<SelectPropertyResponse>\n        id: string\n      }\n    | { type: \"status\"; status: SelectPropertyResponse | null; id: string }\n    | { type: \"date\"; date: DateResponse | null; id: string }\n    | { type: \"email\"; email: string | null; id: string }\n    | { type: \"phone_number\"; phone_number: string | null; id: string }\n    | { type: \"checkbox\"; checkbox: boolean; id: string }\n    | {\n        type: \"files\"\n        files: Array<\n          | {\n              file: { url: string; expiry_time: string }\n              name: StringRequest\n              type?: \"file\"\n            }\n          | {\n              external: { url: TextRequest }\n              name: StringRequest\n              type?: \"external\"\n            }\n        >\n        id: string\n      }\n    | {\n        type: \"created_by\"\n        created_by: PartialUserObjectResponse | UserObjectResponse\n        id: string\n      }\n    | { type: \"created_time\"; created_time: string; id: string }\n    | {\n        type: \"last_edited_by\"\n        last_edited_by: PartialUserObjectResponse | UserObjectResponse\n        id: string\n      }\n    | { type: \"last_edited_time\"; last_edited_time: string; id: string }\n    | { type: \"formula\"; formula: FormulaPropertyResponse; id: string }\n    | { type: \"title\"; title: Array<RichTextItemResponse>; id: string }\n    | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse>; id: string }\n    | {\n        type: \"people\"\n        people: Array<PartialUserObjectResponse | UserObjectResponse>\n        id: string\n      }\n    | { type: \"relation\"; relation: Array<{ id: string }>; id: string }\n    | {\n        type: \"rollup\"\n        rollup:\n          | { type: \"number\"; number: number | null; function: RollupFunction }\n          | {\n              type: \"date\"\n              date: DateResponse | null\n              function: RollupFunction\n            }\n          | {\n              type: \"array\"\n              array: Array<\n                | { type: \"title\"; title: Array<RichTextItemResponse> }\n                | { type: \"rich_text\"; rich_text: Array<RichTextItemResponse> }\n                | {\n                    type: \"people\"\n                    people: Array<\n                      PartialUserObjectResponse | UserObjectResponse\n                    >\n                  }\n                | { type: \"relation\"; relation: Array<{ id: string }> }\n              >\n              function: RollupFunction\n            }\n        id: string\n      }\n  >\n  icon:\n    | { type: \"emoji\"; emoji: EmojiRequest }\n    | null\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  cover:\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  created_by: PartialUserObjectResponse\n  last_edited_by: PartialUserObjectResponse\n  object: \"page\"\n  id: string\n  created_time: string\n  last_edited_time: string\n  archived: boolean\n  url: string\n}\n\nexport type PartialPageObjectResponse = { object: \"page\"; id: string }\n\ntype NumberFormat =\n  | \"number\"\n  | \"number_with_commas\"\n  | \"percent\"\n  | \"dollar\"\n  | \"canadian_dollar\"\n  | \"singapore_dollar\"\n  | \"euro\"\n  | \"pound\"\n  | \"yen\"\n  | \"ruble\"\n  | \"rupee\"\n  | \"won\"\n  | \"yuan\"\n  | \"real\"\n  | \"lira\"\n  | \"rupiah\"\n  | \"franc\"\n  | \"hong_kong_dollar\"\n  | \"new_zealand_dollar\"\n  | \"krona\"\n  | \"norwegian_krone\"\n  | \"mexican_peso\"\n  | \"rand\"\n  | \"new_taiwan_dollar\"\n  | \"danish_krone\"\n  | \"zloty\"\n  | \"baht\"\n  | \"forint\"\n  | \"koruna\"\n  | \"shekel\"\n  | \"chilean_peso\"\n  | \"philippine_peso\"\n  | \"dirham\"\n  | \"colombian_peso\"\n  | \"riyal\"\n  | \"ringgit\"\n  | \"leu\"\n  | \"argentine_peso\"\n  | \"uruguayan_peso\"\n\ntype NumberDatabasePropertyConfigResponse = {\n  type: \"number\"\n  number: { format: NumberFormat }\n  id: string\n  name: string\n}\n\ntype FormulaDatabasePropertyConfigResponse = {\n  type: \"formula\"\n  formula: { expression: string }\n  id: string\n  name: string\n}\n\ntype SelectDatabasePropertyConfigResponse = {\n  type: \"select\"\n  select: { options: Array<SelectPropertyResponse> }\n  id: string\n  name: string\n}\n\ntype MultiSelectDatabasePropertyConfigResponse = {\n  type: \"multi_select\"\n  multi_select: { options: Array<SelectPropertyResponse> }\n  id: string\n  name: string\n}\n\ntype StatusPropertyResponse = {\n  id: StringRequest\n  name: StringRequest\n  color: SelectColor\n}\n\ntype StatusDatabasePropertyConfigResponse = {\n  type: \"status\"\n  status: {\n    options: Array<StatusPropertyResponse>\n    groups: Array<{\n      id: StringRequest\n      name: StringRequest\n      color: SelectColor\n      option_ids: Array<string>\n    }>\n  }\n  id: string\n  name: string\n}\n\ntype SinglePropertyDatabasePropertyRelationConfigResponse = {\n  type: \"single_property\"\n  single_property: EmptyObject\n  database_id: IdRequest\n}\n\ntype DualPropertyDatabasePropertyRelationConfigResponse = {\n  type: \"dual_property\"\n  dual_property: {\n    synced_property_id: StringRequest\n    synced_property_name: StringRequest\n  }\n  database_id: IdRequest\n}\n\ntype DatabasePropertyRelationConfigResponse =\n  | SinglePropertyDatabasePropertyRelationConfigResponse\n  | DualPropertyDatabasePropertyRelationConfigResponse\n\ntype RelationDatabasePropertyConfigResponse = {\n  type: \"relation\"\n  relation: DatabasePropertyRelationConfigResponse\n  id: string\n  name: string\n}\n\ntype RollupDatabasePropertyConfigResponse = {\n  type: \"rollup\"\n  rollup: {\n    rollup_property_name: string\n    relation_property_name: string\n    rollup_property_id: string\n    relation_property_id: string\n    function: RollupFunction\n  }\n  id: string\n  name: string\n}\n\ntype TitleDatabasePropertyConfigResponse = {\n  type: \"title\"\n  title: EmptyObject\n  id: string\n  name: string\n}\n\ntype RichTextDatabasePropertyConfigResponse = {\n  type: \"rich_text\"\n  rich_text: EmptyObject\n  id: string\n  name: string\n}\n\ntype UrlDatabasePropertyConfigResponse = {\n  type: \"url\"\n  url: EmptyObject\n  id: string\n  name: string\n}\n\ntype PeopleDatabasePropertyConfigResponse = {\n  type: \"people\"\n  people: EmptyObject\n  id: string\n  name: string\n}\n\ntype FilesDatabasePropertyConfigResponse = {\n  type: \"files\"\n  files: EmptyObject\n  id: string\n  name: string\n}\n\ntype EmailDatabasePropertyConfigResponse = {\n  type: \"email\"\n  email: EmptyObject\n  id: string\n  name: string\n}\n\ntype PhoneNumberDatabasePropertyConfigResponse = {\n  type: \"phone_number\"\n  phone_number: EmptyObject\n  id: string\n  name: string\n}\n\ntype DateDatabasePropertyConfigResponse = {\n  type: \"date\"\n  date: EmptyObject\n  id: string\n  name: string\n}\n\ntype CheckboxDatabasePropertyConfigResponse = {\n  type: \"checkbox\"\n  checkbox: EmptyObject\n  id: string\n  name: string\n}\n\ntype CreatedByDatabasePropertyConfigResponse = {\n  type: \"created_by\"\n  created_by: EmptyObject\n  id: string\n  name: string\n}\n\ntype CreatedTimeDatabasePropertyConfigResponse = {\n  type: \"created_time\"\n  created_time: EmptyObject\n  id: string\n  name: string\n}\n\ntype LastEditedByDatabasePropertyConfigResponse = {\n  type: \"last_edited_by\"\n  last_edited_by: EmptyObject\n  id: string\n  name: string\n}\n\ntype LastEditedTimeDatabasePropertyConfigResponse = {\n  type: \"last_edited_time\"\n  last_edited_time: EmptyObject\n  id: string\n  name: string\n}\n\ntype DatabasePropertyConfigResponse =\n  | NumberDatabasePropertyConfigResponse\n  | FormulaDatabasePropertyConfigResponse\n  | SelectDatabasePropertyConfigResponse\n  | MultiSelectDatabasePropertyConfigResponse\n  | StatusDatabasePropertyConfigResponse\n  | RelationDatabasePropertyConfigResponse\n  | RollupDatabasePropertyConfigResponse\n  | TitleDatabasePropertyConfigResponse\n  | RichTextDatabasePropertyConfigResponse\n  | UrlDatabasePropertyConfigResponse\n  | PeopleDatabasePropertyConfigResponse\n  | FilesDatabasePropertyConfigResponse\n  | EmailDatabasePropertyConfigResponse\n  | PhoneNumberDatabasePropertyConfigResponse\n  | DateDatabasePropertyConfigResponse\n  | CheckboxDatabasePropertyConfigResponse\n  | CreatedByDatabasePropertyConfigResponse\n  | CreatedTimeDatabasePropertyConfigResponse\n  | LastEditedByDatabasePropertyConfigResponse\n  | LastEditedTimeDatabasePropertyConfigResponse\n\nexport type PartialDatabaseObjectResponse = {\n  object: \"database\"\n  id: string\n  properties: Record<string, DatabasePropertyConfigResponse>\n}\n\nexport type DatabaseObjectResponse = {\n  title: Array<RichTextItemResponse>\n  description: Array<RichTextItemResponse>\n  icon:\n    | { type: \"emoji\"; emoji: EmojiRequest }\n    | null\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  cover:\n    | { type: \"external\"; external: { url: TextRequest } }\n    | null\n    | { type: \"file\"; file: { url: string; expiry_time: string } }\n    | null\n  properties: Record<string, DatabasePropertyConfigResponse>\n  parent:\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"workspace\"; workspace: true }\n    | { type: \"block_id\"; block_id: string }\n  created_by: PartialUserObjectResponse\n  last_edited_by: PartialUserObjectResponse\n  is_inline: boolean\n  object: \"database\"\n  id: string\n  created_time: string\n  last_edited_time: string\n  archived: boolean\n  url: string\n}\n\nexport type PartialBlockObjectResponse = { object: \"block\"; id: string }\n\ntype ApiColor =\n  | \"default\"\n  | \"gray\"\n  | \"brown\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"blue\"\n  | \"purple\"\n  | \"pink\"\n  | \"red\"\n  | \"gray_background\"\n  | \"brown_background\"\n  | \"orange_background\"\n  | \"yellow_background\"\n  | \"green_background\"\n  | \"blue_background\"\n  | \"purple_background\"\n  | \"pink_background\"\n  | \"red_background\"\n\nexport type ParagraphBlockObjectResponse = {\n  type: \"paragraph\"\n  paragraph: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type Heading1BlockObjectResponse = {\n  type: \"heading_1\"\n  heading_1: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type Heading2BlockObjectResponse = {\n  type: \"heading_2\"\n  heading_2: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type Heading3BlockObjectResponse = {\n  type: \"heading_3\"\n  heading_3: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type BulletedListItemBlockObjectResponse = {\n  type: \"bulleted_list_item\"\n  bulleted_list_item: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type NumberedListItemBlockObjectResponse = {\n  type: \"numbered_list_item\"\n  numbered_list_item: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type QuoteBlockObjectResponse = {\n  type: \"quote\"\n  quote: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ToDoBlockObjectResponse = {\n  type: \"to_do\"\n  to_do: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    checked: boolean\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ToggleBlockObjectResponse = {\n  type: \"toggle\"\n  toggle: { rich_text: Array<RichTextItemResponse>; color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type TemplateBlockObjectResponse = {\n  type: \"template\"\n  template: { rich_text: Array<RichTextItemResponse> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type SyncedBlockBlockObjectResponse = {\n  type: \"synced_block\"\n  synced_block: {\n    synced_from: { type: \"block_id\"; block_id: IdRequest } | null\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ChildPageBlockObjectResponse = {\n  type: \"child_page\"\n  child_page: { title: string }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ChildDatabaseBlockObjectResponse = {\n  type: \"child_database\"\n  child_database: { title: string }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type EquationBlockObjectResponse = {\n  type: \"equation\"\n  equation: { expression: string }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\ntype LanguageRequest =\n  | \"abap\"\n  | \"agda\"\n  | \"arduino\"\n  | \"assembly\"\n  | \"bash\"\n  | \"basic\"\n  | \"bnf\"\n  | \"c\"\n  | \"c#\"\n  | \"c++\"\n  | \"clojure\"\n  | \"coffeescript\"\n  | \"coq\"\n  | \"css\"\n  | \"dart\"\n  | \"dhall\"\n  | \"diff\"\n  | \"docker\"\n  | \"ebnf\"\n  | \"elixir\"\n  | \"elm\"\n  | \"erlang\"\n  | \"f#\"\n  | \"flow\"\n  | \"fortran\"\n  | \"gherkin\"\n  | \"glsl\"\n  | \"go\"\n  | \"graphql\"\n  | \"groovy\"\n  | \"haskell\"\n  | \"html\"\n  | \"idris\"\n  | \"java\"\n  | \"javascript\"\n  | \"json\"\n  | \"julia\"\n  | \"kotlin\"\n  | \"latex\"\n  | \"less\"\n  | \"lisp\"\n  | \"livescript\"\n  | \"llvm ir\"\n  | \"lua\"\n  | \"makefile\"\n  | \"markdown\"\n  | \"markup\"\n  | \"matlab\"\n  | \"mathematica\"\n  | \"mermaid\"\n  | \"nix\"\n  | \"objective-c\"\n  | \"ocaml\"\n  | \"pascal\"\n  | \"perl\"\n  | \"php\"\n  | \"plain text\"\n  | \"powershell\"\n  | \"prolog\"\n  | \"protobuf\"\n  | \"purescript\"\n  | \"python\"\n  | \"r\"\n  | \"racket\"\n  | \"reason\"\n  | \"ruby\"\n  | \"rust\"\n  | \"sass\"\n  | \"scala\"\n  | \"scheme\"\n  | \"scss\"\n  | \"shell\"\n  | \"solidity\"\n  | \"sql\"\n  | \"swift\"\n  | \"toml\"\n  | \"typescript\"\n  | \"vb.net\"\n  | \"verilog\"\n  | \"vhdl\"\n  | \"visual basic\"\n  | \"webassembly\"\n  | \"xml\"\n  | \"yaml\"\n  | \"java/c/c++/c#\"\n\nexport type CodeBlockObjectResponse = {\n  type: \"code\"\n  code: {\n    rich_text: Array<RichTextItemResponse>\n    caption: Array<RichTextItemResponse>\n    language: LanguageRequest\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type CalloutBlockObjectResponse = {\n  type: \"callout\"\n  callout: {\n    rich_text: Array<RichTextItemResponse>\n    color: ApiColor\n    icon:\n      | { type: \"emoji\"; emoji: EmojiRequest }\n      | null\n      | { type: \"external\"; external: { url: TextRequest } }\n      | null\n      | { type: \"file\"; file: { url: string; expiry_time: string } }\n      | null\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type DividerBlockObjectResponse = {\n  type: \"divider\"\n  divider: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type BreadcrumbBlockObjectResponse = {\n  type: \"breadcrumb\"\n  breadcrumb: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type TableOfContentsBlockObjectResponse = {\n  type: \"table_of_contents\"\n  table_of_contents: { color: ApiColor }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ColumnListBlockObjectResponse = {\n  type: \"column_list\"\n  column_list: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ColumnBlockObjectResponse = {\n  type: \"column\"\n  column: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type LinkToPageBlockObjectResponse = {\n  type: \"link_to_page\"\n  link_to_page:\n    | { type: \"page_id\"; page_id: IdRequest }\n    | { type: \"database_id\"; database_id: IdRequest }\n    | { type: \"comment_id\"; comment_id: IdRequest }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type TableBlockObjectResponse = {\n  type: \"table\"\n  table: {\n    has_column_header: boolean\n    has_row_header: boolean\n    table_width: number\n  }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type TableRowBlockObjectResponse = {\n  type: \"table_row\"\n  table_row: { cells: Array<Array<RichTextItemResponse>> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type EmbedBlockObjectResponse = {\n  type: \"embed\"\n  embed: { url: string; caption: Array<RichTextItemResponse> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type BookmarkBlockObjectResponse = {\n  type: \"bookmark\"\n  bookmark: { url: string; caption: Array<RichTextItemResponse> }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type ImageBlockObjectResponse = {\n  type: \"image\"\n  image:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type VideoBlockObjectResponse = {\n  type: \"video\"\n  video:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type PdfBlockObjectResponse = {\n  type: \"pdf\"\n  pdf:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type FileBlockObjectResponse = {\n  type: \"file\"\n  file:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type AudioBlockObjectResponse = {\n  type: \"audio\"\n  audio:\n    | {\n        type: \"external\"\n        external: { url: TextRequest }\n        caption: Array<RichTextItemResponse>\n      }\n    | {\n        type: \"file\"\n        file: { url: string; expiry_time: string }\n        caption: Array<RichTextItemResponse>\n      }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type LinkPreviewBlockObjectResponse = {\n  type: \"link_preview\"\n  link_preview: { url: TextRequest }\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type UnsupportedBlockObjectResponse = {\n  type: \"unsupported\"\n  unsupported: EmptyObject\n  parent:\n    | { type: \"database_id\"; database_id: string }\n    | { type: \"page_id\"; page_id: string }\n    | { type: \"block_id\"; block_id: string }\n    | { type: \"workspace\"; workspace: true }\n  object: \"block\"\n  id: string\n  created_time: string\n  created_by: PartialUserObjectResponse\n  last_edited_time: string\n  last_edited_by: PartialUserObjectResponse\n  has_children: boolean\n  archived: boolean\n}\n\nexport type BlockObjectResponse =\n  | ParagraphBlockObjectResponse\n  | Heading1BlockObjectResponse\n  | Heading2BlockObjectResponse\n  | Heading3BlockObjectResponse\n  | BulletedListItemBlockObjectResponse\n  | NumberedListItemBlockObjectResponse\n  | QuoteBlockObjectResponse\n  | ToDoBlockObjectResponse\n  | ToggleBlockObjectResponse\n  | TemplateBlockObjectResponse\n  | SyncedBlockBlockObjectResponse\n  | ChildPageBlockObjectResponse\n  | ChildDatabaseBlockObjectResponse\n  | EquationBlockObjectResponse\n  | CodeBlockObjectResponse\n  | CalloutBlockObjectResponse\n  | DividerBlockObjectResponse\n  | BreadcrumbBlockObjectResponse\n  | TableOfContentsBlockObjectResponse\n  | ColumnListBlockObjectResponse\n  | ColumnBlockObjectResponse\n  | LinkToPageBlockObjectResponse\n  | TableBlockObjectResponse\n  | TableRowBlockObjectResponse\n  | EmbedBlockObjectResponse\n  | BookmarkBlockObjectResponse\n  | ImageBlockObjectResponse\n  | VideoBlockObjectResponse\n  | PdfBlockObjectResponse\n  | FileBlockObjectResponse\n  | AudioBlockObjectResponse\n  | LinkPreviewBlockObjectResponse\n  | UnsupportedBlockObjectResponse\n\nexport type NumberPropertyItemObjectResponse = {\n  type: \"number\"\n  number: number | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type UrlPropertyItemObjectResponse = {\n  type: \"url\"\n  url: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type SelectPropertyItemObjectResponse = {\n  type: \"select\"\n  select: SelectPropertyResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type MultiSelectPropertyItemObjectResponse = {\n  type: \"multi_select\"\n  multi_select: Array<SelectPropertyResponse>\n  object: \"property_item\"\n  id: string\n}\n\nexport type StatusPropertyItemObjectResponse = {\n  type: \"status\"\n  status: SelectPropertyResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type DatePropertyItemObjectResponse = {\n  type: \"date\"\n  date: DateResponse | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type EmailPropertyItemObjectResponse = {\n  type: \"email\"\n  email: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type PhoneNumberPropertyItemObjectResponse = {\n  type: \"phone_number\"\n  phone_number: string | null\n  object: \"property_item\"\n  id: string\n}\n\nexport type CheckboxPropertyItemObjectResponse = {\n  type: \"checkbox\"\n  checkbox: boolean\n  object: \"property_item\"\n  id: string\n}\n\nexport type FilesPropertyItemObjectResponse = {\n  type: \"files\"\n  files: Array<\n    | {\n        file: { url: string; expiry_time: string }\n        name: StringRequest\n        type?: \"file\"\n      }\n    | { external: { url: TextRequest }; name: StringRequest; type?: \"external\" }\n  >\n  object: \"property_item\"\n  id: string\n}\n\nexport type CreatedByPropertyItemObjectResponse = {\n  type: \"created_by\"\n  created_by: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type CreatedTimePropertyItemObjectResponse = {\n  type: \"created_time\"\n  created_time: string\n  object: \"property_item\"\n  id: string\n}\n\nexport type LastEditedByPropertyItemObjectResponse = {\n  type: \"last_edited_by\"\n  last_edited_by: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type LastEditedTimePropertyItemObjectResponse = {\n  type: \"last_edited_time\"\n  last_edited_time: string\n  object: \"property_item\"\n  id: string\n}\n\nexport type FormulaPropertyItemObjectResponse = {\n  type: \"formula\"\n  formula: FormulaPropertyResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type TitlePropertyItemObjectResponse = {\n  type: \"title\"\n  title: RichTextItemResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type RichTextPropertyItemObjectResponse = {\n  type: \"rich_text\"\n  rich_text: RichTextItemResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type PeoplePropertyItemObjectResponse = {\n  type: \"people\"\n  people: PartialUserObjectResponse | UserObjectResponse\n  object: \"property_item\"\n  id: string\n}\n\nexport type RelationPropertyItemObjectResponse = {\n  type: \"relation\"\n  relation: { id: string }\n  object: \"property_item\"\n  id: string\n}\n\nexport type RollupPropertyItemObjectResponse = {\n  type: \"rollup\"\n  rollup:\n    | { type: \"number\"; number: number | null; function: RollupFunction }\n    | { type: \"date\"; date: DateResponse | null; function: RollupFunction }\n    | { type: \"array\"; array: Array<EmptyObject>; function: RollupFunction }\n    | {\n        type: \"unsupported\"\n        unsupported: EmptyObject\n        function: RollupFunction\n      }\n    | { type: \"incomplete\"; incomplete: EmptyObject; function: RollupFunction }\n  object: \"property_item\"\n  id: string\n}\n\nexport type PropertyItemObjectResponse =\n  | NumberPropertyItemObjectResponse\n  | UrlPropertyItemObjectResponse\n  | SelectPropertyItemObjectResponse\n  | MultiSelectPropertyItemObjectResponse\n  | StatusPropertyItemObjectResponse\n  | DatePropertyItemObjectResponse\n  | EmailPropertyItemObjectResponse\n  | PhoneNumberPropertyItemObjectResponse\n  | CheckboxPropertyItemObjectResponse\n  | FilesPropertyItemObjectResponse\n  | CreatedByPropertyItemObjectResponse\n  | CreatedTimePropertyItemObjectResponse\n  | LastEditedByPropertyItemObjectResponse\n  | LastEditedTimePropertyItemObjectResponse\n  | FormulaPropertyItemObjectResponse\n  | TitlePropertyItemObjectResponse\n  | RichTextPropertyItemObjectResponse\n  | PeoplePropertyItemObjectResponse\n  | RelationPropertyItemObjectResponse\n  | RollupPropertyItemObjectResponse\n\nexport type CommentObjectResponse = {\n  object: \"comment\"\n  id: string\n  parent:\n    | { type: \"page_id\"; page_id: IdRequest }\n    | { type: \"block_id\"; block_id: IdRequest }\n  discussion_id: string\n  rich_text: Array<RichTextItemResponse>\n  created_by: PartialUserObjectResponse\n  created_time: string\n  last_edited_time: string\n}\n\nexport type PartialCommentObjectResponse = { object: \"comment\"; id: string }\n\nexport type PropertyItemPropertyItemListResponse = {\n  type: \"property_item\"\n  property_item:\n    | { type: \"title\"; title: EmptyObject; next_url: string | null; id: string }\n    | {\n        type: \"rich_text\"\n        rich_text: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"people\"\n        people: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"relation\"\n        relation: EmptyObject\n        next_url: string | null\n        id: string\n      }\n    | {\n        type: \"rollup\"\n        rollup:\n          | { type: \"number\"; number: number | null; function: RollupFunction }\n          | {\n              type: \"date\"\n              date: DateResponse | null\n              function: RollupFunction\n            }\n          | {\n              type: \"array\"\n              array: Array<EmptyObject>\n              function: RollupFunction\n            }\n          | {\n              type: \"unsupported\"\n              unsupported: EmptyObject\n              function: RollupFunction\n            }\n          | {\n              type: \"incomplete\"\n              incomplete: EmptyObject\n              function: RollupFunction\n            }\n        next_url: string | null\n        id: string\n      }\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PropertyItemObjectResponse>\n}\n\nexport type PropertyItemListResponse = PropertyItemPropertyItemListResponse\n\ntype DateRequest = {\n  start: string\n  end?: string | null\n  time_zone?: TimeZoneRequest | null\n}\n\ntype RichTextItemRequest =\n  | {\n      text: { content: string; link?: { url: TextRequest } | null }\n      type?: \"text\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n  | {\n      mention:\n        | {\n            user:\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | PartialUserObjectResponse\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                        workspace_name: string | null\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n          }\n        | { date: DateRequest }\n        | { page: { id: IdRequest } }\n        | { database: { id: IdRequest } }\n      type?: \"mention\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n  | {\n      equation: { expression: TextRequest }\n      type?: \"equation\"\n      annotations?: {\n        bold?: boolean\n        italic?: boolean\n        strikethrough?: boolean\n        underline?: boolean\n        code?: boolean\n        color?:\n          | \"default\"\n          | \"gray\"\n          | \"brown\"\n          | \"orange\"\n          | \"yellow\"\n          | \"green\"\n          | \"blue\"\n          | \"purple\"\n          | \"pink\"\n          | \"red\"\n          | \"gray_background\"\n          | \"brown_background\"\n          | \"orange_background\"\n          | \"yellow_background\"\n          | \"green_background\"\n          | \"blue_background\"\n          | \"purple_background\"\n          | \"pink_background\"\n          | \"red_background\"\n      }\n    }\n\nexport type BlockObjectRequestWithoutChildren =\n  | {\n      embed: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | { equation: { expression: string }; type?: \"equation\"; object?: \"block\" }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        checked?: boolean\n        color?: ApiColor\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: { rich_text: Array<RichTextItemRequest> }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n        color?: ApiColor\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\nexport type BlockObjectRequest =\n  | {\n      embed: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      object?: \"block\"\n    }\n  | {\n      bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      object?: \"block\"\n    }\n  | {\n      image: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"image\"\n      object?: \"block\"\n    }\n  | {\n      video: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"video\"\n      object?: \"block\"\n    }\n  | {\n      pdf: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"pdf\"\n      object?: \"block\"\n    }\n  | {\n      file: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"file\"\n      object?: \"block\"\n    }\n  | {\n      audio: {\n        external: { url: TextRequest }\n        type?: \"external\"\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"audio\"\n      object?: \"block\"\n    }\n  | {\n      code: {\n        rich_text: Array<RichTextItemRequest>\n        language: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      object?: \"block\"\n    }\n  | { equation: { expression: string }; type?: \"equation\"; object?: \"block\" }\n  | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      object?: \"block\"\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      object?: \"block\"\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      object?: \"block\"\n    }\n  | {\n      column_list: {\n        children: Array<{\n          column: {\n            children: Array<\n              | {\n                  embed: { url: string; caption?: Array<RichTextItemRequest> }\n                  type?: \"embed\"\n                  object?: \"block\"\n                }\n              | {\n                  bookmark: {\n                    url: string\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"bookmark\"\n                  object?: \"block\"\n                }\n              | {\n                  image: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"image\"\n                  object?: \"block\"\n                }\n              | {\n                  video: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"video\"\n                  object?: \"block\"\n                }\n              | {\n                  pdf: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"pdf\"\n                  object?: \"block\"\n                }\n              | {\n                  file: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"file\"\n                  object?: \"block\"\n                }\n              | {\n                  audio: {\n                    external: { url: TextRequest }\n                    type?: \"external\"\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"audio\"\n                  object?: \"block\"\n                }\n              | {\n                  code: {\n                    rich_text: Array<RichTextItemRequest>\n                    language: LanguageRequest\n                    caption?: Array<RichTextItemRequest>\n                  }\n                  type?: \"code\"\n                  object?: \"block\"\n                }\n              | {\n                  equation: { expression: string }\n                  type?: \"equation\"\n                  object?: \"block\"\n                }\n              | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n              | {\n                  breadcrumb: EmptyObject\n                  type?: \"breadcrumb\"\n                  object?: \"block\"\n                }\n              | {\n                  table_of_contents: { color?: ApiColor }\n                  type?: \"table_of_contents\"\n                  object?: \"block\"\n                }\n              | {\n                  link_to_page:\n                    | { page_id: IdRequest; type?: \"page_id\" }\n                    | { database_id: IdRequest; type?: \"database_id\" }\n                    | { comment_id: IdRequest; type?: \"comment_id\" }\n                  type?: \"link_to_page\"\n                  object?: \"block\"\n                }\n              | {\n                  table_row: { cells: Array<Array<RichTextItemRequest>> }\n                  type?: \"table_row\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_1: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    is_toggleable?: boolean\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_1\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_2: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    is_toggleable?: boolean\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_2\"\n                  object?: \"block\"\n                }\n              | {\n                  heading_3: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    is_toggleable?: boolean\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"heading_3\"\n                  object?: \"block\"\n                }\n              | {\n                  paragraph: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"paragraph\"\n                  object?: \"block\"\n                }\n              | {\n                  bulleted_list_item: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"bulleted_list_item\"\n                  object?: \"block\"\n                }\n              | {\n                  numbered_list_item: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"numbered_list_item\"\n                  object?: \"block\"\n                }\n              | {\n                  quote: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"quote\"\n                  object?: \"block\"\n                }\n              | {\n                  to_do: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                    checked?: boolean\n                  }\n                  type?: \"to_do\"\n                  object?: \"block\"\n                }\n              | {\n                  toggle: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"toggle\"\n                  object?: \"block\"\n                }\n              | {\n                  template: {\n                    rich_text: Array<RichTextItemRequest>\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"template\"\n                  object?: \"block\"\n                }\n              | {\n                  callout: {\n                    rich_text: Array<RichTextItemRequest>\n                    color?: ApiColor\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                    icon?:\n                      | { emoji: EmojiRequest; type?: \"emoji\" }\n                      | { external: { url: TextRequest }; type?: \"external\" }\n                  }\n                  type?: \"callout\"\n                  object?: \"block\"\n                }\n              | {\n                  synced_block: {\n                    synced_from: {\n                      block_id: IdRequest\n                      type?: \"block_id\"\n                    } | null\n                    children?: Array<BlockObjectRequestWithoutChildren>\n                  }\n                  type?: \"synced_block\"\n                  object?: \"block\"\n                }\n            >\n          }\n          type?: \"column\"\n          object?: \"block\"\n        }>\n      }\n      type?: \"column_list\"\n      object?: \"block\"\n    }\n  | {\n      column: {\n        children: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"column\"\n      object?: \"block\"\n    }\n  | {\n      table: {\n        table_width: number\n        children: Array<BlockObjectRequestWithoutChildren>\n        has_column_header?: boolean\n        has_row_header?: boolean\n      }\n      type?: \"table\"\n      object?: \"block\"\n    }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_1\"\n      object?: \"block\"\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_2\"\n      object?: \"block\"\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"heading_3\"\n      object?: \"block\"\n    }\n  | {\n      paragraph: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"paragraph\"\n      object?: \"block\"\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"bulleted_list_item\"\n      object?: \"block\"\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"numbered_list_item\"\n      object?: \"block\"\n    }\n  | {\n      quote: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"quote\"\n      object?: \"block\"\n    }\n  | {\n      to_do: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n        checked?: boolean\n      }\n      type?: \"to_do\"\n      object?: \"block\"\n    }\n  | {\n      toggle: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"toggle\"\n      object?: \"block\"\n    }\n  | {\n      template: {\n        rich_text: Array<RichTextItemRequest>\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"template\"\n      object?: \"block\"\n    }\n  | {\n      callout: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n      }\n      type?: \"callout\"\n      object?: \"block\"\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n        children?: Array<\n          | {\n              embed: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"embed\"\n              object?: \"block\"\n            }\n          | {\n              bookmark: { url: string; caption?: Array<RichTextItemRequest> }\n              type?: \"bookmark\"\n              object?: \"block\"\n            }\n          | {\n              image: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"image\"\n              object?: \"block\"\n            }\n          | {\n              video: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"video\"\n              object?: \"block\"\n            }\n          | {\n              pdf: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"pdf\"\n              object?: \"block\"\n            }\n          | {\n              file: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"file\"\n              object?: \"block\"\n            }\n          | {\n              audio: {\n                external: { url: TextRequest }\n                type?: \"external\"\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"audio\"\n              object?: \"block\"\n            }\n          | {\n              code: {\n                rich_text: Array<RichTextItemRequest>\n                language: LanguageRequest\n                caption?: Array<RichTextItemRequest>\n              }\n              type?: \"code\"\n              object?: \"block\"\n            }\n          | {\n              equation: { expression: string }\n              type?: \"equation\"\n              object?: \"block\"\n            }\n          | { divider: EmptyObject; type?: \"divider\"; object?: \"block\" }\n          | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; object?: \"block\" }\n          | {\n              table_of_contents: { color?: ApiColor }\n              type?: \"table_of_contents\"\n              object?: \"block\"\n            }\n          | {\n              link_to_page:\n                | { page_id: IdRequest; type?: \"page_id\" }\n                | { database_id: IdRequest; type?: \"database_id\" }\n                | { comment_id: IdRequest; type?: \"comment_id\" }\n              type?: \"link_to_page\"\n              object?: \"block\"\n            }\n          | {\n              table_row: { cells: Array<Array<RichTextItemRequest>> }\n              type?: \"table_row\"\n              object?: \"block\"\n            }\n          | {\n              heading_1: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_1\"\n              object?: \"block\"\n            }\n          | {\n              heading_2: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_2\"\n              object?: \"block\"\n            }\n          | {\n              heading_3: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                is_toggleable?: boolean\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"heading_3\"\n              object?: \"block\"\n            }\n          | {\n              paragraph: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"paragraph\"\n              object?: \"block\"\n            }\n          | {\n              bulleted_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"bulleted_list_item\"\n              object?: \"block\"\n            }\n          | {\n              numbered_list_item: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"numbered_list_item\"\n              object?: \"block\"\n            }\n          | {\n              quote: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"quote\"\n              object?: \"block\"\n            }\n          | {\n              to_do: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                checked?: boolean\n              }\n              type?: \"to_do\"\n              object?: \"block\"\n            }\n          | {\n              toggle: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"toggle\"\n              object?: \"block\"\n            }\n          | {\n              template: {\n                rich_text: Array<RichTextItemRequest>\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"template\"\n              object?: \"block\"\n            }\n          | {\n              callout: {\n                rich_text: Array<RichTextItemRequest>\n                color?: ApiColor\n                children?: Array<BlockObjectRequestWithoutChildren>\n                icon?:\n                  | { emoji: EmojiRequest; type?: \"emoji\" }\n                  | { external: { url: TextRequest }; type?: \"external\" }\n              }\n              type?: \"callout\"\n              object?: \"block\"\n            }\n          | {\n              synced_block: {\n                synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n                children?: Array<BlockObjectRequestWithoutChildren>\n              }\n              type?: \"synced_block\"\n              object?: \"block\"\n            }\n        >\n      }\n      type?: \"synced_block\"\n      object?: \"block\"\n    }\n\ntype ExistencePropertyFilter = { is_empty: true } | { is_not_empty: true }\n\ntype TextPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | { contains: string }\n  | { does_not_contain: string }\n  | { starts_with: string }\n  | { ends_with: string }\n  | ExistencePropertyFilter\n\ntype NumberPropertyFilter =\n  | { equals: number }\n  | { does_not_equal: number }\n  | { greater_than: number }\n  | { less_than: number }\n  | { greater_than_or_equal_to: number }\n  | { less_than_or_equal_to: number }\n  | ExistencePropertyFilter\n\ntype CheckboxPropertyFilter = { equals: boolean } | { does_not_equal: boolean }\n\ntype SelectPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | ExistencePropertyFilter\n\ntype MultiSelectPropertyFilter =\n  | { contains: string }\n  | { does_not_contain: string }\n  | ExistencePropertyFilter\n\ntype StatusPropertyFilter =\n  | { equals: string }\n  | { does_not_equal: string }\n  | ExistencePropertyFilter\n\ntype DatePropertyFilter =\n  | { equals: string }\n  | { before: string }\n  | { after: string }\n  | { on_or_before: string }\n  | { on_or_after: string }\n  | { this_week: EmptyObject }\n  | { past_week: EmptyObject }\n  | { past_month: EmptyObject }\n  | { past_year: EmptyObject }\n  | { next_week: EmptyObject }\n  | { next_month: EmptyObject }\n  | { next_year: EmptyObject }\n  | ExistencePropertyFilter\n\ntype PeoplePropertyFilter =\n  | { contains: IdRequest }\n  | { does_not_contain: IdRequest }\n  | ExistencePropertyFilter\n\ntype RelationPropertyFilter =\n  | { contains: IdRequest }\n  | { does_not_contain: IdRequest }\n  | ExistencePropertyFilter\n\ntype FormulaPropertyFilter =\n  | { string: TextPropertyFilter }\n  | { checkbox: CheckboxPropertyFilter }\n  | { number: NumberPropertyFilter }\n  | { date: DatePropertyFilter }\n\ntype RollupSubfilterPropertyFilter =\n  | { rich_text: TextPropertyFilter }\n  | { number: NumberPropertyFilter }\n  | { checkbox: CheckboxPropertyFilter }\n  | { select: SelectPropertyFilter }\n  | { multi_select: MultiSelectPropertyFilter }\n  | { relation: RelationPropertyFilter }\n  | { date: DatePropertyFilter }\n  | { people: PeoplePropertyFilter }\n  | { files: ExistencePropertyFilter }\n\ntype RollupPropertyFilter =\n  | { any: RollupSubfilterPropertyFilter }\n  | { none: RollupSubfilterPropertyFilter }\n  | { every: RollupSubfilterPropertyFilter }\n  | { date: DatePropertyFilter }\n  | { number: NumberPropertyFilter }\n\ntype PropertyFilter =\n  | { title: TextPropertyFilter; property: string; type?: \"title\" }\n  | { rich_text: TextPropertyFilter; property: string; type?: \"rich_text\" }\n  | { number: NumberPropertyFilter; property: string; type?: \"number\" }\n  | { checkbox: CheckboxPropertyFilter; property: string; type?: \"checkbox\" }\n  | { select: SelectPropertyFilter; property: string; type?: \"select\" }\n  | {\n      multi_select: MultiSelectPropertyFilter\n      property: string\n      type?: \"multi_select\"\n    }\n  | { status: StatusPropertyFilter; property: string; type?: \"status\" }\n  | { date: DatePropertyFilter; property: string; type?: \"date\" }\n  | { people: PeoplePropertyFilter; property: string; type?: \"people\" }\n  | { files: ExistencePropertyFilter; property: string; type?: \"files\" }\n  | { url: TextPropertyFilter; property: string; type?: \"url\" }\n  | { email: TextPropertyFilter; property: string; type?: \"email\" }\n  | {\n      phone_number: TextPropertyFilter\n      property: string\n      type?: \"phone_number\"\n    }\n  | { relation: RelationPropertyFilter; property: string; type?: \"relation\" }\n  | { created_by: PeoplePropertyFilter; property: string; type?: \"created_by\" }\n  | {\n      created_time: DatePropertyFilter\n      property: string\n      type?: \"created_time\"\n    }\n  | {\n      last_edited_by: PeoplePropertyFilter\n      property: string\n      type?: \"last_edited_by\"\n    }\n  | {\n      last_edited_time: DatePropertyFilter\n      property: string\n      type?: \"last_edited_time\"\n    }\n  | { formula: FormulaPropertyFilter; property: string; type?: \"formula\" }\n  | { rollup: RollupPropertyFilter; property: string; type?: \"rollup\" }\n\ntype TimestampCreatedTimeFilter = {\n  created_time: DatePropertyFilter\n  timestamp: \"created_time\"\n  type?: \"created_time\"\n}\n\ntype TimestampLastEditedTimeFilter = {\n  last_edited_time: DatePropertyFilter\n  timestamp: \"last_edited_time\"\n  type?: \"last_edited_time\"\n}\nexport type GetSelfParameters = Record<string, never>\n\nexport type GetSelfResponse = UserObjectResponse\n\nexport const getSelf = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [],\n  path: (): string => `users/me`,\n} as const\n\ntype GetUserPathParameters = {\n  user_id: IdRequest\n}\n\nexport type GetUserParameters = GetUserPathParameters\n\nexport type GetUserResponse = UserObjectResponse\n\nexport const getUser = {\n  method: \"get\",\n  pathParams: [\"user_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetUserPathParameters): string => `users/${p.user_id}`,\n} as const\n\ntype ListUsersQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListUsersParameters = ListUsersQueryParameters\n\nexport type ListUsersResponse = {\n  type: \"user\"\n  user: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<UserObjectResponse>\n}\n\nexport const listUsers = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `users`,\n} as const\n\ntype CreatePageBodyParameters =\n  | {\n      parent: { database_id: IdRequest; type?: \"database_id\" }\n      properties:\n        | Record<\n            string,\n            | { title: Array<RichTextItemRequest>; type?: \"title\" }\n            | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n            | { number: number | null; type?: \"number\" }\n            | { url: TextRequest | null; type?: \"url\" }\n            | {\n                select:\n                  | {\n                      id: StringRequest\n                      name?: StringRequest\n                      color?: SelectColor\n                    }\n                  | null\n                  | {\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }\n                  | null\n                type?: \"select\"\n              }\n            | {\n                multi_select: Array<\n                  | {\n                      id: StringRequest\n                      name?: StringRequest\n                      color?: SelectColor\n                    }\n                  | {\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }\n                >\n                type?: \"multi_select\"\n              }\n            | {\n                people: Array<\n                  | { id: IdRequest }\n                  | {\n                      person: { email?: string }\n                      id: IdRequest\n                      type?: \"person\"\n                      name?: string | null\n                      avatar_url?: string | null\n                      object?: \"user\"\n                    }\n                  | {\n                      bot:\n                        | EmptyObject\n                        | {\n                            owner:\n                              | {\n                                  type: \"user\"\n                                  user:\n                                    | {\n                                        type: \"person\"\n                                        person: { email: string }\n                                        name: string | null\n                                        avatar_url: string | null\n                                        id: IdRequest\n                                        object: \"user\"\n                                      }\n                                    | PartialUserObjectResponse\n                                }\n                              | { type: \"workspace\"; workspace: true }\n                            workspace_name: string | null\n                          }\n                      id: IdRequest\n                      type?: \"bot\"\n                      name?: string | null\n                      avatar_url?: string | null\n                      object?: \"user\"\n                    }\n                >\n                type?: \"people\"\n              }\n            | { email: StringRequest | null; type?: \"email\" }\n            | { phone_number: StringRequest | null; type?: \"phone_number\" }\n            | { date: DateRequest | null; type?: \"date\" }\n            | { checkbox: boolean; type?: \"checkbox\" }\n            | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n            | {\n                files: Array<\n                  | {\n                      file: { url: string; expiry_time?: string }\n                      name: StringRequest\n                      type?: \"file\"\n                    }\n                  | {\n                      external: { url: TextRequest }\n                      name: StringRequest\n                      type?: \"external\"\n                    }\n                >\n                type?: \"files\"\n              }\n            | {\n                status:\n                  | {\n                      id: StringRequest\n                      name?: StringRequest\n                      color?: SelectColor\n                    }\n                  | null\n                  | {\n                      name: StringRequest\n                      id?: StringRequest\n                      color?: SelectColor\n                    }\n                  | null\n                type?: \"status\"\n              }\n          >\n        | Record<\n            string,\n            | Array<RichTextItemRequest>\n            | Array<RichTextItemRequest>\n            | number\n            | null\n            | TextRequest\n            | null\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | null\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n            | null\n            | Array<\n                | {\n                    id: StringRequest\n                    name?: StringRequest\n                    color?: SelectColor\n                  }\n                | {\n                    name: StringRequest\n                    id?: StringRequest\n                    color?: SelectColor\n                  }\n              >\n            | Array<\n                | { id: IdRequest }\n                | {\n                    person: { email?: string }\n                    id: IdRequest\n                    type?: \"person\"\n                    name?: string | null\n                    avatar_url?: string | null\n                    object?: \"user\"\n                  }\n                | {\n                    bot:\n                      | EmptyObject\n                      | {\n                          owner:\n                            | {\n                                type: \"user\"\n                                user:\n                                  | {\n                                      type: \"person\"\n                                      person: { email: string }\n                                      name: string | null\n                                      avatar_url: string | null\n                                      id: IdRequest\n                                      object: \"user\"\n                                    }\n                                  | PartialUserObjectResponse\n                              }\n                            | { type: \"workspace\"; workspace: true }\n                          workspace_name: string | null\n                        }\n                    id: IdRequest\n                    type?: \"bot\"\n                    name?: string | null\n                    avatar_url?: string | null\n                    object?: \"user\"\n                  }\n              >\n            | StringRequest\n            | null\n            | StringRequest\n            | null\n            | DateRequest\n            | null\n            | boolean\n            | Array<{ id: IdRequest }>\n            | Array<\n                | {\n                    file: { url: string; expiry_time?: string }\n                    name: StringRequest\n                    type?: \"file\"\n                  }\n                | {\n                    external: { url: TextRequest }\n                    name: StringRequest\n                    type?: \"external\"\n                  }\n              >\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | null\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n            | null\n          >\n      icon?:\n        | { emoji: EmojiRequest; type?: \"emoji\" }\n        | null\n        | { external: { url: TextRequest }; type?: \"external\" }\n        | null\n      cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n      content?: Array<BlockObjectRequest>\n      children?: Array<BlockObjectRequest>\n    }\n  | {\n      parent: { page_id: IdRequest; type?: \"page_id\" }\n      properties: {\n        title?:\n          | { title: Array<RichTextItemRequest>; type?: \"title\" }\n          | Array<RichTextItemRequest>\n      }\n      icon?:\n        | { emoji: EmojiRequest; type?: \"emoji\" }\n        | null\n        | { external: { url: TextRequest }; type?: \"external\" }\n        | null\n      cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n      children?: Array<BlockObjectRequest>\n    }\n\nexport type CreatePageParameters = CreatePageBodyParameters\n\nexport type CreatePageResponse = PageObjectResponse | PartialPageObjectResponse\n\nexport const createPage = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n  path: (): string => `pages`,\n} as const\n\ntype GetPagePathParameters = {\n  page_id: IdRequest\n}\n\ntype GetPageQueryParameters = {\n  filter_properties?: Array<string>\n}\n\nexport type GetPageParameters = GetPagePathParameters & GetPageQueryParameters\n\nexport type GetPageResponse = PageObjectResponse | PartialPageObjectResponse\n\nexport const getPage = {\n  method: \"get\",\n  pathParams: [\"page_id\"],\n  queryParams: [\"filter_properties\"],\n  bodyParams: [],\n  path: (p: GetPagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype UpdatePagePathParameters = {\n  page_id: IdRequest\n}\n\ntype UpdatePageBodyParameters = {\n  properties?:\n    | Record<\n        string,\n        | { title: Array<RichTextItemRequest>; type?: \"title\" }\n        | { rich_text: Array<RichTextItemRequest>; type?: \"rich_text\" }\n        | { number: number | null; type?: \"number\" }\n        | { url: TextRequest | null; type?: \"url\" }\n        | {\n            select:\n              | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n              | null\n              | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n              | null\n            type?: \"select\"\n          }\n        | {\n            multi_select: Array<\n              | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n              | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n            >\n            type?: \"multi_select\"\n          }\n        | {\n            people: Array<\n              | { id: IdRequest }\n              | {\n                  person: { email?: string }\n                  id: IdRequest\n                  type?: \"person\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n              | {\n                  bot:\n                    | EmptyObject\n                    | {\n                        owner:\n                          | {\n                              type: \"user\"\n                              user:\n                                | {\n                                    type: \"person\"\n                                    person: { email: string }\n                                    name: string | null\n                                    avatar_url: string | null\n                                    id: IdRequest\n                                    object: \"user\"\n                                  }\n                                | PartialUserObjectResponse\n                            }\n                          | { type: \"workspace\"; workspace: true }\n                        workspace_name: string | null\n                      }\n                  id: IdRequest\n                  type?: \"bot\"\n                  name?: string | null\n                  avatar_url?: string | null\n                  object?: \"user\"\n                }\n            >\n            type?: \"people\"\n          }\n        | { email: StringRequest | null; type?: \"email\" }\n        | { phone_number: StringRequest | null; type?: \"phone_number\" }\n        | { date: DateRequest | null; type?: \"date\" }\n        | { checkbox: boolean; type?: \"checkbox\" }\n        | { relation: Array<{ id: IdRequest }>; type?: \"relation\" }\n        | {\n            files: Array<\n              | {\n                  file: { url: string; expiry_time?: string }\n                  name: StringRequest\n                  type?: \"file\"\n                }\n              | {\n                  external: { url: TextRequest }\n                  name: StringRequest\n                  type?: \"external\"\n                }\n            >\n            type?: \"files\"\n          }\n        | {\n            status:\n              | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n              | null\n              | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n              | null\n            type?: \"status\"\n          }\n      >\n    | Record<\n        string,\n        | Array<RichTextItemRequest>\n        | Array<RichTextItemRequest>\n        | number\n        | null\n        | TextRequest\n        | null\n        | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n        | null\n        | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n        | null\n        | Array<\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n          >\n        | Array<\n            | { id: IdRequest }\n            | {\n                person: { email?: string }\n                id: IdRequest\n                type?: \"person\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n            | {\n                bot:\n                  | EmptyObject\n                  | {\n                      owner:\n                        | {\n                            type: \"user\"\n                            user:\n                              | {\n                                  type: \"person\"\n                                  person: { email: string }\n                                  name: string | null\n                                  avatar_url: string | null\n                                  id: IdRequest\n                                  object: \"user\"\n                                }\n                              | PartialUserObjectResponse\n                          }\n                        | { type: \"workspace\"; workspace: true }\n                      workspace_name: string | null\n                    }\n                id: IdRequest\n                type?: \"bot\"\n                name?: string | null\n                avatar_url?: string | null\n                object?: \"user\"\n              }\n          >\n        | StringRequest\n        | null\n        | StringRequest\n        | null\n        | DateRequest\n        | null\n        | boolean\n        | Array<{ id: IdRequest }>\n        | Array<\n            | {\n                file: { url: string; expiry_time?: string }\n                name: StringRequest\n                type?: \"file\"\n              }\n            | {\n                external: { url: TextRequest }\n                name: StringRequest\n                type?: \"external\"\n              }\n          >\n        | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n        | null\n        | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n        | null\n      >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  archived?: boolean\n}\n\nexport type UpdatePageParameters = UpdatePagePathParameters &\n  UpdatePageBodyParameters\n\nexport type UpdatePageResponse = PageObjectResponse | PartialPageObjectResponse\n\nexport const updatePage = {\n  method: \"patch\",\n  pathParams: [\"page_id\"],\n  queryParams: [],\n  bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\"],\n  path: (p: UpdatePagePathParameters): string => `pages/${p.page_id}`,\n} as const\n\ntype GetPagePropertyPathParameters = {\n  page_id: IdRequest\n  property_id: string\n}\n\ntype GetPagePropertyQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type GetPagePropertyParameters = GetPagePropertyPathParameters &\n  GetPagePropertyQueryParameters\n\nexport type GetPagePropertyResponse =\n  | PropertyItemObjectResponse\n  | PropertyItemListResponse\n\nexport const getPageProperty = {\n  method: \"get\",\n  pathParams: [\"page_id\", \"property_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (p: GetPagePropertyPathParameters): string =>\n    `pages/${p.page_id}/properties/${p.property_id}`,\n} as const\n\ntype GetBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type GetBlockParameters = GetBlockPathParameters\n\nexport type GetBlockResponse = PartialBlockObjectResponse | BlockObjectResponse\n\nexport const getBlock = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype UpdateBlockPathParameters = {\n  block_id: IdRequest\n}\n\ntype UpdateBlockBodyParameters =\n  | {\n      embed: { url?: string; caption?: Array<RichTextItemRequest> }\n      type?: \"embed\"\n      archived?: boolean\n    }\n  | {\n      bookmark: { url?: string; caption?: Array<RichTextItemRequest> }\n      type?: \"bookmark\"\n      archived?: boolean\n    }\n  | {\n      image: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"image\"\n      archived?: boolean\n    }\n  | {\n      video: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"video\"\n      archived?: boolean\n    }\n  | {\n      pdf: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"pdf\"\n      archived?: boolean\n    }\n  | {\n      file: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"file\"\n      archived?: boolean\n    }\n  | {\n      audio: {\n        caption?: Array<RichTextItemRequest>\n        external?: { url: TextRequest }\n      }\n      type?: \"audio\"\n      archived?: boolean\n    }\n  | {\n      code: {\n        rich_text?: Array<RichTextItemRequest>\n        language?: LanguageRequest\n        caption?: Array<RichTextItemRequest>\n      }\n      type?: \"code\"\n      archived?: boolean\n    }\n  | { equation: { expression: string }; type?: \"equation\"; archived?: boolean }\n  | { divider: EmptyObject; type?: \"divider\"; archived?: boolean }\n  | { breadcrumb: EmptyObject; type?: \"breadcrumb\"; archived?: boolean }\n  | {\n      table_of_contents: { color?: ApiColor }\n      type?: \"table_of_contents\"\n      archived?: boolean\n    }\n  | {\n      link_to_page:\n        | { page_id: IdRequest; type?: \"page_id\" }\n        | { database_id: IdRequest; type?: \"database_id\" }\n        | { comment_id: IdRequest; type?: \"comment_id\" }\n      type?: \"link_to_page\"\n      archived?: boolean\n    }\n  | {\n      table_row: { cells: Array<Array<RichTextItemRequest>> }\n      type?: \"table_row\"\n      archived?: boolean\n    }\n  | {\n      heading_1: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_1\"\n      archived?: boolean\n    }\n  | {\n      heading_2: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_2\"\n      archived?: boolean\n    }\n  | {\n      heading_3: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n        is_toggleable?: boolean\n      }\n      type?: \"heading_3\"\n      archived?: boolean\n    }\n  | {\n      paragraph: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"paragraph\"\n      archived?: boolean\n    }\n  | {\n      bulleted_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"bulleted_list_item\"\n      archived?: boolean\n    }\n  | {\n      numbered_list_item: {\n        rich_text: Array<RichTextItemRequest>\n        color?: ApiColor\n      }\n      type?: \"numbered_list_item\"\n      archived?: boolean\n    }\n  | {\n      quote: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"quote\"\n      archived?: boolean\n    }\n  | {\n      to_do: {\n        rich_text?: Array<RichTextItemRequest>\n        checked?: boolean\n        color?: ApiColor\n      }\n      type?: \"to_do\"\n      archived?: boolean\n    }\n  | {\n      toggle: { rich_text: Array<RichTextItemRequest>; color?: ApiColor }\n      type?: \"toggle\"\n      archived?: boolean\n    }\n  | {\n      template: { rich_text: Array<RichTextItemRequest> }\n      type?: \"template\"\n      archived?: boolean\n    }\n  | {\n      callout: {\n        rich_text?: Array<RichTextItemRequest>\n        icon?:\n          | { emoji: EmojiRequest; type?: \"emoji\" }\n          | { external: { url: TextRequest }; type?: \"external\" }\n        color?: ApiColor\n      }\n      type?: \"callout\"\n      archived?: boolean\n    }\n  | {\n      synced_block: {\n        synced_from: { block_id: IdRequest; type?: \"block_id\" } | null\n      }\n      type?: \"synced_block\"\n      archived?: boolean\n    }\n  | {\n      table: { has_column_header?: boolean; has_row_header?: boolean }\n      type?: \"table\"\n      archived?: boolean\n    }\n  | { archived?: boolean }\n\nexport type UpdateBlockParameters = UpdateBlockPathParameters &\n  UpdateBlockBodyParameters\n\nexport type UpdateBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\nexport const updateBlock = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"embed\",\n    \"type\",\n    \"archived\",\n    \"bookmark\",\n    \"image\",\n    \"video\",\n    \"pdf\",\n    \"file\",\n    \"audio\",\n    \"code\",\n    \"equation\",\n    \"divider\",\n    \"breadcrumb\",\n    \"table_of_contents\",\n    \"link_to_page\",\n    \"table_row\",\n    \"heading_1\",\n    \"heading_2\",\n    \"heading_3\",\n    \"paragraph\",\n    \"bulleted_list_item\",\n    \"numbered_list_item\",\n    \"quote\",\n    \"to_do\",\n    \"toggle\",\n    \"template\",\n    \"callout\",\n    \"synced_block\",\n    \"table\",\n  ],\n  path: (p: UpdateBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype DeleteBlockPathParameters = {\n  block_id: IdRequest\n}\n\nexport type DeleteBlockParameters = DeleteBlockPathParameters\n\nexport type DeleteBlockResponse =\n  | PartialBlockObjectResponse\n  | BlockObjectResponse\n\nexport const deleteBlock = {\n  method: \"delete\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: DeleteBlockPathParameters): string => `blocks/${p.block_id}`,\n} as const\n\ntype ListBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype ListBlockChildrenQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListBlockChildrenParameters = ListBlockChildrenPathParameters &\n  ListBlockChildrenQueryParameters\n\nexport type ListBlockChildrenResponse = {\n  type: \"block\"\n  block: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n}\n\nexport const listBlockChildren = {\n  method: \"get\",\n  pathParams: [\"block_id\"],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (p: ListBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype AppendBlockChildrenPathParameters = {\n  block_id: IdRequest\n}\n\ntype AppendBlockChildrenBodyParameters = { children: Array<BlockObjectRequest> }\n\nexport type AppendBlockChildrenParameters = AppendBlockChildrenPathParameters &\n  AppendBlockChildrenBodyParameters\n\nexport type AppendBlockChildrenResponse = {\n  type: \"block\"\n  block: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialBlockObjectResponse | BlockObjectResponse>\n}\n\nexport const appendBlockChildren = {\n  method: \"patch\",\n  pathParams: [\"block_id\"],\n  queryParams: [],\n  bodyParams: [\"children\"],\n  path: (p: AppendBlockChildrenPathParameters): string =>\n    `blocks/${p.block_id}/children`,\n} as const\n\ntype GetDatabasePathParameters = {\n  database_id: IdRequest\n}\n\nexport type GetDatabaseParameters = GetDatabasePathParameters\n\nexport type GetDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\nexport const getDatabase = {\n  method: \"get\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetDatabasePathParameters): string => `databases/${p.database_id}`,\n} as const\n\ntype UpdateDatabasePathParameters = {\n  database_id: IdRequest\n}\n\ntype UpdateDatabaseBodyParameters = {\n  title?: Array<RichTextItemRequest>\n  description?: Array<RichTextItemRequest>\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  properties?: Record<\n    string,\n    | { number: { format?: NumberFormat }; type?: \"number\"; name?: string }\n    | null\n    | { formula: { expression?: string }; type?: \"formula\"; name?: string }\n    | null\n    | {\n        select: {\n          options?: Array<\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n          >\n        }\n        type?: \"select\"\n        name?: string\n      }\n    | null\n    | {\n        multi_select: {\n          options?: Array<\n            | { id: StringRequest; name?: StringRequest; color?: SelectColor }\n            | { name: StringRequest; id?: StringRequest; color?: SelectColor }\n          >\n        }\n        type?: \"multi_select\"\n        name?: string\n      }\n    | null\n    | { status: EmptyObject; type?: \"status\"; name?: string }\n    | null\n    | {\n        relation:\n          | {\n              single_property: EmptyObject\n              database_id: IdRequest\n              type?: \"single_property\"\n            }\n          | {\n              dual_property: Record<string, never>\n              database_id: IdRequest\n              type?: \"dual_property\"\n            }\n        type?: \"relation\"\n        name?: string\n      }\n    | null\n    | {\n        rollup:\n          | {\n              rollup_property_name: string\n              relation_property_name: string\n              function: RollupFunction\n              rollup_property_id?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_name: string\n              relation_property_id: string\n              function: RollupFunction\n              relation_property_name?: string\n              rollup_property_id?: string\n            }\n          | {\n              relation_property_name: string\n              rollup_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_name?: string\n            }\n        type?: \"rollup\"\n        name?: string\n      }\n    | null\n    | { title: EmptyObject; type?: \"title\"; name?: string }\n    | null\n    | { rich_text: EmptyObject; type?: \"rich_text\"; name?: string }\n    | null\n    | { url: EmptyObject; type?: \"url\"; name?: string }\n    | null\n    | { people: EmptyObject; type?: \"people\"; name?: string }\n    | null\n    | { files: EmptyObject; type?: \"files\"; name?: string }\n    | null\n    | { email: EmptyObject; type?: \"email\"; name?: string }\n    | null\n    | { phone_number: EmptyObject; type?: \"phone_number\"; name?: string }\n    | null\n    | { date: EmptyObject; type?: \"date\"; name?: string }\n    | null\n    | { checkbox: EmptyObject; type?: \"checkbox\"; name?: string }\n    | null\n    | { created_by: EmptyObject; type?: \"created_by\"; name?: string }\n    | null\n    | { created_time: EmptyObject; type?: \"created_time\"; name?: string }\n    | null\n    | { last_edited_by: EmptyObject; type?: \"last_edited_by\"; name?: string }\n    | null\n    | {\n        last_edited_time: EmptyObject\n        type?: \"last_edited_time\"\n        name?: string\n      }\n    | null\n    | { name: string }\n    | null\n  >\n  is_inline?: boolean\n  archived?: boolean\n}\n\nexport type UpdateDatabaseParameters = UpdateDatabasePathParameters &\n  UpdateDatabaseBodyParameters\n\nexport type UpdateDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\nexport const updateDatabase = {\n  method: \"patch\",\n  pathParams: [\"database_id\"],\n  queryParams: [],\n  bodyParams: [\n    \"title\",\n    \"description\",\n    \"icon\",\n    \"cover\",\n    \"properties\",\n    \"is_inline\",\n    \"archived\",\n  ],\n  path: (p: UpdateDatabasePathParameters): string =>\n    `databases/${p.database_id}`,\n} as const\n\ntype QueryDatabasePathParameters = {\n  database_id: IdRequest\n}\n\ntype QueryDatabaseQueryParameters = {\n  filter_properties?: Array<string>\n}\n\ntype QueryDatabaseBodyParameters = {\n  sorts?: Array<\n    | { property: string; direction: \"ascending\" | \"descending\" }\n    | {\n        timestamp: \"created_time\" | \"last_edited_time\"\n        direction: \"ascending\" | \"descending\"\n      }\n  >\n  filter?:\n    | {\n        or: Array<\n          | PropertyFilter\n          | TimestampCreatedTimeFilter\n          | TimestampLastEditedTimeFilter\n          | { or: Array<PropertyFilter> }\n          | { and: Array<PropertyFilter> }\n        >\n      }\n    | {\n        and: Array<\n          | PropertyFilter\n          | TimestampCreatedTimeFilter\n          | TimestampLastEditedTimeFilter\n          | { or: Array<PropertyFilter> }\n          | { and: Array<PropertyFilter> }\n        >\n      }\n    | PropertyFilter\n    | TimestampCreatedTimeFilter\n    | TimestampLastEditedTimeFilter\n  start_cursor?: string\n  page_size?: number\n  archived?: boolean\n}\n\nexport type QueryDatabaseParameters = QueryDatabasePathParameters &\n  QueryDatabaseQueryParameters &\n  QueryDatabaseBodyParameters\n\nexport type QueryDatabaseResponse = {\n  type: \"page\"\n  page: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PageObjectResponse | PartialPageObjectResponse>\n}\n\nexport const queryDatabase = {\n  method: \"post\",\n  pathParams: [\"database_id\"],\n  queryParams: [\"filter_properties\"],\n  bodyParams: [\"sorts\", \"filter\", \"start_cursor\", \"page_size\", \"archived\"],\n  path: (p: QueryDatabasePathParameters): string =>\n    `databases/${p.database_id}/query`,\n} as const\n\ntype ListDatabasesQueryParameters = {\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListDatabasesParameters = ListDatabasesQueryParameters\n\nexport type ListDatabasesResponse = {\n  type: \"database\"\n  database: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<PartialDatabaseObjectResponse | DatabaseObjectResponse>\n}\n\nexport const listDatabases = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `databases`,\n} as const\n\ntype CreateDatabaseBodyParameters = {\n  parent: { page_id: IdRequest; type?: \"page_id\" }\n  properties: Record<\n    string,\n    | { number: { format?: NumberFormat }; type?: \"number\" }\n    | { formula: { expression?: string }; type?: \"formula\" }\n    | {\n        select: {\n          options?: Array<{ name: StringRequest; color?: SelectColor }>\n        }\n        type?: \"select\"\n      }\n    | {\n        multi_select: {\n          options?: Array<{ name: StringRequest; color?: SelectColor }>\n        }\n        type?: \"multi_select\"\n      }\n    | { status: EmptyObject; type?: \"status\" }\n    | {\n        relation:\n          | {\n              single_property: EmptyObject\n              database_id: IdRequest\n              type?: \"single_property\"\n            }\n          | {\n              dual_property: Record<string, never>\n              database_id: IdRequest\n              type?: \"dual_property\"\n            }\n        type?: \"relation\"\n      }\n    | {\n        rollup:\n          | {\n              rollup_property_name: string\n              relation_property_name: string\n              function: RollupFunction\n              rollup_property_id?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_name: string\n              relation_property_id: string\n              function: RollupFunction\n              relation_property_name?: string\n              rollup_property_id?: string\n            }\n          | {\n              relation_property_name: string\n              rollup_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_id?: string\n            }\n          | {\n              rollup_property_id: string\n              relation_property_id: string\n              function: RollupFunction\n              rollup_property_name?: string\n              relation_property_name?: string\n            }\n        type?: \"rollup\"\n      }\n    | { title: EmptyObject; type?: \"title\" }\n    | { rich_text: EmptyObject; type?: \"rich_text\" }\n    | { url: EmptyObject; type?: \"url\" }\n    | { people: EmptyObject; type?: \"people\" }\n    | { files: EmptyObject; type?: \"files\" }\n    | { email: EmptyObject; type?: \"email\" }\n    | { phone_number: EmptyObject; type?: \"phone_number\" }\n    | { date: EmptyObject; type?: \"date\" }\n    | { checkbox: EmptyObject; type?: \"checkbox\" }\n    | { created_by: EmptyObject; type?: \"created_by\" }\n    | { created_time: EmptyObject; type?: \"created_time\" }\n    | { last_edited_by: EmptyObject; type?: \"last_edited_by\" }\n    | { last_edited_time: EmptyObject; type?: \"last_edited_time\" }\n  >\n  icon?:\n    | { emoji: EmojiRequest; type?: \"emoji\" }\n    | null\n    | { external: { url: TextRequest }; type?: \"external\" }\n    | null\n  cover?: { external: { url: TextRequest }; type?: \"external\" } | null\n  title?: Array<RichTextItemRequest>\n  description?: Array<RichTextItemRequest>\n  is_inline?: boolean\n}\n\nexport type CreateDatabaseParameters = CreateDatabaseBodyParameters\n\nexport type CreateDatabaseResponse =\n  | PartialDatabaseObjectResponse\n  | DatabaseObjectResponse\n\nexport const createDatabase = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    \"parent\",\n    \"properties\",\n    \"icon\",\n    \"cover\",\n    \"title\",\n    \"description\",\n    \"is_inline\",\n  ],\n  path: (): string => `databases`,\n} as const\n\ntype SearchBodyParameters = {\n  sort?: {\n    timestamp: \"last_edited_time\"\n    direction: \"ascending\" | \"descending\"\n  }\n  query?: string\n  start_cursor?: string\n  page_size?: number\n  filter?: { property: \"object\"; value: \"page\" | \"database\" }\n}\n\nexport type SearchParameters = SearchBodyParameters\n\nexport type SearchResponse = {\n  type: \"page_or_database\"\n  page_or_database: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<\n    | PageObjectResponse\n    | PartialPageObjectResponse\n    | PartialDatabaseObjectResponse\n    | DatabaseObjectResponse\n  >\n}\n\nexport const search = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n  path: (): string => `search`,\n} as const\n\ntype CreateCommentBodyParameters =\n  | {\n      parent: { page_id: IdRequest; type?: \"page_id\" }\n      rich_text: Array<RichTextItemRequest>\n    }\n  | { discussion_id: IdRequest; rich_text: Array<RichTextItemRequest> }\n\nexport type CreateCommentParameters = CreateCommentBodyParameters\n\nexport type CreateCommentResponse =\n  | CommentObjectResponse\n  | PartialCommentObjectResponse\n\nexport const createComment = {\n  method: \"post\",\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\"parent\", \"rich_text\", \"discussion_id\"],\n  path: (): string => `comments`,\n} as const\n\ntype ListCommentsQueryParameters = {\n  block_id: IdRequest\n  start_cursor?: string\n  page_size?: number\n}\n\nexport type ListCommentsParameters = ListCommentsQueryParameters\n\nexport type ListCommentsResponse = {\n  type: \"comment\"\n  comment: EmptyObject\n  object: \"list\"\n  next_cursor: string | null\n  has_more: boolean\n  results: Array<CommentObjectResponse>\n}\n\nexport const listComments = {\n  method: \"get\",\n  pathParams: [],\n  queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n  bodyParams: [],\n  path: (): string => `comments`,\n} as const\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","{\n    \"name\": \"@notionhq/client\",\n    \"version\": \"2.2.3\",\n    \"description\": \"A simple and easy to use client for the Notion API\",\n    \"engines\": {\n        \"node\": \">=12\"\n    },\n    \"homepage\": \"https://developers.notion.com/docs/getting-started\",\n    \"bugs\": {\n        \"url\": \"https://github.com/makenotion/notion-sdk-js/issues\"\n    },\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/makenotion/notion-sdk-js/\"\n    },\n    \"keywords\": [\n        \"notion\",\n        \"notionapi\",\n        \"rest\",\n        \"notion-api\"\n    ],\n    \"main\": \"./build/src\",\n    \"types\": \"./build/src/index.d.ts\",\n    \"scripts\": {\n        \"prepare\": \"npm run build\",\n        \"prepublishOnly\": \"npm run checkLoggedIn && npm run lint && npm run test\",\n        \"build\": \"tsc\",\n        \"prettier\": \"prettier --write .\",\n        \"lint\": \"prettier --check . && eslint . --ext .ts && cspell '**/*' \",\n        \"test\": \"jest ./test\",\n        \"check-links\": \"git ls-files | grep md$ | xargs -n 1 markdown-link-check\",\n        \"prebuild\": \"npm run clean\",\n        \"clean\": \"rm -rf ./build\",\n        \"checkLoggedIn\": \"./scripts/verifyLoggedIn.sh\"\n    },\n    \"author\": \"\",\n    \"license\": \"MIT\",\n    \"files\": [\n        \"build/package.json\",\n        \"build/src/**\"\n    ],\n    \"dependencies\": {\n        \"@types/node-fetch\": \"^2.5.10\",\n        \"node-fetch\": \"^2.6.1\"\n    },\n    \"devDependencies\": {\n        \"@types/jest\": \"^28.1.4\",\n        \"@typescript-eslint/eslint-plugin\": \"^5.39.0\",\n        \"@typescript-eslint/parser\": \"^5.39.0\",\n        \"cspell\": \"^5.4.1\",\n        \"eslint\": \"^7.24.0\",\n        \"jest\": \"^28.1.2\",\n        \"markdown-link-check\": \"^3.8.7\",\n        \"prettier\": \"^2.3.0\",\n        \"ts-jest\": \"^28.0.5\",\n        \"typescript\": \"^4.8.4\"\n    }\n}\n",null,"import {\n  BlockObjectResponse,\n  CommentObjectResponse,\n  DatabaseObjectResponse,\n  PageObjectResponse,\n  PartialBlockObjectResponse,\n  PartialCommentObjectResponse,\n  PartialDatabaseObjectResponse,\n  PartialPageObjectResponse,\n  PartialUserObjectResponse,\n  UserObjectResponse,\n} from \"./api-endpoints\"\n\ninterface PaginatedArgs {\n  start_cursor?: string\n}\n\ninterface PaginatedList<T> {\n  object: \"list\"\n  results: T[]\n  next_cursor: string | null\n  has_more: boolean\n}\n\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nexport async function* iteratePaginatedAPI<Args extends PaginatedArgs, Item>(\n  listFn: (args: Args) => Promise<PaginatedList<Item>>,\n  firstPageArgs: Args\n): AsyncIterableIterator<Item> {\n  let nextCursor: string | null | undefined = firstPageArgs.start_cursor\n  do {\n    const response: PaginatedList<Item> = await listFn({\n      ...firstPageArgs,\n      start_cursor: nextCursor,\n    })\n    yield* response.results\n    nextCursor = response.next_cursor\n  } while (nextCursor)\n}\n\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nexport async function collectPaginatedAPI<Args extends PaginatedArgs, Item>(\n  listFn: (args: Args) => Promise<PaginatedList<Item>>,\n  firstPageArgs: Args\n): Promise<Item[]> {\n  const results: Item[] = []\n  for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n    results.push(item)\n  }\n  return results\n}\n\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nexport function isFullBlock(\n  response: BlockObjectResponse | PartialBlockObjectResponse\n): response is BlockObjectResponse {\n  return \"type\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nexport function isFullPage(\n  response: PageObjectResponse | PartialPageObjectResponse\n): response is PageObjectResponse {\n  return \"url\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nexport function isFullDatabase(\n  response: DatabaseObjectResponse | PartialDatabaseObjectResponse\n): response is DatabaseObjectResponse {\n  return \"title\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nexport function isFullUser(\n  response: UserObjectResponse | PartialUserObjectResponse\n): response is UserObjectResponse {\n  return \"type\" in response\n}\n\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nexport function isFullComment(\n  response: CommentObjectResponse | PartialCommentObjectResponse\n): response is CommentObjectResponse {\n  return \"created_by\" in response\n}\n"],"names":[],"version":3,"file":"index.dd4b8d0f.js.map","sourceRoot":"/__parcel_source_root/"}